name: Update CITATION.cff version and create a new release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version'
        required: true

jobs:
  update-version-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check if branch is main
        if: github.ref != 'refs/heads/main'
        run: |
          echo "This workflow can only be run from the main branch."
          exit 1

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get the latest release version from GitHub
        id: get_latest_release
        run: |
          LATEST_RELEASE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/latest" | \
          jq -r .tag_name)
          echo "Latest release version is $LATEST_RELEASE"
          echo "::set-output name=latest_release::$LATEST_RELEASE"

      - name: Install SemVer
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          npm install -g semver

      - name: Compare new version with latest release
        run: |
          NEW_VERSION="${{ github.event.inputs.version }}"
          LATEST_RELEASE="${{ steps.get_latest_release.outputs.latest_release }}"
          
          echo "New Version: $NEW_VERSION"
          echo "Latest Release: $LATEST_RELEASE"

          # Compare versions using SemVer
          if semver -r "$LATEST_RELEASE" "$NEW_VERSION"; then
            echo "New version ($NEW_VERSION) is greater than latest release ($LATEST_RELEASE)"
          else
            echo "New version ($NEW_VERSION) is not greater than latest release ($LATEST_RELEASE)!"
            exit 1
          fi

      - name: Update version
        run: |
          sed -i "s/^version: .*/version: ${{ github.event.inputs.version }}/" CITATION.cff

      - name: Commit changes to a new branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout -b update-version-${{ github.event.inputs.version }}
          git commit -am "Update CITATION.cff version to ${{ github.event.inputs.version }}"
          git push origin update-version-${{ github.event.inputs.version }}

      - name: Create pull request
        uses: actions/github-script@v6
        with:
          script: |
            const version = github.inputs.version;
            github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Update CITATION.cff version to ${version}`,
              head: `update-version-${version}`,
              base: `main`,
              body: `This PR updates the CITATION.cff version to ${version}`
            })
