DEBUG - ===== GROUP (// [NXroot::]): <HDF5 file "output.nxs" (mode r)>
DEBUG - classpath: ['']
DEBUG - classes:
NXroot.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXroot.nxdl.xml:):
DEBUG - 
        The root of a NeXus file.

        In the NeXus standard, only NXentry groups are allowed at the
        root level of a file, although it is permitted to include
        additional groups and fields that are not part of the NeXus
        standard and will not be validated by NeXus tools. NeXus defines
        a number of root-level attributes that can be used to annotate
        the NeXus tree.

        Note that NXroot is the only base class that does not inherit
        from the NXobject class, since the latter permits the inclusion
        of NeXus objects that are not allowed at the root level.
    
DEBUG - ===== ATTRS (//@HDF5_Version)
DEBUG - value: 1.14.2 
DEBUG - classpath: ['']
DEBUG - classes:
NXroot.nxdl.xml:
DEBUG - NXroot.nxdl.xml:@HDF5_Version - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXroot.nxdl.xml:/HDF5_Version):
DEBUG - 
            Version of HDF5 library used in writing the file.

            Note this attribute is spelled with uppercase "V",
            different than other version attributes.
        
DEBUG - ===== ATTRS (//@NX_class)
DEBUG - value: NXroot 
DEBUG - classpath: ['']
DEBUG - classes:
NXroot.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//@NeXus_release)
DEBUG - value: v2024.02.post1.dev1989+gc0f643ac 
DEBUG - classpath: ['']
DEBUG - classes:
NXroot.nxdl.xml:
DEBUG - NXroot.nxdl.xml:@NeXus_release - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXroot.nxdl.xml:/NeXus_release):
DEBUG - 
            The version of NeXus definitions used in writing the file. This can either be a date-based
            NeXus release (e.g., YYYY.MM), see https://github.com/nexusformat/definitions/releases or
            a version tag that includes additional development information, such as a commit distance and
            a Git hash. This is typically formatted as  `vYYYY.MM.post1.dev<commit-distance>-g<git-hash>`,
            where `YYYY.MM` refers to the base version of the NeXus definitions. `post1.dev<commit-distance>` 
            indicates that the definitions are based on a commit after the base version (post1), with
            `<commit-distance>` being the number of commits since that version. `g<git-hash>` is the 
            abbreviated Git hash that identifies the specific commit of the definitions being used.

            If the version includes both a commit distance and a Git hash, the ``NeXus_repository`` 
            attribute must be included, specifying the URL of the repository containing that version.
        
DEBUG - ===== ATTRS (//@NeXus_repository)
DEBUG - value: https://github.com/FAIRmat-NFDI/nexus_definitions/blob/c0f643ac 
DEBUG - classpath: ['']
DEBUG - classes:
NXroot.nxdl.xml:
DEBUG - NXroot.nxdl.xml:@NeXus_repository - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXroot.nxdl.xml:/NeXus_repository):
DEBUG - 
            A repository containing the application definitions
            used for creating this file.
            If the ``NeXus_release`` attribute contains a commit distance and hash,
            this should refer to this repository.
        
DEBUG - ===== ATTRS (//@default)
DEBUG - value: Au_in_vacuum__Au4f 
DEBUG - classpath: ['']
DEBUG - classes:
NXroot.nxdl.xml:
DEBUG - NXroot.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXroot.nxdl.xml:/default):
DEBUG - 
            .. index:: find the default plottable data
            .. index:: plotting
            .. index:: default attribute value

            Declares which :ref:`NXentry` group contains
            the data to be shown by default.
            It is used to resolve ambiguity when
            more than one :ref:`NXentry` group exists.
            The value :ref:`names <validItemName>` the default :ref:`NXentry` group.  The
            value must be the name of a child of the current group. The child must be a
            NeXus group or a link to a NeXus group.

            It is recommended (as of NIAC2014) to use this attribute
            to help define the path to the default dataset to be plotted.
            See https://www.nexusformat.org/2014_How_to_find_default_data.html
            for a summary of the discussion.
        
DEBUG - ===== ATTRS (//@file_name)
DEBUG - value: output.nxs 
DEBUG - classpath: ['']
DEBUG - classes:
NXroot.nxdl.xml:
DEBUG - NXroot.nxdl.xml:@file_name - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXroot.nxdl.xml:/file_name):
DEBUG - File name of original NeXus file
DEBUG - ===== ATTRS (//@file_time)
DEBUG - value: 2025-08-01 17:11:41.351071+02:00 
DEBUG - classpath: ['']
DEBUG - classes:
NXroot.nxdl.xml:
DEBUG - NXroot.nxdl.xml:@file_time - [NX_DATE_TIME]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXroot.nxdl.xml:/file_time):
DEBUG - Date and time file was originally created
DEBUG - ===== ATTRS (//@file_update_time)
DEBUG - value: 2025-08-01 17:11:41.351071+02:00 
DEBUG - classpath: ['']
DEBUG - classes:
NXroot.nxdl.xml:
DEBUG - NXroot.nxdl.xml:@file_update_time - [NX_DATE_TIME]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXroot.nxdl.xml:/file_update_time):
DEBUG - Date and time of last file change at close
DEBUG - ===== ATTRS (//@h5py_version)
DEBUG - value: 3.11.0 
DEBUG - classpath: ['']
DEBUG - classes:
NXroot.nxdl.xml:
DEBUG - NXroot.nxdl.xml:@h5py_version - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXroot.nxdl.xml:/h5py_version):
DEBUG - Version of h5py Python package used in writing the file
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f [NXxps::/NXentry]): <HDF5 group "/Au_in_25mBar_O2__Au4f" (16 members)>
DEBUG - classpath: ['NXentry']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY
NXmpes.nxdl.xml:/ENTRY
NXentry.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY):
DEBUG - 
DEBUG - documentation (NXentry.nxdl.xml:):
DEBUG - 
		(**required**) :ref:`NXentry` describes the measurement.

		The top-level NeXus group which contains all the data and associated
		information that comprise a single measurement.
		It is mandatory that there is at least one
		group of this type in the NeXus file.	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f@NX_class)
DEBUG - value: NXentry 
DEBUG - classpath: ['NXentry']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY
NXmpes.nxdl.xml:/ENTRY
NXentry.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f@default)
DEBUG - value: data 
DEBUG - classpath: ['NXentry']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY
NXmpes.nxdl.xml:/ENTRY
NXentry.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXxps.nxdl.xml:/ENTRY@default - [NX_CHAR]
DEBUG - NXmpes.nxdl.xml:/ENTRY@default - [NX_CHAR]
DEBUG - NXentry.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXentry.nxdl.xml:/default):
DEBUG - 
			.. index:: find the default plottable data
			.. index:: plotting
			.. index:: default attribute value

			Declares which :ref:`NXdata` group contains the data
			to be shown by default.
			It is used to resolve ambiguity when
			one :ref:`NXdata` group exists.
			The value :ref:`names <validItemName>` a child group.  If that group
			itself has a ``default`` attribute, continue this chain until an
			:ref:`NXdata` group is reached.

			For more information about how NeXus identifies the default
			plottable data, see the
			:ref:`Find Plottable Data, v3 <Find-Plottable-Data-v3>`
			section.
		
DEBUG - NXobject.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXobject.nxdl.xml:/default):
DEBUG - 
			.. index:: plotting

			Declares which child group contains a path leading
			to a :ref:`NXdata` group or a group using a base class
			extending :ref:`NXdata`.

			It is recommended (as of NIAC2014) to use this attribute
			to help define the path to the default dataset to be plotted.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/data [NXxps::/NXentry/NXdata]): <HDF5 group "/Au_in_25mBar_O2__Au4f/data" (303 members)>
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/DATA
NXmpes.nxdl.xml:/ENTRY/DATA
NXentry.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/DATA):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/DATA):
DEBUG - 
                The NXdata group containing a view on the measured data.

                This NXdata group contains a collection of the main relevant fields (axes).
                Axes should be named according to the conventions defined below. Note that this
                list is a glossary with explicitly named axis names, which is only intended to cover
                the most common measurement axes and is therefore not complete. It is possible to add
                axes with other names at any time.

                In NXmpes, it is recommended to provide an energy axis.
            
DEBUG - documentation (NXentry.nxdl.xml:/DATA):
DEBUG - 
			The data group

			.. note:: Before the NIAC2016 meeting [#]_, at least one
			   :ref:`NXdata` group was required in each :ref:`NXentry` group.
			   At the NIAC2016 meeting, it was decided to make :ref:`NXdata`
			   an optional group in :ref:`NXentry` groups for data files that
			   do not use an application definition.
			   It is recommended strongly that all NeXus data files provide
			   a NXdata group.
			   It is permissible to omit the NXdata group only when
			   defining the default plot is not practical or possible
			   from the available data.

			   For example, neutron event data may not have anything that
			   makes a useful plot without extensive processing.

			   Certain application definitions override this decision and
			   require an :ref:`NXdata` group
			   in the :ref:`NXentry` group.  The ``minOccurs=0`` attribute
			   in the application definition will indicate the
			   :ref:`NXdata` group
			   is optional, otherwise, it is required.

			   .. [#] NIAC2016:
			      https://www.nexusformat.org/NIAC2016.html,
			      https://github.com/nexusformat/NIAC/issues/16

		
DEBUG - documentation (NXobject.nxdl.xml:/DATA):
DEBUG - 
DEBUG - documentation (NXdata.nxdl.xml:):
DEBUG - 
		The :ref:`NXdata` class is designed to encapsulate all the information required for a set of data to be plotted.
		NXdata groups contain plottable data (also referred to as *signals* or *dependent variables*) and their
		associated axis coordinates (also referred to as *axes* or *independent variables*).

		The actual names of the :ref:`DATA </NXdata/DATA-field>` and :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
		can be chosen :ref:`freely <validItemName>`, as indicated by the upper case (this is a common convention in all NeXus classes).
		
		.. note:: ``NXdata`` provides data and coordinates to be plotted but
			does not describe how the data is to be plotted or even the dimensionality of the plot.
			https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute

		.. include:: data/index.rst
		   :start-line: 1

		.. admonition:: Example of a simple curve plot

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x"]
				  data: float[100]
				  x: float[100]

		More complex cases are supported

		* histogram data: ``x`` has one more value than ``data``.
		* alternative axes: instead of a single ``x`` axis you can have several axes, one of which being the default.
		* signals with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` along each dimension.
		* axes with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` also being 2D, providing a
		  unique ``(x, y)`` coordinate for each ``data`` point.

		**Signals:**

		.. index:: plotting

		.. admonition:: Defined by

			* :ref:`DATA </NXdata/DATA-field>` fields
			* the :ref:`signal </NXdata@signal-attribute>` attribute
			* the :ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute

		The :ref:`DATA </NXdata/DATA-field>` fields contain the signal values to be plotted. The name of the field
		to be used as the *default plot signal* is provided by the :ref:`signal </NXdata@signal-attribute>` attribute.
		The names of the fields to be used as *secondary plot signals* are provided by the
		:ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute.

		.. admonition:: An example with three signals, one of which being the default

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  data1: float[10,20,30]  # the default signal
				  data2: float[10,20,30]
				  data3: float[10,20,30]

		**Axes:**

		.. index:: axes (attribute)
		.. index:: coordinates

		.. admonition:: Defined by

			* :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			* the :ref:`axes </NXdata@axes-attribute>` attribute
			* :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes

		The fields and attributes are defined as follows

		1. The :ref:`AXISNAME </NXdata/AXISNAME-field>` fields contain the axis coordinates associated with the signal values.

		2. The :ref:`axes </NXdata@axes-attribute>` attribute provides the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   fields to be used as the `default axis` for each dimension of the :ref:`DATA </NXdata/DATA-field>` fields.

		3. The :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes describe the :ref:`DATA </NXdata/DATA-field>`
		   dimensions spanned by the corresponding :ref:`AXISNAME </NXdata/AXISNAME-field>` fields.

		The fields and attributes have the following constraints

		1. The length of the :ref:`axes </NXdata@axes-attribute>` attribute must be equal to the rank of the :ref:`DATA </NXdata/DATA-field>`
		   fields. When a particular dimension has no default axis, the string “.” is used in that position.

		2. The number of values in :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` must be equal to the rank of the corresponding
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		3. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is missing for a given
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field, the positions of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   field name in the :ref:`axes </NXdata@axes-attribute>` attribute are used.

		4. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is the same as the indices of "AXISNAME" in the
		   :ref:`axes </NXdata@axes-attribute>` attribute, there is no need to provide
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		5. The indices of "AXISNAME" in the :ref:`axes </NXdata@axes-attribute>` attribute must be a subset of
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		6. The shape of an :ref:`AXISNAME </NXdata/AXISNAME-field>` field must correspond to the shape of the
		   :ref:`DATA </NXdata/DATA-field>` dimensions it spans. This means that for each dimension ``i`` in ``[0, AXISNAME.ndim)``
		   spanned by axis field :ref:`AXISNAME </NXdata/AXISNAME-field>`, the number of axis values ``AXISNAME.shape[i]``
		   along dimension ``i`` must be equal to the number of data points ``DATA.shape[AXISNAME_indices[i]]`` along dimension ``i``
		   or one more than the number of data points ``DATA.shape[AXISNAME_indices[i]]+1`` in case the
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field contains histogram bin edges along dimension ``i``.

		Highlight consequences of these constraints

		1. An :ref:`AXISNAME </NXdata/AXISNAME-field>` field can have more than one dimension and can therefore span
		   more than one :ref:`DATA </NXdata/DATA-field>` dimension. Conversely, one :ref:`DATA </NXdata/DATA-field>` dimension
		   can be spanned by more than one :ref:`AXISNAME </NXdata/AXISNAME-field>` field. The default axis name (if any)
		   of each dimension can be found in the :ref:`axes </NXdata@axes-attribute>` attribute.

		2. A list of all available axes is not provided directly. All strings in the :ref:`axes </NXdata@axes-attribute>` attribute
		   (excluding the “.” string) are axis field names. In addition the prefix of an attribute ending with the string "_indices" is also
		   an axis field name.

		.. admonition:: The following example covers all axes features supported (see :ref:`sphx_glr_classes_base_classes_data_plot_fscan2d.py`)

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x_set", "y_set", "."]  # default axes for all three dimensions
				  @x_encoder_indices = [0, 1]
				  @y_encoder_indices = 1           # or [1]
				  data: float[10,7,1024]
				  x_encoder: float[11,7]           # coordinates along the first and second dimensions
				  y_encoder: float[7]              # coordinates along the second dimension
				  x_set: float[10]                 # default coordinates along the first dimension
				  y_set: float[7]                  # default coordinates along the second dimension

		**Uncertainties:**

		.. admonition:: Defined by

			* :ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields

		Standard deviations on data values as well as coordinates can be provided by
		:ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields where ``FIELDNAME`` is the name of a
		:ref:`DATA </NXdata/DATA-field>` field or an :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		.. admonition:: An example of uncertainties on the signal, auxiliary signals and axis coordinates

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  @axes = ["x", ".", "z"]
				  data1: float[10,20,30]
				  data2: float[10,20,30]
				  data3: float[10,20,30]
				  x: float[10]
				  z: float[30]
				  data1_errors: float[10,20,30]
				  data2_errors: float[10,20,30]
				  data3_errors: float[10,20,30]
				  x_errors: float[10]
				  z_errors: float[30]

	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/data@NX_class)
DEBUG - value: NXdata 
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/DATA
NXmpes.nxdl.xml:/ENTRY/DATA
NXentry.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/data@axes)
DEBUG - value: ['energy'] 
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/DATA
NXmpes.nxdl.xml:/ENTRY/DATA
NXentry.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXdata.nxdl.xml:@axes - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/axes):
DEBUG - 
			.. index:: plotting

			The ``axes`` attribute is a list of strings which are the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			to be used as the default axis along every :ref:`DATA </NXdata/DATA-field>` dimension. As a result the length must
			be equal to the rank of the :ref:`DATA </NXdata/DATA-field>` fields. The string "." can be used for
			dimensions without a default axis.

			.. note::  When ``axes`` contains multiple strings, it must be saved as an actual array
				of strings and not a single comma separated string.
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/data@energy_indices)
DEBUG - value: 0 
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/DATA
NXmpes.nxdl.xml:/ENTRY/DATA
NXentry.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXxps.nxdl.xml:/ENTRY/DATA@energy_indices - [NX_INT]
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/DATA/energy_indices):
DEBUG - 
DEBUG - NXmpes.nxdl.xml:/ENTRY/DATA@energy_indices - [NX_INT]
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/DATA/energy_indices):
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/data@signal)
DEBUG - value: data 
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/DATA
NXmpes.nxdl.xml:/ENTRY/DATA
NXentry.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/DATA@signal - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/DATA/signal):
DEBUG - -> data
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/DATA/signal):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@signal - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/signal):
DEBUG - 
			.. index:: find the default plottable data
			.. index:: plotting
			.. index:: signal attribute value
			
			The value is the :ref:`name <validItemName>` of the signal that contains
			the default plottable data. This field or link *must* exist and be a direct child
			of this NXdata group.
			
			It is recommended (as of NIAC2014) to use this attribute
			rather than adding a signal attribute to the field.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle100_scan1): <HDF5 dataset "cycle100_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 96.50416 147.3704  156.1954  ...   8.4054   28.1818    0.36   ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle100_scan2): <HDF5 dataset "cycle100_scan2": shape (1001,), type "<f8">
DEBUG - value: [100.41068  90.18982  94.8359  ...  23.58414   3.395    21.5448 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle100_scan3): <HDF5 dataset "cycle100_scan3": shape (1001,), type "<f8">
DEBUG - value: [57.23672 55.5074  95.51146 ...  4.7692   8.9362  22.4354 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle10_scan1): <HDF5 dataset "cycle10_scan1": shape (1001,), type "<f8">
DEBUG - value: [142.52174  77.5653   80.8059  ...  24.6668    1.9366    6.2098 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle10_scan2): <HDF5 dataset "cycle10_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 59.5017   92.6594  125.9187  ...   4.3562   16.80936  16.7916 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle10_scan3): <HDF5 dataset "cycle10_scan3": shape (1001,), type "<f8">
DEBUG - value: [67.104552 91.70134  81.50618  ...  5.2662   16.1246   31.3356  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle11_scan1): <HDF5 dataset "cycle11_scan1": shape (1001,), type "<f8">
DEBUG - value: [90.412088 51.337312 73.97954  ... 25.8994    6.7076   34.8037  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle11_scan2): <HDF5 dataset "cycle11_scan2": shape (1001,), type "<f8">
DEBUG - value: [90.7022 83.5852 76.6571 ... 22.9333  6.552  27.9768] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle11_scan3): <HDF5 dataset "cycle11_scan3": shape (1001,), type "<f8">
DEBUG - value: [111.58026  79.29256  80.3119  ...  21.0476   24.9752   16.071  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle12_scan1): <HDF5 dataset "cycle12_scan1": shape (1001,), type "<f8">
DEBUG - value: [91.25286 80.7029  92.9847  ... 20.3424  15.9348   4.7002 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle12_scan2): <HDF5 dataset "cycle12_scan2": shape (1001,), type "<f8">
DEBUG - value: [116.894192  95.3348   124.35474  ...  24.4426    14.787     21.1832  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle12_scan3): <HDF5 dataset "cycle12_scan3": shape (1001,), type "<f8">
DEBUG - value: [117.2056  117.09928  66.54888 ...  24.59416  19.28104   7.7706 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle13_scan1): <HDF5 dataset "cycle13_scan1": shape (1001,), type "<f8">
DEBUG - value: [125.589212  77.90834  112.21534  ...  23.2418     5.9684     0.257348] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle13_scan2): <HDF5 dataset "cycle13_scan2": shape (1001,), type "<f8">
DEBUG - value: [84.666808 86.809292 79.1251   ... 18.12884   5.3864    4.9398  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle13_scan3): <HDF5 dataset "cycle13_scan3": shape (1001,), type "<f8">
DEBUG - value: [119.6532    94.90856   68.21372  ...  29.744452  23.4126    15.8995  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle14_scan1): <HDF5 dataset "cycle14_scan1": shape (1001,), type "<f8">
DEBUG - value: [165.81616 165.18164 113.7386  ...   7.1692   32.09476  16.06944] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle14_scan2): <HDF5 dataset "cycle14_scan2": shape (1001,), type "<f8">
DEBUG - value: [117.737652 106.08784  113.64062  ...   2.2118     0.        13.3454  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle14_scan3): <HDF5 dataset "cycle14_scan3": shape (1001,), type "<f8">
DEBUG - value: [142.142272  86.6568    88.71166  ...  22.3844    32.8624    14.152   ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle15_scan1): <HDF5 dataset "cycle15_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 90.59914 127.614    95.57386 ...  40.01582  18.0617   15.0937 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle15_scan2): <HDF5 dataset "cycle15_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 72.0436   83.0686  136.7967  ...  19.6736   37.0332   32.93304] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle15_scan3): <HDF5 dataset "cycle15_scan3": shape (1001,), type "<f8">
DEBUG - value: [84.95846 64.1161  83.4638  ... 26.2592  13.4994  37.9254 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle16_scan1): <HDF5 dataset "cycle16_scan1": shape (1001,), type "<f8">
DEBUG - value: [1.3349858e+02 1.4182126e+02 8.4782560e+01 ... 6.9000000e-02 0.0000000e+00 ...
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle16_scan2): <HDF5 dataset "cycle16_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 79.6074   94.35534 107.72536 ...  18.35256  11.62984  11.8342 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle16_scan3): <HDF5 dataset "cycle16_scan3": shape (1001,), type "<f8">
DEBUG - value: [48.2187 91.2337 69.8439 ... 24.2174 12.4019 16.9119] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle17_scan1): <HDF5 dataset "cycle17_scan1": shape (1001,), type "<f8">
DEBUG - value: [101.2145  95.6141 125.2446 ...   0.979    9.09     6.4318] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle17_scan2): <HDF5 dataset "cycle17_scan2": shape (1001,), type "<f8">
DEBUG - value: [114.1837    80.323896 108.441604 ...   8.0952    21.2538    10.3086  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle17_scan3): <HDF5 dataset "cycle17_scan3": shape (1001,), type "<f8">
DEBUG - value: [111.78434  83.9939   79.62572 ...   0.        2.4708   10.5836 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle18_scan1): <HDF5 dataset "cycle18_scan1": shape (1001,), type "<f8">
DEBUG - value: [124.71176   91.83756  102.073788 ...  18.5924    28.852     20.5834  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle18_scan2): <HDF5 dataset "cycle18_scan2": shape (1001,), type "<f8">
DEBUG - value: [127.73606  102.124196 168.563684 ...  13.2756     8.0616     1.9384  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle18_scan3): <HDF5 dataset "cycle18_scan3": shape (1001,), type "<f8">
DEBUG - value: [123.64956 105.7335   53.2253  ...   7.462     7.4956   10.9082 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle19_scan1): <HDF5 dataset "cycle19_scan1": shape (1001,), type "<f8">
DEBUG - value: [130.97602 104.52534 102.1662  ...   2.882     0.       14.5976 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle19_scan2): <HDF5 dataset "cycle19_scan2": shape (1001,), type "<f8">
DEBUG - value: [102.6556  101.20496 117.13668 ...  20.7374   17.1533   13.1553 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle19_scan3): <HDF5 dataset "cycle19_scan3": shape (1001,), type "<f8">
DEBUG - value: [87.25654  88.594708 88.899192 ...  7.34     13.8256   18.7831  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle1_scan1): <HDF5 dataset "cycle1_scan1": shape (1001,), type "<f8">
DEBUG - value: [11.0108 19.5038 36.0038 ... 14.1662  0.      8.6965] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle1_scan2): <HDF5 dataset "cycle1_scan2": shape (1001,), type "<f8">
DEBUG - value: [39.0036 14.6472 28.1994 ...  0.      0.     11.7316] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle1_scan3): <HDF5 dataset "cycle1_scan3": shape (1001,), type "<f8">
DEBUG - value: [15.5394 26.605  45.4581 ...  8.6948  8.8344  0.    ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle20_scan1): <HDF5 dataset "cycle20_scan1": shape (1001,), type "<f8">
DEBUG - value: [126.41814  82.6904   88.181   ...   8.4392   24.9063   23.4991 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle20_scan2): <HDF5 dataset "cycle20_scan2": shape (1001,), type "<f8">
DEBUG - value: [104.836452 103.19364  112.19426  ...  30.3104    24.6296    18.5418  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle20_scan3): <HDF5 dataset "cycle20_scan3": shape (1001,), type "<f8">
DEBUG - value: [126.58506 144.84218 128.93098 ...   8.5064   22.8987   29.2123 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle21_scan1): <HDF5 dataset "cycle21_scan1": shape (1001,), type "<f8">
DEBUG - value: [112.023972 159.8799   128.370896 ...  17.409     15.695     20.7014  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle21_scan2): <HDF5 dataset "cycle21_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 98.0616   90.8046  115.511   ...  18.836    12.16058  32.50442] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle21_scan3): <HDF5 dataset "cycle21_scan3": shape (1001,), type "<f8">
DEBUG - value: [92.605   72.3843  84.15598 ... 20.1044  24.9062  14.7498 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle22_scan1): <HDF5 dataset "cycle22_scan1": shape (1001,), type "<f8">
DEBUG - value: [8.9090900e+01 9.1938980e+01 1.3346424e+02 ... 1.6000000e-02 9.2801000e+00 ...
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle22_scan2): <HDF5 dataset "cycle22_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 83.8557  127.63634 111.50512 ...  20.825    14.099    20.9082 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle22_scan3): <HDF5 dataset "cycle22_scan3": shape (1001,), type "<f8">
DEBUG - value: [126.35006 102.79438  73.65332 ...  44.11656  19.5702   15.2166 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle23_scan1): <HDF5 dataset "cycle23_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 97.6652   80.51816 118.5592  ...   5.0248   25.35214  24.64786] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle23_scan2): <HDF5 dataset "cycle23_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 92.80996 143.02486 106.08614 ...  25.2328   17.889    17.4795 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle23_scan3): <HDF5 dataset "cycle23_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 83.347092 102.3687   137.3061   ...  15.231     28.09504   28.26856 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle24_scan1): <HDF5 dataset "cycle24_scan1": shape (1001,), type "<f8">
DEBUG - value: [115.29724 116.5022   95.45254 ...   9.5888   18.1994    5.3174 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle24_scan2): <HDF5 dataset "cycle24_scan2": shape (1001,), type "<f8">
DEBUG - value: [146.01976 107.1535  127.89052 ...  23.7742    6.9986    8.7318 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle24_scan3): <HDF5 dataset "cycle24_scan3": shape (1001,), type "<f8">
DEBUG - value: [116.81036 103.84256  95.11178 ...   7.942     9.4164    9.6064 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle25_scan1): <HDF5 dataset "cycle25_scan1": shape (1001,), type "<f8">
DEBUG - value: [54.9738  57.6998  76.83204 ... 33.4126  17.1888  15.7622 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle25_scan2): <HDF5 dataset "cycle25_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 76.99502 140.41484 114.59264 ...  11.74926  15.6615   20.61704] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle25_scan3): <HDF5 dataset "cycle25_scan3": shape (1001,), type "<f8">
DEBUG - value: [107.0719  184.30614  85.12718 ...   5.5586   36.242    19.3474 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle26_scan1): <HDF5 dataset "cycle26_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 86.58726 145.7286  124.7683  ...  19.9663   29.88156  38.88384] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle26_scan2): <HDF5 dataset "cycle26_scan2": shape (1001,), type "<f8">
DEBUG - value: [111.26762  68.2842   66.1734  ...  25.71036  26.10804   8.8326 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle26_scan3): <HDF5 dataset "cycle26_scan3": shape (1001,), type "<f8">
DEBUG - value: [115.732552 117.0168   144.4883   ...  17.2736     4.0988    27.9942  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle27_scan1): <HDF5 dataset "cycle27_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 79.55496  86.31252 134.28612 ...  26.41414  16.43406  14.9576 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle27_scan2): <HDF5 dataset "cycle27_scan2": shape (1001,), type "<f8">
DEBUG - value: [134.16946  93.3245  108.88564 ...  18.319    16.827    24.6986 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle27_scan3): <HDF5 dataset "cycle27_scan3": shape (1001,), type "<f8">
DEBUG - value: [63.72108  60.73782  90.244388 ... 18.0278   37.16944  19.77626 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle28_scan1): <HDF5 dataset "cycle28_scan1": shape (1001,), type "<f8">
DEBUG - value: [78.57694 82.05806 97.73354 ... 10.6524   7.8556  18.7984 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle28_scan2): <HDF5 dataset "cycle28_scan2": shape (1001,), type "<f8">
DEBUG - value: [57.90778 51.95168 62.89972 ... 17.5452   8.1482  23.3454 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle28_scan3): <HDF5 dataset "cycle28_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 98.01002 151.9262  113.85544 ...  16.4846   22.196    21.406  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle29_scan1): <HDF5 dataset "cycle29_scan1": shape (1001,), type "<f8">
DEBUG - value: [80.10302 91.4205  79.60948 ...  7.7882  20.4795  16.0389 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle29_scan2): <HDF5 dataset "cycle29_scan2": shape (1001,), type "<f8">
DEBUG - value: [130.05472 147.09666 163.62318 ...  14.0634    5.0602    5.7792 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle29_scan3): <HDF5 dataset "cycle29_scan3": shape (1001,), type "<f8">
DEBUG - value: [103.95962  148.356688 141.797452 ...  12.8306    30.137     19.2282  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle2_scan1): <HDF5 dataset "cycle2_scan1": shape (1001,), type "<f8">
DEBUG - value: [41.52778 28.31882 46.12498 ...  9.624   10.376   12.7104 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle2_scan2): <HDF5 dataset "cycle2_scan2": shape (1001,), type "<f8">
DEBUG - value: [47.08504 21.66336 11.9048  ... 10.3264  22.2116   6.8976 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle2_scan3): <HDF5 dataset "cycle2_scan3": shape (1001,), type "<f8">
DEBUG - value: [27.15426 64.52784 29.1589  ...  5.6598   4.305   15.6102 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle30_scan1): <HDF5 dataset "cycle30_scan1": shape (1001,), type "<f8">
DEBUG - value: [111.24924  120.13422  126.8764   ...  26.3982    17.562948  20.634852] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle30_scan2): <HDF5 dataset "cycle30_scan2": shape (1001,), type "<f8">
DEBUG - value: [116.25992 112.02422 109.1958  ...  29.9673   17.2222   10.307  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle30_scan3): <HDF5 dataset "cycle30_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 64.85498  133.58688  110.252448 ...  30.3264    13.3108    13.9114  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle31_scan1): <HDF5 dataset "cycle31_scan1": shape (1001,), type "<f8">
DEBUG - value: [138.812452 121.97256  112.1446   ...  33.63884   19.12376   11.5962  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle31_scan2): <HDF5 dataset "cycle31_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 62.5395  122.69462 130.1169  ...  15.0264   14.4942    9.916  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle31_scan3): <HDF5 dataset "cycle31_scan3": shape (1001,), type "<f8">
DEBUG - value: [112.133   147.69634 100.06994 ...  27.61566  13.24194   9.5888 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle32_scan1): <HDF5 dataset "cycle32_scan1": shape (1001,), type "<f8">
DEBUG - value: [99.9314 57.803  47.     ... 13.3454 19.1944 18.4038] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle32_scan2): <HDF5 dataset "cycle32_scan2": shape (1001,), type "<f8">
DEBUG - value: [111.491952  72.8829    77.855    ...  29.77622   12.1092    30.3456  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle32_scan3): <HDF5 dataset "cycle32_scan3": shape (1001,), type "<f8">
DEBUG - value: [128.7828   74.28984  65.07454 ...  10.085     4.90616  22.82904] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle33_scan1): <HDF5 dataset "cycle33_scan1": shape (1001,), type "<f8">
DEBUG - value: [97.307112 81.76614  76.261448 ... 31.3228   28.6948   19.1944  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle33_scan2): <HDF5 dataset "cycle33_scan2": shape (1001,), type "<f8">
DEBUG - value: [110.412152  78.11216   70.31     ...  32.316     19.0742    17.8394  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle33_scan3): <HDF5 dataset "cycle33_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 75.71526  76.42934 127.39228 ...  15.0248    2.882     7.171  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle34_scan1): <HDF5 dataset "cycle34_scan1": shape (1001,), type "<f8">
DEBUG - value: [143.51398  75.86836 102.4336  ...  26.24176  27.30708  27.08596] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle34_scan2): <HDF5 dataset "cycle34_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 74.69954 102.9478  126.31946 ...   7.171    13.3084   20.6703 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle34_scan3): <HDF5 dataset "cycle34_scan3": shape (1001,), type "<f8">
DEBUG - value: [122.7942  127.9081  103.70524 ...  42.21004  10.75516   8.01184] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle35_scan1): <HDF5 dataset "cycle35_scan1": shape (1001,), type "<f8">
DEBUG - value: [122.86268 149.07642 109.4003  ...  24.8708   15.4026   17.4443 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle35_scan2): <HDF5 dataset "cycle35_scan2": shape (1001,), type "<f8">
DEBUG - value: [127.75468 103.96168  91.08154 ...  23.9787   20.94364   5.67726] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle35_scan3): <HDF5 dataset "cycle35_scan3": shape (1001,), type "<f8">
DEBUG - value: [130.310012  96.51634   75.3543   ...  21.8342     6.3812    31.272588] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle36_scan1): <HDF5 dataset "cycle36_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 95.9967    72.509836 134.098864 ...  24.3074    21.989      6.7918  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle36_scan2): <HDF5 dataset "cycle36_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 43.41258  87.30916 106.15576 ...   4.9046   31.3052   13.7038 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle36_scan3): <HDF5 dataset "cycle36_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 90.25654  153.552288 130.290752 ...  11.3902     0.        33.5355  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle37_scan1): <HDF5 dataset "cycle37_scan1": shape (1001,), type "<f8">
DEBUG - value: [101.7487   110.499048 124.94316  ...  26.843     13.104     24.6648  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle37_scan2): <HDF5 dataset "cycle37_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 99.27924 111.40376 119.57032 ...  13.97866  22.16034  18.7655 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle37_scan3): <HDF5 dataset "cycle37_scan3": shape (1001,), type "<f8">
DEBUG - value: [124.4117 115.1633  90.2222 ...  14.152    4.9736   8.799 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle38_scan1): <HDF5 dataset "cycle38_scan1": shape (1001,), type "<f8">
DEBUG - value: [140.3079    69.16046   78.6091   ...  17.564452  16.157     10.1554  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle38_scan2): <HDF5 dataset "cycle38_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 78.59056  129.659188  53.343612 ...   0.        12.6752    23.7406  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle38_scan3): <HDF5 dataset "cycle38_scan3": shape (1001,), type "<f8">
DEBUG - value: [107.8186  110.977    72.58946 ...  10.3954    8.508    32.8986 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle39_scan1): <HDF5 dataset "cycle39_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 63.82826  99.7972  109.63834 ...  16.9296   11.56086   6.82694] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle39_scan2): <HDF5 dataset "cycle39_scan2": shape (1001,), type "<f8">
DEBUG - value: [125.59092 114.01384 144.0476  ...   8.64606  21.5096    9.3988 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle39_scan3): <HDF5 dataset "cycle39_scan3": shape (1001,), type "<f8">
DEBUG - value: [111.93508  75.89948  61.5947  ...  38.9186   15.2316   23.22684] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle3_scan1): <HDF5 dataset "cycle3_scan1": shape (1001,), type "<f8">
DEBUG - value: [45.2664 62.5412 65.7952 ...  3.6876  6.3124  4.2888] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle3_scan2): <HDF5 dataset "cycle3_scan2": shape (1001,), type "<f8">
DEBUG - value: [57.5822 40.4464 25.4378 ... 12.5382 15.2661 19.9647] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle3_scan3): <HDF5 dataset "cycle3_scan3": shape (1001,), type "<f8">
DEBUG - value: [29.4518  35.62594 37.08466 ... 16.5008   8.1818  18.42324] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle40_scan1): <HDF5 dataset "cycle40_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 64.85332 118.7494   90.04974 ...  18.3526   33.6876   10.1026 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle40_scan2): <HDF5 dataset "cycle40_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 86.623   115.64326  78.57534 ...  23.1571    6.2416   23.0882 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle40_scan3): <HDF5 dataset "cycle40_scan3": shape (1001,), type "<f8">
DEBUG - value: [50.3264  55.0416  75.3404  ... 43.67168 30.4978  26.24336] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle41_scan1): <HDF5 dataset "cycle41_scan1": shape (1001,), type "<f8">
DEBUG - value: [108.23148 157.51428 120.64938 ...   7.7704   23.311     7.9942 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle41_scan2): <HDF5 dataset "cycle41_scan2": shape (1001,), type "<f8">
DEBUG - value: [8.58849000e+01 8.91584000e+01 1.00529748e+02 ... 2.07214000e+01 ...
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle41_scan3): <HDF5 dataset "cycle41_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 95.55388  103.52002   77.185648 ...  31.18502    4.18374    3.3614  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle42_scan1): <HDF5 dataset "cycle42_scan1": shape (1001,), type "<f8">
DEBUG - value: [128.95192  75.2638   89.0733  ...   4.9576   11.5608   12.093  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle42_scan2): <HDF5 dataset "cycle42_scan2": shape (1001,), type "<f8">
DEBUG - value: [104.85326  84.76906  51.0966  ...  17.5822   18.0792   16.8943 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle42_scan3): <HDF5 dataset "cycle42_scan3": shape (1001,), type "<f8">
DEBUG - value: [132.31706 121.66074 123.5179  ...  21.561    31.527    34.3581 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle43_scan1): <HDF5 dataset "cycle43_scan1": shape (1001,), type "<f8">
DEBUG - value: [110.63322  76.01976  90.9983  ...  35.8304   20.1556   23.3084 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle43_scan2): <HDF5 dataset "cycle43_scan2": shape (1001,), type "<f8">
DEBUG - value: [164.409412  64.44216   80.019688 ...  10.4112     5.9188    25.4544  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle43_scan3): <HDF5 dataset "cycle43_scan3": shape (1001,), type "<f8">
DEBUG - value: [57.0177  81.30104 61.42644 ... 25.40324 31.01256 24.3898 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle44_scan1): <HDF5 dataset "cycle44_scan1": shape (1001,), type "<f8">
DEBUG - value: [120.5966  136.93178  65.5377  ...  30.24134  14.88776   0.     ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle44_scan2): <HDF5 dataset "cycle44_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 95.7287 115.9182 102.9126 ...  21.2024  20.0322  10.6012] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle44_scan3): <HDF5 dataset "cycle44_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 88.9547    90.305628 113.172872 ...   0.         5.8658     5.0442  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle45_scan1): <HDF5 dataset "cycle45_scan1": shape (1001,), type "<f8">
DEBUG - value: [128.28138 163.53522  91.0286  ...  32.33106  25.18214  11.337  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle45_scan2): <HDF5 dataset "cycle45_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 79.693   123.85988 114.33696 ...  15.9172   16.0388   24.4246 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle45_scan3): <HDF5 dataset "cycle45_scan3": shape (1001,), type "<f8">
DEBUG - value: [76.27792 44.53038 89.99656 ... 54.85076 22.009    9.3652 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle46_scan1): <HDF5 dataset "cycle46_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 55.5914   50.80682 100.11998 ...  17.6174   17.769    14.3756 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle46_scan2): <HDF5 dataset "cycle46_scan2": shape (1001,), type "<f8">
DEBUG - value: [143.6128   92.43836  82.5551  ...  19.1256   10.7038   17.46196] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle46_scan3): <HDF5 dataset "cycle46_scan3": shape (1001,), type "<f8">
DEBUG - value: [87.33844 84.4937  80.2207  ... 13.29314 14.8886  16.22736] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle47_scan1): <HDF5 dataset "cycle47_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 67.018548 130.271852  47.7006   ...  25.1962    18.1642    13.8416  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle47_scan2): <HDF5 dataset "cycle47_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 68.06026 110.89594  89.8426  ...  17.51158  13.50076  35.8484 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle47_scan3): <HDF5 dataset "cycle47_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 78.61174 111.5624   94.1126  ...  19.402    43.9434   11.4928 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle48_scan1): <HDF5 dataset "cycle48_scan1": shape (1001,), type "<f8">
DEBUG - value: [91.4055  49.7413  51.38744 ... 32.8997  13.75666 30.89244] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle48_scan2): <HDF5 dataset "cycle48_scan2": shape (1001,), type "<f8">
DEBUG - value: [112.3312   98.47364  92.39856 ...   9.1238   10.17084  27.22216] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle48_scan3): <HDF5 dataset "cycle48_scan3": shape (1001,), type "<f8">
DEBUG - value: [73.03676 96.0214  86.0392  ... 25.65982  6.5697   6.2611 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle49_scan1): <HDF5 dataset "cycle49_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 67.79156 114.73074  69.72816 ...  20.2734    6.0212    9.1078 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle49_scan2): <HDF5 dataset "cycle49_scan2": shape (1001,), type "<f8">
DEBUG - value: [121.39126   97.1512    81.630688 ...   8.0792    16.41588   30.39352 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle49_scan3): <HDF5 dataset "cycle49_scan3": shape (1001,), type "<f8">
DEBUG - value: [113.96184   68.937148  61.406952 ...  16.4326     0.         0.      ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle4_scan1): <HDF5 dataset "cycle4_scan1": shape (1001,), type "<f8">
DEBUG - value: [40.08644 47.15516 51.3014  ...  0.       8.594   21.406  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle4_scan2): <HDF5 dataset "cycle4_scan2": shape (1001,), type "<f8">
DEBUG - value: [34.81938 43.9266  53.82486 ...  4.9752  11.1992  14.6842 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle4_scan3): <HDF5 dataset "cycle4_scan3": shape (1001,), type "<f8">
DEBUG - value: [33.77496 12.76164 36.07346 ...  8.2508   4.2728  29.7588 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle50_scan1): <HDF5 dataset "cycle50_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 52.384548  95.643052 100.44818  ...  18.1978    28.74716   34.25444 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle50_scan2): <HDF5 dataset "cycle50_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 76.06602  54.6908  136.6898  ...  42.9685   19.9487   27.134  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle50_scan3): <HDF5 dataset "cycle50_scan3": shape (1001,), type "<f8">
DEBUG - value: [83.36294 88.0953  86.3462  ... 11.9544  20.4794  21.7002 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle51_scan1): <HDF5 dataset "cycle51_scan1": shape (1001,), type "<f8">
DEBUG - value: [100.18598  93.345    65.7852  ...  13.7054   11.972    15.86746] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle51_scan2): <HDF5 dataset "cycle51_scan2": shape (1001,), type "<f8">
DEBUG - value: [134.38906 110.59972  68.71306 ...   4.6488   27.2217   44.0307 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle51_scan3): <HDF5 dataset "cycle51_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 53.3288 134.4488 112.173  ...  22.3682  20.1186  16.552 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle52_scan1): <HDF5 dataset "cycle52_scan1": shape (1001,), type "<f8">
DEBUG - value: [129.643612 106.2227    58.35414  ...  16.346     20.61894   21.1302  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle52_scan2): <HDF5 dataset "cycle52_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 87.55174 110.7914  125.00276 ...   2.263     8.3542   21.9048 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle52_scan3): <HDF5 dataset "cycle52_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 99.64164 122.57186  50.2107  ...  16.8414   13.0352   16.7252 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle53_scan1): <HDF5 dataset "cycle53_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 86.20794 126.8767   97.5683  ...  12.24558  16.91362   2.5204 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle53_scan2): <HDF5 dataset "cycle53_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 94.75182  84.06166 132.66184 ...   2.8308   12.46904  32.93256] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle53_scan3): <HDF5 dataset "cycle53_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 94.64444  83.38098 125.45368 ...  10.5324   27.4266   18.2331 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle54_scan1): <HDF5 dataset "cycle54_scan1": shape (1001,), type "<f8">
DEBUG - value: [130.11922 111.01154  75.05868 ...  22.9855   16.6369   18.3012 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle54_scan2): <HDF5 dataset "cycle54_scan2": shape (1001,), type "<f8">
DEBUG - value: [103.4138   68.2327   71.38946 ...  25.796     6.9472    2.1092 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle54_scan3): <HDF5 dataset "cycle54_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 74.8343   82.40406 102.93284 ...   9.709    22.7456   23.1554 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle55_scan1): <HDF5 dataset "cycle55_scan1": shape (1001,), type "<f8">
DEBUG - value: [112.71096 135.71564 138.48734 ...   7.393    28.1128    7.5822 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle55_scan2): <HDF5 dataset "cycle55_scan2": shape (1001,), type "<f8">
DEBUG - value: [139.399228 146.018312 117.65092  ...  14.6984    19.0228     9.09    ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle55_scan3): <HDF5 dataset "cycle55_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 77.97322   90.7534   126.916948 ...  14.7676    19.8286    20.1201  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle56_scan1): <HDF5 dataset "cycle56_scan1": shape (1001,), type "<f8">
DEBUG - value: [8.76696e+01 6.90052e+01 4.96206e+01 ... 4.03750e+01 2.46498e+01 ...
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle56_scan2): <HDF5 dataset "cycle56_scan2": shape (1001,), type "<f8">
DEBUG - value: [138.16582   75.79584   99.997548 ...  32.20994   23.4674    35.60846 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle56_scan3): <HDF5 dataset "cycle56_scan3": shape (1001,), type "<f8">
DEBUG - value: [108.7658   94.2146   72.24866 ...  12.82904   6.62096   9.2801 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle57_scan1): <HDF5 dataset "cycle57_scan1": shape (1001,), type "<f8">
DEBUG - value: [108.5069  106.2977   70.97626 ...   5.89946  16.79334  28.4376 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle57_scan2): <HDF5 dataset "cycle57_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 98.12724  97.86162 115.74288 ...   0.       10.841    17.2046 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle57_scan3): <HDF5 dataset "cycle57_scan3": shape (1001,), type "<f8">
DEBUG - value: [100.872212 112.62482  100.25822  ...  18.5409    29.8806    14.6314  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle58_scan1): <HDF5 dataset "cycle58_scan1": shape (1001,), type "<f8">
DEBUG - value: [113.945    90.56066  74.6844  ...   1.50956  17.83944  10.2398 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle58_scan2): <HDF5 dataset "cycle58_scan2": shape (1001,), type "<f8">
DEBUG - value: [100.13576  51.25368 101.33972 ...  10.582     5.695     7.4443 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle58_scan3): <HDF5 dataset "cycle58_scan3": shape (1001,), type "<f8">
DEBUG - value: [103.544452 111.73432  120.31194  ...   7.5292    23.9466    18.129   ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle59_scan1): <HDF5 dataset "cycle59_scan1": shape (1001,), type "<f8">
DEBUG - value: [109.8304 111.5924  89.7785 ...   3.9964   8.4568   8.0952] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle59_scan2): <HDF5 dataset "cycle59_scan2": shape (1001,), type "<f8">
DEBUG - value: [100.4982    89.690428  74.461712 ...   9.725     17.0667    21.2521  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle59_scan3): <HDF5 dataset "cycle59_scan3": shape (1001,), type "<f8">
DEBUG - value: [113.1024  120.82634 106.77    ...  15.711    15.90114  30.53206] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle5_scan1): <HDF5 dataset "cycle5_scan1": shape (1001,), type "<f8">
DEBUG - value: [17.9228 42.7272 70.8576 ...  6.261  30.0176 11.9032] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle5_scan2): <HDF5 dataset "cycle5_scan2": shape (1001,), type "<f8">
DEBUG - value: [107.50068 105.48222  65.18144 ...   1.6298    3.37904  15.61106] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle5_scan3): <HDF5 dataset "cycle5_scan3": shape (1001,), type "<f8">
DEBUG - value: [94.617  99.9799 87.6856 ...  2.4178  7.5822  6.4872] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle60_scan1): <HDF5 dataset "cycle60_scan1": shape (1001,), type "<f8">
DEBUG - value: [84.529    89.912252 37.0508   ...  9.1254   13.3808   18.6612  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle60_scan2): <HDF5 dataset "cycle60_scan2": shape (1001,), type "<f8">
DEBUG - value: [134.201572 110.82334   92.76044  ...  15.9188    15.8995    22.4195  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle60_scan3): <HDF5 dataset "cycle60_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 72.9166  142.94914 136.14126 ...  20.5148   42.0752   39.0902 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle61_scan1): <HDF5 dataset "cycle61_scan1": shape (1001,), type "<f8">
DEBUG - value: [107.925712  85.868     82.87984  ...  13.4496    14.1326     4.305   ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle61_scan2): <HDF5 dataset "cycle61_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 92.50014  64.0669  110.0489  ...  21.6474    3.1554   23.585  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle61_scan3): <HDF5 dataset "cycle61_scan3": shape (1001,), type "<f8">
DEBUG - value: [89.03864 98.66196 62.03694 ... 26.3327  17.2516   0.     ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle62_scan1): <HDF5 dataset "cycle62_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 75.48794  103.02124  102.797008 ...  25.64204    9.70736   11.596   ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle62_scan2): <HDF5 dataset "cycle62_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 67.32404   82.034408 103.711092 ...  13.945     12.575     25.2486  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle62_scan3): <HDF5 dataset "cycle62_scan3": shape (1001,), type "<f8">
DEBUG - value: [116.326    71.52808  95.88224 ...  16.27718  21.78462  35.2643 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle63_scan1): <HDF5 dataset "cycle63_scan1": shape (1001,), type "<f8">
DEBUG - value: [107.63094  77.11796  70.8778  ...  36.53254  11.6636   10.6526 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle63_scan2): <HDF5 dataset "cycle63_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 76.84446 120.32716 103.01848 ...  19.9471    9.1077   13.4656 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle63_scan3): <HDF5 dataset "cycle63_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 82.43254  86.36814 118.48876 ...  45.3516   14.0846   15.282  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle64_scan1): <HDF5 dataset "cycle64_scan1": shape (1001,), type "<f8">
DEBUG - value: [50.5992  91.33678 73.12322 ... 22.94934  9.43402 15.987  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle64_scan2): <HDF5 dataset "cycle64_scan2": shape (1001,), type "<f8">
DEBUG - value: [136.07354  96.67066 142.81454 ...  21.2346   41.1162   30.7708 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle64_scan3): <HDF5 dataset "cycle64_scan3": shape (1001,), type "<f8">
DEBUG - value: [141.69792  95.33748 100.635   ...  14.8886   31.665    22.7266 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle65_scan1): <HDF5 dataset "cycle65_scan1": shape (1001,), type "<f8">
DEBUG - value: [161.598588 162.313872  99.74574  ...  40.40994   26.02126   16.00364 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle65_scan2): <HDF5 dataset "cycle65_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 48.48776   96.89946  106.589048 ...   4.9414    24.543     20.5156  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle65_scan3): <HDF5 dataset "cycle65_scan3": shape (1001,), type "<f8">
DEBUG - value: [141.678252 131.636    123.617    ...  24.2376    40.30704   19.17836 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle66_scan1): <HDF5 dataset "cycle66_scan1": shape (1001,), type "<f8">
DEBUG - value: [79.96474 95.29996 93.87564 ... 39.15902 31.8182  16.0374 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle66_scan2): <HDF5 dataset "cycle66_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 89.757     77.431788 103.926452 ...   8.0792     7.8396    10.5996  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle66_scan3): <HDF5 dataset "cycle66_scan3": shape (1001,), type "<f8">
DEBUG - value: [124.441328 119.108272  64.8382   ...   6.4124    33.2596    11.2346  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle67_scan1): <HDF5 dataset "cycle67_scan1": shape (1001,), type "<f8">
DEBUG - value: [110.57016 131.31984 128.3336  ...  19.399    17.5644   16.7404 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle67_scan2): <HDF5 dataset "cycle67_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 77.2719   93.9118  181.14794 ...  20.9772   18.8656   19.4182 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle67_scan3): <HDF5 dataset "cycle67_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 99.63694 105.9203  111.75922 ...   9.878    17.5822   14.0678 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle68_scan1): <HDF5 dataset "cycle68_scan1": shape (1001,), type "<f8">
DEBUG - value: [116.876788 105.008852 109.60696  ...   7.0497    17.7192    21.20098 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle68_scan2): <HDF5 dataset "cycle68_scan2": shape (1001,), type "<f8">
DEBUG - value: [79.75424 96.57352 79.67088 ...  4.11654 13.2254  26.7746 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle68_scan3): <HDF5 dataset "cycle68_scan3": shape (1001,), type "<f8">
DEBUG - value: [103.10336   85.865848 102.158412 ...   5.2484    35.0796    26.1568  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle69_scan1): <HDF5 dataset "cycle69_scan1": shape (1001,), type "<f8">
DEBUG - value: [141.610932 131.90642  125.1493   ...  14.8894    23.4294    29.3686  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle69_scan2): <HDF5 dataset "cycle69_scan2": shape (1001,), type "<f8">
DEBUG - value: [65.4906 79.6736 71.8375 ...  8.6965  1.3035  0.    ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle69_scan3): <HDF5 dataset "cycle69_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 97.87674  90.54816 110.42646 ...  10.513    30.344     3.8592 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle6_scan1): <HDF5 dataset "cycle6_scan1": shape (1001,), type "<f8">
DEBUG - value: [95.19704 64.85076 53.434   ... 33.9772  15.044   34.2048 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle6_scan2): <HDF5 dataset "cycle6_scan2": shape (1001,), type "<f8">
DEBUG - value: [83.9104 45.2133 40.6701 ...  9.4676  0.      0.    ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle6_scan3): <HDF5 dataset "cycle6_scan3": shape (1001,), type "<f8">
DEBUG - value: [92.5389  56.8643  37.8184  ... 23.019   26.31236 17.25764] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle70_scan1): <HDF5 dataset "cycle70_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 83.49774 107.03286  66.41478 ...  22.09476  29.44844  23.1234 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle70_scan2): <HDF5 dataset "cycle70_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 73.8417   94.25696 142.51944 ...   6.912    19.8286   30.0494 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle70_scan3): <HDF5 dataset "cycle70_scan3": shape (1001,), type "<f8">
DEBUG - value: [93.43098 81.32104 52.6584  ...  3.6876  21.201   20.84106] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle71_scan1): <HDF5 dataset "cycle71_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 92.92846 160.67334 117.20276 ...  15.62616  22.14264   8.8858 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle71_scan2): <HDF5 dataset "cycle71_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 93.29224  86.77768 121.11332 ...   7.5646    9.9134   23.94666] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle71_scan3): <HDF5 dataset "cycle71_scan3": shape (1001,), type "<f8">
DEBUG - value: [111.42164  81.7836   84.37394 ...   6.86064   6.62096   8.6804 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle72_scan1): <HDF5 dataset "cycle72_scan1": shape (1001,), type "<f8">
DEBUG - value: [135.472388 110.016792  98.66262  ...  18.5064    12.7602    11.8004  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle72_scan2): <HDF5 dataset "cycle72_scan2": shape (1001,), type "<f8">
DEBUG - value: [66.2798   53.342648 96.535452 ... 24.6648   13.226    10.222   ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle72_scan3): <HDF5 dataset "cycle72_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 88.4039   92.16164 124.27106 ...   4.94     20.3086   19.074  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle73_scan1): <HDF5 dataset "cycle73_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 90.66662 125.86778  57.56344 ...  25.93444  14.20316  18.9346 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle73_scan2): <HDF5 dataset "cycle73_scan2": shape (1001,), type "<f8">
DEBUG - value: [72.41976 73.6214  49.8076  ... 26.2772  11.5784   4.0652 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle73_scan3): <HDF5 dataset "cycle73_scan3": shape (1001,), type "<f8">
DEBUG - value: [104.9012 108.5126 103.0147 ...  14.9558  18.473    4.7514] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle74_scan1): <HDF5 dataset "cycle74_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 73.1741  149.6395   75.35254 ...   4.8028   10.841     9.159  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle74_scan2): <HDF5 dataset "cycle74_scan2": shape (1001,), type "<f8">
DEBUG - value: [54.76674  54.76976  98.545148 ... 30.5998   15.1802    8.7318  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle74_scan3): <HDF5 dataset "cycle74_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 98.71586 110.51638 108.09616 ...  16.827    16.29736  35.21224] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle75_scan1): <HDF5 dataset "cycle75_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 79.51924   54.8871   105.182888 ...  23.1572    28.645     44.6474  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle75_scan2): <HDF5 dataset "cycle75_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 90.511388 145.837952 109.9807   ...  23.68764   25.8666     0.      ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle75_scan3): <HDF5 dataset "cycle75_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 92.31614  151.26816  128.713848 ...  21.714     37.16914   17.27366 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle76_scan1): <HDF5 dataset "cycle76_scan1": shape (1001,), type "<f8">
DEBUG - value: [106.1914  131.0342   77.2862  ...   6.92968  12.52202  10.8906 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle76_scan2): <HDF5 dataset "cycle76_scan2": shape (1001,), type "<f8">
DEBUG - value: [80.15526 42.96718 70.29186 ...  9.074   10.291   22.8992 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle76_scan3): <HDF5 dataset "cycle76_scan3": shape (1001,), type "<f8">
DEBUG - value: [69.1728  92.40524 85.31596 ... 33.173   26.4654  41.8552 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle77_scan1): <HDF5 dataset "cycle77_scan1": shape (1001,), type "<f8">
DEBUG - value: [72.86496  69.678608 90.047392 ... 16.536    22.7778   24.2712  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle77_scan2): <HDF5 dataset "cycle77_scan2": shape (1001,), type "<f8">
DEBUG - value: [83.8226  75.61154 93.27656 ...  5.1292   0.      21.7156 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle77_scan3): <HDF5 dataset "cycle77_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 63.67146   75.6068   134.442088 ...  25.6252     9.6738    21.2344  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle78_scan1): <HDF5 dataset "cycle78_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 61.56466 103.943    91.15    ...  14.6649   13.0351    7.8908 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle78_scan2): <HDF5 dataset "cycle78_scan2": shape (1001,), type "<f8">
DEBUG - value: [124.16858  121.57742   85.456548 ...  18.44066    9.94894   34.698348] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle78_scan3): <HDF5 dataset "cycle78_scan3": shape (1001,), type "<f8">
DEBUG - value: [65.45556 83.307   75.9188  ... 40.6687   6.3475  20.18684] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle79_scan1): <HDF5 dataset "cycle79_scan1": shape (1001,), type "<f8">
DEBUG - value: [135.28136  113.171648 111.115252 ...  12.0066    25.7128    15.3334  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle79_scan2): <HDF5 dataset "cycle79_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 81.3716   97.7227  112.72734 ...  24.2198   54.13444  63.44786] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle79_scan3): <HDF5 dataset "cycle79_scan3": shape (1001,), type "<f8">
DEBUG - value: [156.532    89.76022 110.70708 ...  10.6157    5.3175   23.65566] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle7_scan1): <HDF5 dataset "cycle7_scan1": shape (1001,), type "<f8">
DEBUG - value: [67.97546 64.5112  91.4414  ... 15.5932   0.857    9.143  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle7_scan2): <HDF5 dataset "cycle7_scan2": shape (1001,), type "<f8">
DEBUG - value: [63.3624  40.4128  37.66618 ... 12.7617  18.4039  24.1006 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle7_scan3): <HDF5 dataset "cycle7_scan3": shape (1001,), type "<f8">
DEBUG - value: [99.5222  54.1146  80.3958  ... 41.30504 16.41336  0.     ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle80_scan1): <HDF5 dataset "cycle80_scan1": shape (1001,), type "<f8">
DEBUG - value: [153.8277    85.2329    88.746948 ...  19.8816    22.6918    11.132   ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle80_scan2): <HDF5 dataset "cycle80_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 73.5836   68.7166  112.999   ...  22.36558   0.        9.00514] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle80_scan3): <HDF5 dataset "cycle80_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 70.88924  72.3171  114.993   ...   0.       19.229    10.771  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle81_scan1): <HDF5 dataset "cycle81_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 74.7162  111.23776 118.9706  ...  24.4783   12.19576  25.98604] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle81_scan2): <HDF5 dataset "cycle81_scan2": shape (1001,), type "<f8">
DEBUG - value: [127.494728 146.10602  100.106652 ...  18.232548  54.426752  24.7675  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle81_scan3): <HDF5 dataset "cycle81_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 64.80134 107.06916 149.3124  ...  21.35558  38.31982  38.0103 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle82_scan1): <HDF5 dataset "cycle82_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 95.07498 109.0223   71.83776 ...  19.00514   1.01086   8.0616 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle82_scan2): <HDF5 dataset "cycle82_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 94.5085   101.52996   85.879688 ...   7.6318    32.8812    14.8894  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle82_scan3): <HDF5 dataset "cycle82_scan3": shape (1001,), type "<f8">
DEBUG - value: [106.34976  96.33976 119.50678 ...  16.5696   11.9384   10.2734 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle83_scan1): <HDF5 dataset "cycle83_scan1": shape (1001,), type "<f8">
DEBUG - value: [82.22914  47.4082   58.699    ... 21.5096   17.839528 34.785072] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle83_scan2): <HDF5 dataset "cycle83_scan2": shape (1001,), type "<f8">
DEBUG - value: [66.3457  82.93396 62.04144 ...  0.       5.2838  14.6649 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle83_scan3): <HDF5 dataset "cycle83_scan3": shape (1001,), type "<f8">
DEBUG - value: [119.84554 102.66296 122.8601  ...   0.        3.37904   6.62096] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle84_scan1): <HDF5 dataset "cycle84_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 98.4728   122.09754  102.172448 ...   0.        19.5212    24.5104  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle84_scan2): <HDF5 dataset "cycle84_scan2": shape (1001,), type "<f8">
DEBUG - value: [109.79444 152.8117   77.8051  ...  24.854    13.6878   17.8554 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle84_scan3): <HDF5 dataset "cycle84_scan3": shape (1001,), type "<f8">
DEBUG - value: [82.2958 78.0457 76.8617 ... 13.5168 10.      8.7832] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle85_scan1): <HDF5 dataset "cycle85_scan1": shape (1001,), type "<f8">
DEBUG - value: [100.32218  91.19982  94.58154 ...  36.89434  15.62606   7.5998 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle85_scan2): <HDF5 dataset "cycle85_scan2": shape (1001,), type "<f8">
DEBUG - value: [126.05414 127.37536  77.1722  ...   2.5557   15.1282   14.8718 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle85_scan3): <HDF5 dataset "cycle85_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 79.0371   94.85674 119.98062 ...  12.7122   26.002    27.2902 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle86_scan1): <HDF5 dataset "cycle86_scan1": shape (1001,), type "<f8">
DEBUG - value: [135.4346  74.1005  87.8555 ...  27.3576   9.5896   7.171 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle86_scan2): <HDF5 dataset "cycle86_scan2": shape (1001,), type "<f8">
DEBUG - value: [62.13938 86.36482 98.7986  ...  7.5998   9.4164  11.185  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle86_scan3): <HDF5 dataset "cycle86_scan3": shape (1001,), type "<f8">
DEBUG - value: [55.7808   94.749148 64.921352 ... 12.5734   31.81804  36.84316 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle87_scan1): <HDF5 dataset "cycle87_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 95.0618  110.22184  93.01776 ...  12.4532   26.261    27.35774] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle87_scan2): <HDF5 dataset "cycle87_scan2": shape (1001,), type "<f8">
DEBUG - value: [110.873472  97.34078  104.8425   ...   7.7866    18.1144    18.4568  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle87_scan3): <HDF5 dataset "cycle87_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 81.16698 129.51852  92.11398 ...  17.1026   26.56914  23.43086] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle88_scan1): <HDF5 dataset "cycle88_scan1": shape (1001,), type "<f8">
DEBUG - value: [56.15748 80.89464 97.11572 ...  8.1658   8.37024 15.09536] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle88_scan2): <HDF5 dataset "cycle88_scan2": shape (1001,), type "<f8">
DEBUG - value: [85.01412 73.5102  71.08218 ... 22.84838 25.04242  2.7778 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle88_scan3): <HDF5 dataset "cycle88_scan3": shape (1001,), type "<f8">
DEBUG - value: [118.38864   99.403008  86.497992 ...  13.7876     7.118      8.1482  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle89_scan1): <HDF5 dataset "cycle89_scan1": shape (1001,), type "<f8">
DEBUG - value: [123.45894   68.496148  89.754652 ...  11.47428   20.308668  11.681052] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle89_scan2): <HDF5 dataset "cycle89_scan2": shape (1001,), type "<f8">
DEBUG - value: [83.58426 79.9284  62.26374 ...  5.2838  11.1658  20.3614 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle89_scan3): <HDF5 dataset "cycle89_scan3": shape (1001,), type "<f8">
DEBUG - value: [100.517    61.85186 102.68944 ...  19.7764   22.95016  29.67204] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle8_scan1): <HDF5 dataset "cycle8_scan1": shape (1001,), type "<f8">
DEBUG - value: [69.9485  81.97044 84.976   ... 25.35286 14.97334 19.3474 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle8_scan2): <HDF5 dataset "cycle8_scan2": shape (1001,), type "<f8">
DEBUG - value: [47.9748   91.8228   92.316148 ... 15.7288    6.4318   18.76536 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle8_scan3): <HDF5 dataset "cycle8_scan3": shape (1001,), type "<f8">
DEBUG - value: [100.03346 102.57026  47.36014 ...  18.9714   21.9722   14.6648 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle90_scan1): <HDF5 dataset "cycle90_scan1": shape (1001,), type "<f8">
DEBUG - value: [122.299   165.59254  93.72066 ...   6.5696   12.8484    3.464  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle90_scan2): <HDF5 dataset "cycle90_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 59.9675  102.36716 100.70464 ...  23.9456   14.665    10.3262 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle90_scan3): <HDF5 dataset "cycle90_scan3": shape (1001,), type "<f8">
DEBUG - value: [81.47574  65.28236  58.368496 ... 14.083    20.894    17.2188  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle91_scan1): <HDF5 dataset "cycle91_scan1": shape (1001,), type "<f8">
DEBUG - value: [125.7827  125.33676 127.88724 ...   8.1818    0.        0.     ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle91_scan2): <HDF5 dataset "cycle91_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 98.8354  110.4467   76.6209  ...   0.       15.69578  58.88572] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle91_scan3): <HDF5 dataset "cycle91_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 85.812044 102.5751    90.0849   ...  18.2498    12.3338    11.2522  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle92_scan1): <HDF5 dataset "cycle92_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 94.94016 123.1411   92.89294 ...  11.3732   38.5755   13.3437 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle92_scan2): <HDF5 dataset "cycle92_scan2": shape (1001,), type "<f8">
DEBUG - value: [88.38492 88.09508 75.42516 ... 28.9528  26.7051  15.5093 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle92_scan3): <HDF5 dataset "cycle92_scan3": shape (1001,), type "<f8">
DEBUG - value: [101.3906   159.55184  125.18042  ...  11.733348  18.266652   8.7318  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle93_scan1): <HDF5 dataset "cycle93_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 84.6522   96.79016 121.47616 ...  10.1026    0.       10.841  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle93_scan2): <HDF5 dataset "cycle93_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 94.9702   78.73232 107.71706 ...   0.9436   13.7214   15.626  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle93_scan3): <HDF5 dataset "cycle93_scan3": shape (1001,), type "<f8">
DEBUG - value: [102.82758  91.95586  91.01266 ...  14.2714   26.5856   24.4428 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle94_scan1): <HDF5 dataset "cycle94_scan1": shape (1001,), type "<f8">
DEBUG - value: [76.23762 98.99192 50.9593  ... 18.249   11.4758  36.75814] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle94_scan2): <HDF5 dataset "cycle94_scan2": shape (1001,), type "<f8">
DEBUG - value: [90.5149   86.6899   87.326748 ... 24.2714   10.4624    4.2714  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle94_scan3): <HDF5 dataset "cycle94_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 98.407248 109.314652 103.63806  ...  15.8328     0.         8.6965  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle95_scan1): <HDF5 dataset "cycle95_scan1": shape (1001,), type "<f8">
DEBUG - value: [ 97.218848 103.518652  76.55046  ...   7.5998    25.1972    14.5102  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle95_scan2): <HDF5 dataset "cycle95_scan2": shape (1001,), type "<f8">
DEBUG - value: [99.3832   85.5389   96.4874   ... 23.088052 35.6942   40.9268  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle95_scan3): <HDF5 dataset "cycle95_scan3": shape (1001,), type "<f8">
DEBUG - value: [72.2502  69.98058 86.92922 ... 35.48806 26.00374 22.6422 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle96_scan1): <HDF5 dataset "cycle96_scan1": shape (1001,), type "<f8">
DEBUG - value: [119.467088  70.500652 118.88624  ...  26.226     19.8116    12.179748] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle96_scan2): <HDF5 dataset "cycle96_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 41.66458 122.11182 116.3785  ...   3.7902    0.2396   36.1054 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle96_scan3): <HDF5 dataset "cycle96_scan3": shape (1001,), type "<f8">
DEBUG - value: [101.2183   90.53088  68.59296 ...  35.197    19.5014    9.0404 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle97_scan1): <HDF5 dataset "cycle97_scan1": shape (1001,), type "<f8">
DEBUG - value: [34.8187  61.0468  76.4842  ...  2.4708  27.6838  21.92094] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle97_scan2): <HDF5 dataset "cycle97_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 83.99794 100.41124  99.1441  ...   8.9186   11.0814    2.1268 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle97_scan3): <HDF5 dataset "cycle97_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 99.555   114.92466  82.02288 ...   9.00514   5.91866  19.0726 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle98_scan1): <HDF5 dataset "cycle98_scan1": shape (1001,), type "<f8">
DEBUG - value: [113.71756  86.3854  101.42004 ...  12.9148   33.4836   15.7108 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle98_scan2): <HDF5 dataset "cycle98_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 84.5594   72.53744 109.4888  ...  46.70506  26.6217   10.841  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle98_scan3): <HDF5 dataset "cycle98_scan3": shape (1001,), type "<f8">
DEBUG - value: [57.9059 62.3683 86.71   ... 32.0089 19.277   4.8556] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle99_scan1): <HDF5 dataset "cycle99_scan1": shape (1001,), type "<f8">
DEBUG - value: [109.4854  136.96794  95.89546 ...  11.5256   10.6702   10.8924 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle99_scan2): <HDF5 dataset "cycle99_scan2": shape (1001,), type "<f8">
DEBUG - value: [124.25448 103.31356  91.76246 ...  20.6526    6.9808    0.     ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle99_scan3): <HDF5 dataset "cycle99_scan3": shape (1001,), type "<f8">
DEBUG - value: [ 75.24742 107.7896   60.8914  ...  14.64884  18.43916  19.6898 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle9_scan1): <HDF5 dataset "cycle9_scan1": shape (1001,), type "<f8">
DEBUG - value: [127.41376  114.6284   120.205548 ...  31.3548    12.45306   15.55554 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle9_scan2): <HDF5 dataset "cycle9_scan2": shape (1001,), type "<f8">
DEBUG - value: [ 78.232948 101.253972  84.40846  ...  12.4708    23.6684     4.8204  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/cycle9_scan3): <HDF5 dataset "cycle9_scan3": shape (1001,), type "<f8">
DEBUG - value: [74.54806 89.82328 77.0355  ...  0.       6.1921   3.8079 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/data): <HDF5 dataset "data": shape (1001,), type "<f8">
DEBUG - value: [94.3170816  95.92163495 93.17777291 ... 16.87852744 16.68190623 ...
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/DATA
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - documentation (NXdata.nxdl.xml:/DATA):
DEBUG - 
			.. index:: plotting

			Data values to be used as the NeXus *plottable data*. As the upper case ``DATA``
			indicates, the names of the ``DATA`` fields can be chosen :ref:`freely <validItemName>`. The :ref:`signal attribute </NXdata@signal-attribute>`
			and :ref:`auxiliary_signals attribute</NXdata@auxiliary_signals-attribute>` can be used to find all datasets in the ``NXdata``
			that contain data values.

			The maximum rank is ``32`` for compatibility with backend file formats.
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/data/data@units)
DEBUG - value: counts_per_second 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/DATA
DEBUG - NXdata.nxdl.xml:/DATA@units - REQUIRED, but undefined unit category
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/data_errors): <HDF5 dataset "data_errors": shape (1001,), type "<f8">
DEBUG - value: [27.91993385 29.57565263 27.13961833 ... 10.56711     9.95785462 ...
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/FIELDNAME_errors
NXobject.nxdl.xml:/FIELDNAME_errors
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/FIELDNAME_errors):
DEBUG - 
			"Errors" (meaning *uncertainties* or *standard deviations*)
			associated with any field named ``FIELDNAME`` in this ``NXdata``
			group. This can be a :ref:`DATA </NXdata/DATA-field>` field
			(signal or auxiliary signal) or a :ref:`AXISNAME </NXdata/AXISNAME-field>`
			field (axis).

			The dimensions of the ``FIELDNAME_errors`` field must match
			the dimensions of the corresponding ``FIELDNAME`` field.
		
DEBUG - documentation (NXobject.nxdl.xml:/FIELDNAME_errors):
DEBUG - 
            Uncertainties of FIELDNAME values.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/data/energy): <HDF5 dataset "energy": shape (1001,), type "<f8">
DEBUG - value: [175.  174.9 174.8 ...  75.2  75.1  75. ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/data/energy@type)
DEBUG - value: binding 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - @type - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/data/energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - NXdata.nxdl.xml:/AXISNAME@units - [NX_CHAR]
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME/units):
DEBUG - 
				Unit in which the coordinate values are expressed.
				See the section :ref:`Design-Units` for more information.
			
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/definition): <HDF5 dataset "definition": shape (), type "|O">
DEBUG - value: NXxps 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/definition
NXmpes.nxdl.xml:/ENTRY/definition
NXentry.nxdl.xml:/definition
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/definition):
DEBUG - -> NXxps
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/definition):
DEBUG - -> NXmpes
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/definition):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/definition):
DEBUG - 
DEBUG - documentation (NXentry.nxdl.xml:/definition):
DEBUG - 
			(alternate use: see same field in :ref:`NXsubentry` for preferred)
			
			Official NeXus NXDL schema to which this entry conforms which must be
			the name of the NXDL file (case sensitive without the file extension)
			that the NXDL schema is defined in. 
			
			For example the ``definition`` field for a file that conformed to the 
			*NXarpes.nxdl.xml* definition must contain the string **NXarpes**.
			
			This field is provided so that :ref:`NXentry` can be the overlay position
			in a NeXus data file for an application definition and its
			set of groups, fields, and attributes.

			*It is advised* to use :ref:`NXsubentry`, instead, as the overlay position.
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/definition@URL)
DEBUG - value: https://github.com/FAIRmat-NFDI/nexus_definitions/blob/c0f643ac 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/definition
NXmpes.nxdl.xml:/ENTRY/definition
NXentry.nxdl.xml:/definition
DEBUG - NXentry.nxdl.xml:/definition@URL - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/definition/URL):
DEBUG - URL of NXDL file
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/definition@version)
DEBUG - value: v2024.02.post1.dev1989+gc0f643ac 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/definition
NXmpes.nxdl.xml:/ENTRY/definition
NXentry.nxdl.xml:/definition
DEBUG - NXmpes.nxdl.xml:/ENTRY/definition@version - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/definition/version):
DEBUG - 
DEBUG - NXentry.nxdl.xml:/definition@version - [NX_CHAR]
DEBUG - documentation (NXentry.nxdl.xml:/definition/version):
DEBUG - NXDL version number
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/end_time): <HDF5 dataset "end_time": shape (), type "|O">
DEBUG - value: 2022-04-08T14:52:26.040000+00:00 
DEBUG - classpath: ['NXentry', 'NX_DATE_TIME']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/end_time
NXentry.nxdl.xml:/end_time
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/end_time):
DEBUG - 
                Datetime of the end of the measurement.
                Should be a ISO8601 date/time stamp. It is recommended to add an explicit time zone,
                otherwise the local time zone is assumed per ISO8601.
            
DEBUG - documentation (NXentry.nxdl.xml:/end_time):
DEBUG - Ending time of measurement
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/energy_axis_calibration [NXxps::/NXentry/NXcalibration]): <HDF5 group "/Au_in_25mBar_O2__Au4f/energy_axis_calibration" (3 members)>
DEBUG - classpath: ['NXentry', 'NXcalibration']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration
NXcalibration.nxdl.xml:
NXprocess.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration):
DEBUG - 
                Calibration event on the energy axis.
                
                For XPS, the calibration should ideally be performed according to
                `ISO 15472:2010`_ specification.
                
                .. _ISO 15472:2010: https://www.iso.org/standard/74811.html
            
DEBUG - documentation (NXcalibration.nxdl.xml:):
DEBUG - 
        Subclass of NXprocess to describe post-processing calibrations.
    
DEBUG - documentation (NXprocess.nxdl.xml:):
DEBUG - 
        The :ref:`NXprocess` class describes an operation used to
        process data as part of an analysis workflow, providing
        information such as the software used, the date of the
        operation, the input parameters, and the resulting data. 
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/energy_axis_calibration@NX_class)
DEBUG - value: NXcalibration 
DEBUG - classpath: ['NXentry', 'NXcalibration']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration
NXcalibration.nxdl.xml:
NXprocess.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/energy_axis_calibration/calibrated_axis): <HDF5 dataset "calibrated_axis": shape (1001,), type "<f8">
DEBUG - value: [175.  174.9 174.8 ...  75.2  75.1  75. ] 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/calibrated_axis
NXcalibration.nxdl.xml:/calibrated_axis
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/calibrated_axis):
DEBUG - 
                    This is the calibrated energy axis to be used for data plotting.
                
DEBUG - documentation (NXcalibration.nxdl.xml:/calibrated_axis):
DEBUG - 
            An array representing the axis after calibration, matching the data length
        
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/energy_axis_calibration/calibrated_axis@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/calibrated_axis
NXcalibration.nxdl.xml:/calibrated_axis
DEBUG - NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/calibrated_axis@units [NX_ENERGY]
DEBUG - NXcalibration.nxdl.xml:/calibrated_axis@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/energy_axis_calibration/calibration_object [NXxps::/NXentry/NXcalibration/NXnote]): <HDF5 group "/Au_in_25mBar_O2__Au4f/energy_axis_calibration/calibration_object" (2 members)>
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote']
DEBUG - classes:
NXcalibration.nxdl.xml:/calibration_object
NXprocess.nxdl.xml:/NOTE
NXobject.nxdl.xml:/NOTE
NXnote.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcalibration.nxdl.xml:/calibration_object):
DEBUG - 
            A file serialization of a calibration which may not be publicly available (externally from the NeXus file).
            
            This metadata can be a documentation of the source (file) or database (entry) from which pieces
            of information have been extracted for consumption (e.g. in a research data management system (RDMS)).
            It is also possible to include the actual file by using the `file` field.
            
            The axis values may be copied or linked in the appropriate NXcalibration fields for reference.
        
DEBUG - documentation (NXprocess.nxdl.xml:/NOTE):
DEBUG - 
            The note will contain information about how the data was
            processed or anything about the data provenance. The
            contents of the note can be anything that the processing
            code can understand, or simple text.
            
            The name will be numbered to allow for ordering of steps.
        
DEBUG - documentation (NXobject.nxdl.xml:/NOTE):
DEBUG - 
DEBUG - documentation (NXnote.nxdl.xml:):
DEBUG - 
		Any additional freeform information not covered by the other base classes.
		
		This class can be used to store additional information in a 
		NeXus file e.g. pictures, movies, audio, additional text logs
	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/energy_axis_calibration/calibration_object@NX_class)
DEBUG - value: NXnote 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote']
DEBUG - classes:
NXcalibration.nxdl.xml:/calibration_object
NXprocess.nxdl.xml:/NOTE
NXobject.nxdl.xml:/NOTE
NXnote.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/energy_axis_calibration/calibration_object/file_name): <HDF5 dataset "file_name": shape (), type "|O">
DEBUG - value: 20200817-FAT-AR22-7x20c-Ep10-20-30-Au4f.calib1d 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote', 'NX_CHAR']
DEBUG - classes:
NXnote.nxdl.xml:/file_name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXnote.nxdl.xml:/file_name):
DEBUG - Name of original file name if note was read from an external source
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/energy_axis_calibration/calibration_object/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: file 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote', 'NX_CHAR']
DEBUG - classes:
NXnote.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXnote.nxdl.xml:/type):
DEBUG - Mime content type of note data field e.g. image/jpeg, text/plain, text/html
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/energy_axis_calibration/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: energy 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/physical_quantity
NXcalibration.nxdl.xml:/physical_quantity
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/physical_quantity):
DEBUG - -> energy
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/physical_quantity):
DEBUG - 
DEBUG - documentation (NXcalibration.nxdl.xml:/physical_quantity):
DEBUG - 
            The physical quantity of the calibration, e.g.,
            energy, momentum, time, etc.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/experiment_facility): <HDF5 dataset "experiment_facility": shape (), type "|O">
DEBUG - value: Surface and Interface Analysis Group 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXentry.nxdl.xml:/experiment_facility
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/experiment_facility):
DEBUG - 
             Name of the experimental facility
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/experiment_institution): <HDF5 dataset "experiment_institution": shape (), type "|O">
DEBUG - value: Max Planck Institute for Chemical Energy Conversion 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXentry.nxdl.xml:/experiment_institution
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/experiment_institution):
DEBUG - 
             Name of the institution hosting the facility
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/experiment_laboratory): <HDF5 dataset "experiment_laboratory": shape (), type "|O">
DEBUG - value: Near-Ambient Pressure XPS Lab 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXentry.nxdl.xml:/experiment_laboratory
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/experiment_laboratory):
DEBUG - 
             Name of the laboratory or beamline
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/identifier_entry): <HDF5 dataset "identifier_entry": shape (), type "|O">
DEBUG - value: EX439 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXentry.nxdl.xml:/identifier_entry
NXobject.nxdl.xml:/identifierNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/identifier_entry):
DEBUG - unique identifier for the measurement, defined by the facility.
DEBUG - documentation (NXobject.nxdl.xml:/identifierNAME):
DEBUG - 
			An identifier for a (persistent) resource.

			An identifier, provided by some authority, that has been assigned to an
			object described by this ``NXobject``. To be useful, the identifier
			must not be reassigned to a different real-world object. It is typical for
			there to be some mechanism to resolve an identifier, obtaining metadata
			about the object. Identifiers for which some guarantees exist regarding
			this resolution process are called persistent identifiers.
			Persistent identifiers are also known as PIDs.
		
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument [NXxps::/NXentry/NXinstrument]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument" (8 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT
NXentry.nxdl.xml:/INSTRUMENT
NXinstrument.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT):
DEBUG - 
                Description of the XPS spectrometer and its individual parts.
                
                This concept is related to term `12.58`_ of the ISO 18115-1:2023 standard.
                
                .. _12.58: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.58
            
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT):
DEBUG - 
                Description of the photoemission spectrometer and its individual parts.
                
                This concept is related to term `12.58`_ of the ISO 18115-1:2023 standard.
                
                .. _12.58: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.58
            
DEBUG - documentation (NXentry.nxdl.xml:/INSTRUMENT):
DEBUG - 
DEBUG - documentation (NXinstrument.nxdl.xml:):
DEBUG - 
		Collection of the components of the instrument or beamline.
		
		Template of instrument descriptions comprising various beamline components. 
		Each component will also be a NeXus group defined by its distance from the 
		sample. Negative distances represent beamline components that are before the 
		sample while positive distances represent components that are after the sample. 
		This device allows the unique identification of beamline components in a way 
		that is valid for both reactor and pulsed instrumentation.
	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument@NX_class)
DEBUG - value: NXinstrument 
DEBUG - classpath: ['NXentry', 'NXinstrument']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT
NXentry.nxdl.xml:/INSTRUMENT
NXinstrument.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument@default)
DEBUG - value: electronanalyzer 
DEBUG - classpath: ['NXentry', 'NXinstrument']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT
NXentry.nxdl.xml:/INSTRUMENT
NXinstrument.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT@default - [NX_CHAR]
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT@default - [NX_CHAR]
DEBUG - NXentry.nxdl.xml:/INSTRUMENT@default - [NX_CHAR]
DEBUG - NXinstrument.nxdl.xml:@default - [NX_CHAR]
DEBUG - NXobject.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXobject.nxdl.xml:/default):
DEBUG - 
			.. index:: plotting

			Declares which child group contains a path leading
			to a :ref:`NXdata` group or a group using a base class
			extending :ref:`NXdata`.

			It is recommended (as of NIAC2014) to use this attribute
			to help define the path to the default dataset to be plotted.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/beam_probe [NXxps::/NXentry/NXinstrument/NXbeam]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/beam_probe" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe
NXinstrument.nxdl.xml:/BEAM
NXbeam.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe):
DEBUG - 
                    Properties of the probe beam at a given location.
                    
                    This is the beam that is used to facilitate the photoemission during MPES
                    experiments.
                
DEBUG - documentation (NXinstrument.nxdl.xml:/BEAM):
DEBUG - 
DEBUG - documentation (NXbeam.nxdl.xml:):
DEBUG - 
        Properties of the neutron or X-ray beam at a given location. 

        This group is intended to be referenced
        by beamline component groups within the :ref:`NXinstrument` group or by the :ref:`NXsample` group. This group is
        especially valuable in storing the results of instrument simulations in which it is useful
        to specify the beam profile, time distribution etc. at each beamline component. Otherwise,
        its most likely use is in the :ref:`NXsample` group in which it defines the results of the neutron
        scattering by the sample, e.g., energy transfer, polarizations. Finally, There are cases where the beam is
        considered as a beamline component and this group may be defined as a subgroup directly inside
        :ref:`NXinstrument`, in which case it is recommended that the position of the beam is specified by an 
        :ref:`NXtransformations` group, unless the beam is at the origin (which is the sample).

        Note that ``incident_wavelength``, ``incident_energy``, and related fields can be a scalar values or arrays, depending on the use case.
        To support these use cases, the explicit dimensionality of these fields is not specified, but it can be inferred
        by the presense of and shape of accompanying fields, such as incident_wavelength_weights for a polychromatic beam.
        
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/beam_probe@NX_class)
DEBUG - value: NXbeam 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe
NXinstrument.nxdl.xml:/BEAM
NXbeam.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/beam_probe/associated_source): <HDF5 dataset "associated_source": shape (), type "|O">
DEBUG - value: /entry/instrument/source_probe 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/associated_source
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/associated_source):
DEBUG - 
                        The source that emitted this beam.
                        Should be named with the same suffix, e.g.,
                        for ``beam_probe`` it should refer to ``source_probe``.
                        This should be specified if an associated source exists.
                        
                        Example:
                          * /entry/instrument/beam_probe/associated_source = /entry/instrument/source_probe
                    
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/beam_probe/distance): <HDF5 dataset "distance": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/distance
NXbeam.nxdl.xml:/distance
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/distance):
DEBUG - 
                        Distance between the point where the current NXbeam instance is evaluating
                        the beam properties and the point where the beam interacts with the sample.
                        For photoemission, the latter is the point where the the centre of the beam
                        touches the sample surface.
                    
DEBUG - documentation (NXbeam.nxdl.xml:/distance):
DEBUG - Distance from sample. Note, it is recommended to use NXtransformations instead.
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/beam_probe/distance@units)
DEBUG - value: mm 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/distance
NXbeam.nxdl.xml:/distance
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/distance@units [NX_LENGTH]
DEBUG - NXbeam.nxdl.xml:/distance@units [NX_LENGTH]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/beam_probe/incident_energy): <HDF5 dataset "incident_energy": shape (), type "<f8">
DEBUG - value: 1486.61 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/incident_energy
NXbeam.nxdl.xml:/incident_energy
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/incident_energy):
DEBUG - 
DEBUG - documentation (NXbeam.nxdl.xml:/incident_energy):
DEBUG - 
            Energy carried by each particle of the beam on entering the given location.

            Several use cases are permitted, depending on the presence or absence of
            other ``incident_energy_X`` fields. The usage should follow that of
            :ref:`incident_wavelength </NXbeam/incident_wavelength-field>`.
       
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/beam_probe/incident_energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/incident_energy
NXbeam.nxdl.xml:/incident_energy
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/incident_energy@units [NX_ENERGY]
DEBUG - NXbeam.nxdl.xml:/incident_energy@units [NX_ENERGY]
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/device_information [NXxps::/NXentry/NXinstrument/NXfabrication]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information
NXinstrument.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information):
DEBUG - 
DEBUG - documentation (NXinstrument.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information
NXinstrument.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: Custom NAP-XPS instrument 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: SPECS GmbH 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer [NXxps::/NXentry/NXinstrument/NXelectronanalyzer]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer" (11 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER
NXelectronanalyzer.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:):
DEBUG - 
        Basic class for describing an electron analyzer.
        
        This concept is related to term `12.59`_ of the ISO 18115-1:2023 standard.
        
        .. _12.59: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.59
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer@NX_class)
DEBUG - value: NXelectronanalyzer 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER
NXelectronanalyzer.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer@default)
DEBUG - value: detector 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER
NXelectronanalyzer.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER@default - [NX_CHAR]
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER@default - [NX_CHAR]
DEBUG - NXelectronanalyzer.nxdl.xml:@default - [NX_CHAR]
DEBUG - NXcomponent.nxdl.xml:@default - [NX_CHAR]
DEBUG - NXobject.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXobject.nxdl.xml:/default):
DEBUG - 
			.. index:: plotting

			Declares which child group contains a path leading
			to a :ref:`NXdata` group or a group using a base class
			extending :ref:`NXdata`.

			It is recommended (as of NIAC2014) to use this attribute
			to help define the path to the default dataset to be plotted.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn" (10 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN
NXelectronanalyzer.nxdl.xml:/COLLECTIONCOLUMN
NXcollectioncolumn.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/COLLECTIONCOLUMN):
DEBUG - 
            Describes the electron collection (spatial and momentum imaging) column
        
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:):
DEBUG - 
        Electron collection column of an electron analyzer.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn@NX_class)
DEBUG - value: NXcollectioncolumn 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN
NXelectronanalyzer.nxdl.xml:/COLLECTIONCOLUMN
NXcollectioncolumn.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/L1 [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXelectromagnetic_lens]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/L1" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS):
DEBUG - 
            Individual lenses in the collection column section
        
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:):
DEBUG - 
        Base class for an electro-magnetic lens or a compound lens.
        
        For :ref:`NXtransformations` the origin of the coordinate system is placed
        in the center of the lens its polepiece, pinhole, or another point of reference.
        The origin should be specified in the :ref:`NXtransformations`.
        
        For details of electro-magnetic lenses in the literature see e.g.
        
        * `L. Reimer: Scanning Electron Microscopy <https://doi.org/10.1007/978-3-540-38967-5>`_
        * `P. Hawkes: Magnetic Electron Lenses <https://link.springer.com/book/10.1007/978-3-642-81516-4>`_
        * `Y. Liao: Practical Electron Microscopy and Database <https://www.globalsino.com/EM/>`_
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/L1@NX_class)
DEBUG - value: NXelectromagnetic_lens 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/L1/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Lens 1 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens', 'NX_CHAR']
DEBUG - classes:
NXelectromagnetic_lens.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:/name):
DEBUG - 
            Name of the lens.
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/L2 [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXelectromagnetic_lens]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/L2" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS):
DEBUG - 
            Individual lenses in the collection column section
        
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:):
DEBUG - 
        Base class for an electro-magnetic lens or a compound lens.
        
        For :ref:`NXtransformations` the origin of the coordinate system is placed
        in the center of the lens its polepiece, pinhole, or another point of reference.
        The origin should be specified in the :ref:`NXtransformations`.
        
        For details of electro-magnetic lenses in the literature see e.g.
        
        * `L. Reimer: Scanning Electron Microscopy <https://doi.org/10.1007/978-3-540-38967-5>`_
        * `P. Hawkes: Magnetic Electron Lenses <https://link.springer.com/book/10.1007/978-3-642-81516-4>`_
        * `Y. Liao: Practical Electron Microscopy and Database <https://www.globalsino.com/EM/>`_
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/L2@NX_class)
DEBUG - value: NXelectromagnetic_lens 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/L2/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Lens 2 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens', 'NX_CHAR']
DEBUG - classes:
NXelectromagnetic_lens.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:/name):
DEBUG - 
            Name of the lens.
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/coil [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXelectromagnetic_lens]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/coil" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS):
DEBUG - 
            Individual lenses in the collection column section
        
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:):
DEBUG - 
        Base class for an electro-magnetic lens or a compound lens.
        
        For :ref:`NXtransformations` the origin of the coordinate system is placed
        in the center of the lens its polepiece, pinhole, or another point of reference.
        The origin should be specified in the :ref:`NXtransformations`.
        
        For details of electro-magnetic lenses in the literature see e.g.
        
        * `L. Reimer: Scanning Electron Microscopy <https://doi.org/10.1007/978-3-540-38967-5>`_
        * `P. Hawkes: Magnetic Electron Lenses <https://link.springer.com/book/10.1007/978-3-642-81516-4>`_
        * `Y. Liao: Practical Electron Microscopy and Database <https://www.globalsino.com/EM/>`_
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/coil@NX_class)
DEBUG - value: NXelectromagnetic_lens 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/coil/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Coil 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens', 'NX_CHAR']
DEBUG - classes:
NXelectromagnetic_lens.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:/name):
DEBUG - 
            Name of the lens.
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/device_information [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXfabrication]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information):
DEBUG - 
DEBUG - documentation (NXcomponent.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: PHOIBOS 150 NAP 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: SPECS GmbH 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/focus_displacement [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXelectromagnetic_lens]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/focus_displacement" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS):
DEBUG - 
            Individual lenses in the collection column section
        
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:):
DEBUG - 
        Base class for an electro-magnetic lens or a compound lens.
        
        For :ref:`NXtransformations` the origin of the coordinate system is placed
        in the center of the lens its polepiece, pinhole, or another point of reference.
        The origin should be specified in the :ref:`NXtransformations`.
        
        For details of electro-magnetic lenses in the literature see e.g.
        
        * `L. Reimer: Scanning Electron Microscopy <https://doi.org/10.1007/978-3-540-38967-5>`_
        * `P. Hawkes: Magnetic Electron Lenses <https://link.springer.com/book/10.1007/978-3-642-81516-4>`_
        * `Y. Liao: Practical Electron Microscopy and Database <https://www.globalsino.com/EM/>`_
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/focus_displacement@NX_class)
DEBUG - value: NXelectromagnetic_lens 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/focus_displacement/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Focus Displacement 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens', 'NX_CHAR']
DEBUG - classes:
NXelectromagnetic_lens.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:/name):
DEBUG - 
            Name of the lens.
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/iris [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXaperture]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/iris" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXaperture']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/iris
NXcollectioncolumn.nxdl.xml:/APERTURE
NXaperture.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/iris):
DEBUG - 
                            Size, position and shape of the iris inserted in the column.
                            
                            The iris is an aperture in the lens with a variable diameter which can reduce the number of
                            electrons entering the analyzer.
                            
                            To add additional or other slits use the APERTURE group of NXcollectioncolumn.
                        
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/APERTURE):
DEBUG - 
            The size and position of an aperture inserted in the column, e.g. field aperture
            or contrast aperture
        
DEBUG - documentation (NXaperture.nxdl.xml:):
DEBUG - 
      A beamline aperture.

      Note, the group was incorrectly documented as deprecated, but it is not and it is in common use.
      
      You can specify the geometry of the aperture using either NXoff_geometry or for simpler geometry shape and size.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/iris@NX_class)
DEBUG - value: NXaperture 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXaperture']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/iris
NXcollectioncolumn.nxdl.xml:/APERTURE
NXaperture.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/iris/size): <HDF5 dataset "size": shape (), type "<f8">
DEBUG - value: 60.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXaperture', 'NX_NUMBER']
DEBUG - classes:
NXaperture.nxdl.xml:/size
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXaperture.nxdl.xml:/size):
DEBUG - 
             The relevant dimension for the aperture, i.e. slit width, pinhole and iris
             diameter
        
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/iris/size@units)
DEBUG - value: mm 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXaperture', 'NX_NUMBER']
DEBUG - classes:
NXaperture.nxdl.xml:/size
DEBUG - NXaperture.nxdl.xml:/size@units [NX_LENGTH]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/lens_mode): <HDF5 dataset "lens_mode": shape (), type "|O">
DEBUG - value: AngleResolvedMode22 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/lens_mode
NXcollectioncolumn.nxdl.xml:/lens_mode
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/lens_mode):
DEBUG - 
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/lens_mode):
DEBUG - 
            Labelling of the lens setting in use.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_x [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXelectromagnetic_lens]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_x" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS):
DEBUG - 
            Individual lenses in the collection column section
        
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:):
DEBUG - 
        Base class for an electro-magnetic lens or a compound lens.
        
        For :ref:`NXtransformations` the origin of the coordinate system is placed
        in the center of the lens its polepiece, pinhole, or another point of reference.
        The origin should be specified in the :ref:`NXtransformations`.
        
        For details of electro-magnetic lenses in the literature see e.g.
        
        * `L. Reimer: Scanning Electron Microscopy <https://doi.org/10.1007/978-3-540-38967-5>`_
        * `P. Hawkes: Magnetic Electron Lenses <https://link.springer.com/book/10.1007/978-3-642-81516-4>`_
        * `Y. Liao: Practical Electron Microscopy and Database <https://www.globalsino.com/EM/>`_
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_x@NX_class)
DEBUG - value: NXelectromagnetic_lens 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_x/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Pre-Deflector X 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens', 'NX_CHAR']
DEBUG - classes:
NXelectromagnetic_lens.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:/name):
DEBUG - 
            Name of the lens.
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_y [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXelectromagnetic_lens]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_y" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS):
DEBUG - 
            Individual lenses in the collection column section
        
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:):
DEBUG - 
        Base class for an electro-magnetic lens or a compound lens.
        
        For :ref:`NXtransformations` the origin of the coordinate system is placed
        in the center of the lens its polepiece, pinhole, or another point of reference.
        The origin should be specified in the :ref:`NXtransformations`.
        
        For details of electro-magnetic lenses in the literature see e.g.
        
        * `L. Reimer: Scanning Electron Microscopy <https://doi.org/10.1007/978-3-540-38967-5>`_
        * `P. Hawkes: Magnetic Electron Lenses <https://link.springer.com/book/10.1007/978-3-642-81516-4>`_
        * `Y. Liao: Practical Electron Microscopy and Database <https://www.globalsino.com/EM/>`_
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_y@NX_class)
DEBUG - value: NXelectromagnetic_lens 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_y/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Pre-Deflector Y 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens', 'NX_CHAR']
DEBUG - classes:
NXelectromagnetic_lens.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:/name):
DEBUG - 
            Name of the lens.
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/collectioncolumn/scheme): <HDF5 dataset "scheme": shape (), type "|O">
DEBUG - value: angular dispersive 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/scheme
NXcollectioncolumn.nxdl.xml:/scheme
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/scheme):
DEBUG - -> angular dispersive
DEBUG - -> spatial dispersive
DEBUG - -> momentum dispersive
DEBUG - -> non-dispersive
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/scheme):
DEBUG - 
                            Scheme of the electron collection column.
                        
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/scheme):
DEBUG - 
            Scheme of the electron collection lens, i.e. angular dispersive,
            spatial dispersive, momentum dispersive, non-dispersive, etc.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/description): <HDF5 dataset "description": shape (), type "|O">
DEBUG - value: hemispherical 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/description
NXelectronanalyzer.nxdl.xml:/description
NXcomponent.nxdl.xml:/description
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/description):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/description):
DEBUG - 
            Free text description of the type of the detector
        
DEBUG - documentation (NXcomponent.nxdl.xml:/description):
DEBUG - 
            Ideally, use instances of ``identifierNAME`` to point to a resource
            that provides further details.

            If such a resource does not exist or should not be used, use this free text,
            although it is not recommended.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXelectron_detector]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR
NXelectron_detector.nxdl.xml:
NXdetector.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR):
DEBUG - 
DEBUG - documentation (NXelectron_detector.nxdl.xml:):
DEBUG - 
    A subclass of NXdetector for detectors that detect electrons.
  
DEBUG - documentation (NXdetector.nxdl.xml:):
DEBUG - 
    A detector, detector bank, or multidetector.
  
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector@NX_class)
DEBUG - value: NXelectron_detector 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR
NXelectron_detector.nxdl.xml:
NXdetector.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector@default)
DEBUG - value: raw_data 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR
NXelectron_detector.nxdl.xml:
NXdetector.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR@default - [NX_CHAR]
DEBUG - NXelectron_detector.nxdl.xml:@default - [NX_CHAR]
DEBUG - NXdetector.nxdl.xml:@default - [NX_CHAR]
DEBUG - NXcomponent.nxdl.xml:@default - [NX_CHAR]
DEBUG - NXobject.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXobject.nxdl.xml:/default):
DEBUG - 
			.. index:: plotting

			Declares which child group contains a path leading
			to a :ref:`NXdata` group or a group using a base class
			extending :ref:`NXdata`.

			It is recommended (as of NIAC2014) to use this attribute
			to help define the path to the default dataset to be plotted.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/count_time): <HDF5 dataset "count_time": shape (), type "<f8">
DEBUG - value: 0.1 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NX_NUMBER']
DEBUG - classes:
NXdetector.nxdl.xml:/count_time
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdetector.nxdl.xml:/count_time):
DEBUG - Elapsed actual counting time
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/count_time@units)
DEBUG - value: s 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NX_NUMBER']
DEBUG - classes:
NXdetector.nxdl.xml:/count_time
DEBUG - NXdetector.nxdl.xml:/count_time@units [NX_TIME]
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXelectron_detector/NXdata]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data" (301 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data):
DEBUG - 
                            Contains the raw data collected by the detector before calibration.
                            The data which is considered raw might change from experiment to experiment
                            due to hardware pre-processing of the data.
                            This group ideally collects the data with the lowest level of processing
                            possible.
                            
                            Axes should be named according to the conventions defined below. Note that this
                            list is a glossary with explicitly named axis names, which is only intended to
                            cover the most common measurement axes and is therefore not complete. It is
                            possible to add axes with other names at any time.
                        
DEBUG - documentation (NXobject.nxdl.xml:/DATA):
DEBUG - 
DEBUG - documentation (NXdata.nxdl.xml:):
DEBUG - 
		The :ref:`NXdata` class is designed to encapsulate all the information required for a set of data to be plotted.
		NXdata groups contain plottable data (also referred to as *signals* or *dependent variables*) and their
		associated axis coordinates (also referred to as *axes* or *independent variables*).

		The actual names of the :ref:`DATA </NXdata/DATA-field>` and :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
		can be chosen :ref:`freely <validItemName>`, as indicated by the upper case (this is a common convention in all NeXus classes).
		
		.. note:: ``NXdata`` provides data and coordinates to be plotted but
			does not describe how the data is to be plotted or even the dimensionality of the plot.
			https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute

		.. include:: data/index.rst
		   :start-line: 1

		.. admonition:: Example of a simple curve plot

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x"]
				  data: float[100]
				  x: float[100]

		More complex cases are supported

		* histogram data: ``x`` has one more value than ``data``.
		* alternative axes: instead of a single ``x`` axis you can have several axes, one of which being the default.
		* signals with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` along each dimension.
		* axes with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` also being 2D, providing a
		  unique ``(x, y)`` coordinate for each ``data`` point.

		**Signals:**

		.. index:: plotting

		.. admonition:: Defined by

			* :ref:`DATA </NXdata/DATA-field>` fields
			* the :ref:`signal </NXdata@signal-attribute>` attribute
			* the :ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute

		The :ref:`DATA </NXdata/DATA-field>` fields contain the signal values to be plotted. The name of the field
		to be used as the *default plot signal* is provided by the :ref:`signal </NXdata@signal-attribute>` attribute.
		The names of the fields to be used as *secondary plot signals* are provided by the
		:ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute.

		.. admonition:: An example with three signals, one of which being the default

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  data1: float[10,20,30]  # the default signal
				  data2: float[10,20,30]
				  data3: float[10,20,30]

		**Axes:**

		.. index:: axes (attribute)
		.. index:: coordinates

		.. admonition:: Defined by

			* :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			* the :ref:`axes </NXdata@axes-attribute>` attribute
			* :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes

		The fields and attributes are defined as follows

		1. The :ref:`AXISNAME </NXdata/AXISNAME-field>` fields contain the axis coordinates associated with the signal values.

		2. The :ref:`axes </NXdata@axes-attribute>` attribute provides the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   fields to be used as the `default axis` for each dimension of the :ref:`DATA </NXdata/DATA-field>` fields.

		3. The :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes describe the :ref:`DATA </NXdata/DATA-field>`
		   dimensions spanned by the corresponding :ref:`AXISNAME </NXdata/AXISNAME-field>` fields.

		The fields and attributes have the following constraints

		1. The length of the :ref:`axes </NXdata@axes-attribute>` attribute must be equal to the rank of the :ref:`DATA </NXdata/DATA-field>`
		   fields. When a particular dimension has no default axis, the string “.” is used in that position.

		2. The number of values in :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` must be equal to the rank of the corresponding
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		3. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is missing for a given
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field, the positions of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   field name in the :ref:`axes </NXdata@axes-attribute>` attribute are used.

		4. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is the same as the indices of "AXISNAME" in the
		   :ref:`axes </NXdata@axes-attribute>` attribute, there is no need to provide
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		5. The indices of "AXISNAME" in the :ref:`axes </NXdata@axes-attribute>` attribute must be a subset of
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		6. The shape of an :ref:`AXISNAME </NXdata/AXISNAME-field>` field must correspond to the shape of the
		   :ref:`DATA </NXdata/DATA-field>` dimensions it spans. This means that for each dimension ``i`` in ``[0, AXISNAME.ndim)``
		   spanned by axis field :ref:`AXISNAME </NXdata/AXISNAME-field>`, the number of axis values ``AXISNAME.shape[i]``
		   along dimension ``i`` must be equal to the number of data points ``DATA.shape[AXISNAME_indices[i]]`` along dimension ``i``
		   or one more than the number of data points ``DATA.shape[AXISNAME_indices[i]]+1`` in case the
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field contains histogram bin edges along dimension ``i``.

		Highlight consequences of these constraints

		1. An :ref:`AXISNAME </NXdata/AXISNAME-field>` field can have more than one dimension and can therefore span
		   more than one :ref:`DATA </NXdata/DATA-field>` dimension. Conversely, one :ref:`DATA </NXdata/DATA-field>` dimension
		   can be spanned by more than one :ref:`AXISNAME </NXdata/AXISNAME-field>` field. The default axis name (if any)
		   of each dimension can be found in the :ref:`axes </NXdata@axes-attribute>` attribute.

		2. A list of all available axes is not provided directly. All strings in the :ref:`axes </NXdata@axes-attribute>` attribute
		   (excluding the “.” string) are axis field names. In addition the prefix of an attribute ending with the string "_indices" is also
		   an axis field name.

		.. admonition:: The following example covers all axes features supported (see :ref:`sphx_glr_classes_base_classes_data_plot_fscan2d.py`)

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x_set", "y_set", "."]  # default axes for all three dimensions
				  @x_encoder_indices = [0, 1]
				  @y_encoder_indices = 1           # or [1]
				  data: float[10,7,1024]
				  x_encoder: float[11,7]           # coordinates along the first and second dimensions
				  y_encoder: float[7]              # coordinates along the second dimension
				  x_set: float[10]                 # default coordinates along the first dimension
				  y_set: float[7]                  # default coordinates along the second dimension

		**Uncertainties:**

		.. admonition:: Defined by

			* :ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields

		Standard deviations on data values as well as coordinates can be provided by
		:ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields where ``FIELDNAME`` is the name of a
		:ref:`DATA </NXdata/DATA-field>` field or an :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		.. admonition:: An example of uncertainties on the signal, auxiliary signals and axis coordinates

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  @axes = ["x", ".", "z"]
				  data1: float[10,20,30]
				  data2: float[10,20,30]
				  data3: float[10,20,30]
				  x: float[10]
				  z: float[30]
				  data1_errors: float[10,20,30]
				  data2_errors: float[10,20,30]
				  data3_errors: float[10,20,30]
				  x_errors: float[10]
				  z_errors: float[30]

	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data@NX_class)
DEBUG - value: NXdata 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data@signal)
DEBUG - value: raw 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data@signal - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data/signal):
DEBUG - -> raw
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data/signal):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@signal - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/signal):
DEBUG - 
			.. index:: find the default plottable data
			.. index:: plotting
			.. index:: signal attribute value
			
			The value is the :ref:`name <validItemName>` of the signal that contains
			the default plottable data. This field or link *must* exist and be a direct child
			of this NXdata group.
			
			It is recommended (as of NIAC2014) to use this attribute
			rather than adding a signal attribute to the field.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle100_scan1_chan0): <HDF5 dataset "cycle100_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 96.50416 147.3704  156.1954  ...   8.4054   28.1818    0.36   ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle100_scan2_chan0): <HDF5 dataset "cycle100_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [100.41068  90.18982  94.8359  ...  23.58414   3.395    21.5448 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle100_scan3_chan0): <HDF5 dataset "cycle100_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [57.23672 55.5074  95.51146 ...  4.7692   8.9362  22.4354 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle10_scan1_chan0): <HDF5 dataset "cycle10_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [142.52174  77.5653   80.8059  ...  24.6668    1.9366    6.2098 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle10_scan2_chan0): <HDF5 dataset "cycle10_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 59.5017   92.6594  125.9187  ...   4.3562   16.80936  16.7916 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle10_scan3_chan0): <HDF5 dataset "cycle10_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [67.104552 91.70134  81.50618  ...  5.2662   16.1246   31.3356  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle11_scan1_chan0): <HDF5 dataset "cycle11_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [90.412088 51.337312 73.97954  ... 25.8994    6.7076   34.8037  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle11_scan2_chan0): <HDF5 dataset "cycle11_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [90.7022 83.5852 76.6571 ... 22.9333  6.552  27.9768] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle11_scan3_chan0): <HDF5 dataset "cycle11_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [111.58026  79.29256  80.3119  ...  21.0476   24.9752   16.071  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle12_scan1_chan0): <HDF5 dataset "cycle12_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [91.25286 80.7029  92.9847  ... 20.3424  15.9348   4.7002 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle12_scan2_chan0): <HDF5 dataset "cycle12_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [116.894192  95.3348   124.35474  ...  24.4426    14.787     21.1832  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle12_scan3_chan0): <HDF5 dataset "cycle12_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [117.2056  117.09928  66.54888 ...  24.59416  19.28104   7.7706 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle13_scan1_chan0): <HDF5 dataset "cycle13_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [125.589212  77.90834  112.21534  ...  23.2418     5.9684     0.257348] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle13_scan2_chan0): <HDF5 dataset "cycle13_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [84.666808 86.809292 79.1251   ... 18.12884   5.3864    4.9398  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle13_scan3_chan0): <HDF5 dataset "cycle13_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [119.6532    94.90856   68.21372  ...  29.744452  23.4126    15.8995  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle14_scan1_chan0): <HDF5 dataset "cycle14_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [165.81616 165.18164 113.7386  ...   7.1692   32.09476  16.06944] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle14_scan2_chan0): <HDF5 dataset "cycle14_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [117.737652 106.08784  113.64062  ...   2.2118     0.        13.3454  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle14_scan3_chan0): <HDF5 dataset "cycle14_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [142.142272  86.6568    88.71166  ...  22.3844    32.8624    14.152   ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle15_scan1_chan0): <HDF5 dataset "cycle15_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 90.59914 127.614    95.57386 ...  40.01582  18.0617   15.0937 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle15_scan2_chan0): <HDF5 dataset "cycle15_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 72.0436   83.0686  136.7967  ...  19.6736   37.0332   32.93304] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle15_scan3_chan0): <HDF5 dataset "cycle15_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [84.95846 64.1161  83.4638  ... 26.2592  13.4994  37.9254 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle16_scan1_chan0): <HDF5 dataset "cycle16_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [1.3349858e+02 1.4182126e+02 8.4782560e+01 ... 6.9000000e-02 0.0000000e+00 ...
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle16_scan2_chan0): <HDF5 dataset "cycle16_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 79.6074   94.35534 107.72536 ...  18.35256  11.62984  11.8342 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle16_scan3_chan0): <HDF5 dataset "cycle16_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [48.2187 91.2337 69.8439 ... 24.2174 12.4019 16.9119] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle17_scan1_chan0): <HDF5 dataset "cycle17_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [101.2145  95.6141 125.2446 ...   0.979    9.09     6.4318] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle17_scan2_chan0): <HDF5 dataset "cycle17_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [114.1837    80.323896 108.441604 ...   8.0952    21.2538    10.3086  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle17_scan3_chan0): <HDF5 dataset "cycle17_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [111.78434  83.9939   79.62572 ...   0.        2.4708   10.5836 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle18_scan1_chan0): <HDF5 dataset "cycle18_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [124.71176   91.83756  102.073788 ...  18.5924    28.852     20.5834  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle18_scan2_chan0): <HDF5 dataset "cycle18_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [127.73606  102.124196 168.563684 ...  13.2756     8.0616     1.9384  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle18_scan3_chan0): <HDF5 dataset "cycle18_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [123.64956 105.7335   53.2253  ...   7.462     7.4956   10.9082 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle19_scan1_chan0): <HDF5 dataset "cycle19_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [130.97602 104.52534 102.1662  ...   2.882     0.       14.5976 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle19_scan2_chan0): <HDF5 dataset "cycle19_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [102.6556  101.20496 117.13668 ...  20.7374   17.1533   13.1553 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle19_scan3_chan0): <HDF5 dataset "cycle19_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [87.25654  88.594708 88.899192 ...  7.34     13.8256   18.7831  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle1_scan1_chan0): <HDF5 dataset "cycle1_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [11.0108 19.5038 36.0038 ... 14.1662  0.      8.6965] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle1_scan2_chan0): <HDF5 dataset "cycle1_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [39.0036 14.6472 28.1994 ...  0.      0.     11.7316] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle1_scan3_chan0): <HDF5 dataset "cycle1_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [15.5394 26.605  45.4581 ...  8.6948  8.8344  0.    ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle20_scan1_chan0): <HDF5 dataset "cycle20_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [126.41814  82.6904   88.181   ...   8.4392   24.9063   23.4991 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle20_scan2_chan0): <HDF5 dataset "cycle20_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [104.836452 103.19364  112.19426  ...  30.3104    24.6296    18.5418  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle20_scan3_chan0): <HDF5 dataset "cycle20_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [126.58506 144.84218 128.93098 ...   8.5064   22.8987   29.2123 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle21_scan1_chan0): <HDF5 dataset "cycle21_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [112.023972 159.8799   128.370896 ...  17.409     15.695     20.7014  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle21_scan2_chan0): <HDF5 dataset "cycle21_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 98.0616   90.8046  115.511   ...  18.836    12.16058  32.50442] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle21_scan3_chan0): <HDF5 dataset "cycle21_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [92.605   72.3843  84.15598 ... 20.1044  24.9062  14.7498 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle22_scan1_chan0): <HDF5 dataset "cycle22_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [8.9090900e+01 9.1938980e+01 1.3346424e+02 ... 1.6000000e-02 9.2801000e+00 ...
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle22_scan2_chan0): <HDF5 dataset "cycle22_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 83.8557  127.63634 111.50512 ...  20.825    14.099    20.9082 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle22_scan3_chan0): <HDF5 dataset "cycle22_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [126.35006 102.79438  73.65332 ...  44.11656  19.5702   15.2166 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle23_scan1_chan0): <HDF5 dataset "cycle23_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 97.6652   80.51816 118.5592  ...   5.0248   25.35214  24.64786] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle23_scan2_chan0): <HDF5 dataset "cycle23_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 92.80996 143.02486 106.08614 ...  25.2328   17.889    17.4795 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle23_scan3_chan0): <HDF5 dataset "cycle23_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 83.347092 102.3687   137.3061   ...  15.231     28.09504   28.26856 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle24_scan1_chan0): <HDF5 dataset "cycle24_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [115.29724 116.5022   95.45254 ...   9.5888   18.1994    5.3174 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle24_scan2_chan0): <HDF5 dataset "cycle24_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [146.01976 107.1535  127.89052 ...  23.7742    6.9986    8.7318 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle24_scan3_chan0): <HDF5 dataset "cycle24_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [116.81036 103.84256  95.11178 ...   7.942     9.4164    9.6064 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle25_scan1_chan0): <HDF5 dataset "cycle25_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [54.9738  57.6998  76.83204 ... 33.4126  17.1888  15.7622 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle25_scan2_chan0): <HDF5 dataset "cycle25_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 76.99502 140.41484 114.59264 ...  11.74926  15.6615   20.61704] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle25_scan3_chan0): <HDF5 dataset "cycle25_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [107.0719  184.30614  85.12718 ...   5.5586   36.242    19.3474 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle26_scan1_chan0): <HDF5 dataset "cycle26_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 86.58726 145.7286  124.7683  ...  19.9663   29.88156  38.88384] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle26_scan2_chan0): <HDF5 dataset "cycle26_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [111.26762  68.2842   66.1734  ...  25.71036  26.10804   8.8326 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle26_scan3_chan0): <HDF5 dataset "cycle26_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [115.732552 117.0168   144.4883   ...  17.2736     4.0988    27.9942  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle27_scan1_chan0): <HDF5 dataset "cycle27_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 79.55496  86.31252 134.28612 ...  26.41414  16.43406  14.9576 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle27_scan2_chan0): <HDF5 dataset "cycle27_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [134.16946  93.3245  108.88564 ...  18.319    16.827    24.6986 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle27_scan3_chan0): <HDF5 dataset "cycle27_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [63.72108  60.73782  90.244388 ... 18.0278   37.16944  19.77626 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle28_scan1_chan0): <HDF5 dataset "cycle28_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [78.57694 82.05806 97.73354 ... 10.6524   7.8556  18.7984 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle28_scan2_chan0): <HDF5 dataset "cycle28_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [57.90778 51.95168 62.89972 ... 17.5452   8.1482  23.3454 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle28_scan3_chan0): <HDF5 dataset "cycle28_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 98.01002 151.9262  113.85544 ...  16.4846   22.196    21.406  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle29_scan1_chan0): <HDF5 dataset "cycle29_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [80.10302 91.4205  79.60948 ...  7.7882  20.4795  16.0389 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle29_scan2_chan0): <HDF5 dataset "cycle29_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [130.05472 147.09666 163.62318 ...  14.0634    5.0602    5.7792 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle29_scan3_chan0): <HDF5 dataset "cycle29_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [103.95962  148.356688 141.797452 ...  12.8306    30.137     19.2282  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle2_scan1_chan0): <HDF5 dataset "cycle2_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [41.52778 28.31882 46.12498 ...  9.624   10.376   12.7104 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle2_scan2_chan0): <HDF5 dataset "cycle2_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [47.08504 21.66336 11.9048  ... 10.3264  22.2116   6.8976 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle2_scan3_chan0): <HDF5 dataset "cycle2_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [27.15426 64.52784 29.1589  ...  5.6598   4.305   15.6102 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle30_scan1_chan0): <HDF5 dataset "cycle30_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [111.24924  120.13422  126.8764   ...  26.3982    17.562948  20.634852] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle30_scan2_chan0): <HDF5 dataset "cycle30_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [116.25992 112.02422 109.1958  ...  29.9673   17.2222   10.307  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle30_scan3_chan0): <HDF5 dataset "cycle30_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 64.85498  133.58688  110.252448 ...  30.3264    13.3108    13.9114  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle31_scan1_chan0): <HDF5 dataset "cycle31_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [138.812452 121.97256  112.1446   ...  33.63884   19.12376   11.5962  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle31_scan2_chan0): <HDF5 dataset "cycle31_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 62.5395  122.69462 130.1169  ...  15.0264   14.4942    9.916  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle31_scan3_chan0): <HDF5 dataset "cycle31_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [112.133   147.69634 100.06994 ...  27.61566  13.24194   9.5888 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle32_scan1_chan0): <HDF5 dataset "cycle32_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [99.9314 57.803  47.     ... 13.3454 19.1944 18.4038] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle32_scan2_chan0): <HDF5 dataset "cycle32_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [111.491952  72.8829    77.855    ...  29.77622   12.1092    30.3456  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle32_scan3_chan0): <HDF5 dataset "cycle32_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [128.7828   74.28984  65.07454 ...  10.085     4.90616  22.82904] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle33_scan1_chan0): <HDF5 dataset "cycle33_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [97.307112 81.76614  76.261448 ... 31.3228   28.6948   19.1944  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle33_scan2_chan0): <HDF5 dataset "cycle33_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [110.412152  78.11216   70.31     ...  32.316     19.0742    17.8394  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle33_scan3_chan0): <HDF5 dataset "cycle33_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 75.71526  76.42934 127.39228 ...  15.0248    2.882     7.171  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle34_scan1_chan0): <HDF5 dataset "cycle34_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [143.51398  75.86836 102.4336  ...  26.24176  27.30708  27.08596] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle34_scan2_chan0): <HDF5 dataset "cycle34_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 74.69954 102.9478  126.31946 ...   7.171    13.3084   20.6703 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle34_scan3_chan0): <HDF5 dataset "cycle34_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [122.7942  127.9081  103.70524 ...  42.21004  10.75516   8.01184] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle35_scan1_chan0): <HDF5 dataset "cycle35_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [122.86268 149.07642 109.4003  ...  24.8708   15.4026   17.4443 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle35_scan2_chan0): <HDF5 dataset "cycle35_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [127.75468 103.96168  91.08154 ...  23.9787   20.94364   5.67726] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle35_scan3_chan0): <HDF5 dataset "cycle35_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [130.310012  96.51634   75.3543   ...  21.8342     6.3812    31.272588] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle36_scan1_chan0): <HDF5 dataset "cycle36_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 95.9967    72.509836 134.098864 ...  24.3074    21.989      6.7918  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle36_scan2_chan0): <HDF5 dataset "cycle36_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 43.41258  87.30916 106.15576 ...   4.9046   31.3052   13.7038 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle36_scan3_chan0): <HDF5 dataset "cycle36_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 90.25654  153.552288 130.290752 ...  11.3902     0.        33.5355  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle37_scan1_chan0): <HDF5 dataset "cycle37_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [101.7487   110.499048 124.94316  ...  26.843     13.104     24.6648  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle37_scan2_chan0): <HDF5 dataset "cycle37_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 99.27924 111.40376 119.57032 ...  13.97866  22.16034  18.7655 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle37_scan3_chan0): <HDF5 dataset "cycle37_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [124.4117 115.1633  90.2222 ...  14.152    4.9736   8.799 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle38_scan1_chan0): <HDF5 dataset "cycle38_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [140.3079    69.16046   78.6091   ...  17.564452  16.157     10.1554  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle38_scan2_chan0): <HDF5 dataset "cycle38_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 78.59056  129.659188  53.343612 ...   0.        12.6752    23.7406  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle38_scan3_chan0): <HDF5 dataset "cycle38_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [107.8186  110.977    72.58946 ...  10.3954    8.508    32.8986 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle39_scan1_chan0): <HDF5 dataset "cycle39_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 63.82826  99.7972  109.63834 ...  16.9296   11.56086   6.82694] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle39_scan2_chan0): <HDF5 dataset "cycle39_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [125.59092 114.01384 144.0476  ...   8.64606  21.5096    9.3988 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle39_scan3_chan0): <HDF5 dataset "cycle39_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [111.93508  75.89948  61.5947  ...  38.9186   15.2316   23.22684] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle3_scan1_chan0): <HDF5 dataset "cycle3_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [45.2664 62.5412 65.7952 ...  3.6876  6.3124  4.2888] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle3_scan2_chan0): <HDF5 dataset "cycle3_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [57.5822 40.4464 25.4378 ... 12.5382 15.2661 19.9647] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle3_scan3_chan0): <HDF5 dataset "cycle3_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [29.4518  35.62594 37.08466 ... 16.5008   8.1818  18.42324] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle40_scan1_chan0): <HDF5 dataset "cycle40_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 64.85332 118.7494   90.04974 ...  18.3526   33.6876   10.1026 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle40_scan2_chan0): <HDF5 dataset "cycle40_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 86.623   115.64326  78.57534 ...  23.1571    6.2416   23.0882 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle40_scan3_chan0): <HDF5 dataset "cycle40_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [50.3264  55.0416  75.3404  ... 43.67168 30.4978  26.24336] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle41_scan1_chan0): <HDF5 dataset "cycle41_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [108.23148 157.51428 120.64938 ...   7.7704   23.311     7.9942 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle41_scan2_chan0): <HDF5 dataset "cycle41_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [8.58849000e+01 8.91584000e+01 1.00529748e+02 ... 2.07214000e+01 ...
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle41_scan3_chan0): <HDF5 dataset "cycle41_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 95.55388  103.52002   77.185648 ...  31.18502    4.18374    3.3614  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle42_scan1_chan0): <HDF5 dataset "cycle42_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [128.95192  75.2638   89.0733  ...   4.9576   11.5608   12.093  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle42_scan2_chan0): <HDF5 dataset "cycle42_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [104.85326  84.76906  51.0966  ...  17.5822   18.0792   16.8943 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle42_scan3_chan0): <HDF5 dataset "cycle42_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [132.31706 121.66074 123.5179  ...  21.561    31.527    34.3581 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle43_scan1_chan0): <HDF5 dataset "cycle43_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [110.63322  76.01976  90.9983  ...  35.8304   20.1556   23.3084 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle43_scan2_chan0): <HDF5 dataset "cycle43_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [164.409412  64.44216   80.019688 ...  10.4112     5.9188    25.4544  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle43_scan3_chan0): <HDF5 dataset "cycle43_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [57.0177  81.30104 61.42644 ... 25.40324 31.01256 24.3898 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle44_scan1_chan0): <HDF5 dataset "cycle44_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [120.5966  136.93178  65.5377  ...  30.24134  14.88776   0.     ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle44_scan2_chan0): <HDF5 dataset "cycle44_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 95.7287 115.9182 102.9126 ...  21.2024  20.0322  10.6012] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle44_scan3_chan0): <HDF5 dataset "cycle44_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 88.9547    90.305628 113.172872 ...   0.         5.8658     5.0442  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle45_scan1_chan0): <HDF5 dataset "cycle45_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [128.28138 163.53522  91.0286  ...  32.33106  25.18214  11.337  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle45_scan2_chan0): <HDF5 dataset "cycle45_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 79.693   123.85988 114.33696 ...  15.9172   16.0388   24.4246 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle45_scan3_chan0): <HDF5 dataset "cycle45_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [76.27792 44.53038 89.99656 ... 54.85076 22.009    9.3652 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle46_scan1_chan0): <HDF5 dataset "cycle46_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 55.5914   50.80682 100.11998 ...  17.6174   17.769    14.3756 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle46_scan2_chan0): <HDF5 dataset "cycle46_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [143.6128   92.43836  82.5551  ...  19.1256   10.7038   17.46196] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle46_scan3_chan0): <HDF5 dataset "cycle46_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [87.33844 84.4937  80.2207  ... 13.29314 14.8886  16.22736] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle47_scan1_chan0): <HDF5 dataset "cycle47_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 67.018548 130.271852  47.7006   ...  25.1962    18.1642    13.8416  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle47_scan2_chan0): <HDF5 dataset "cycle47_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 68.06026 110.89594  89.8426  ...  17.51158  13.50076  35.8484 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle47_scan3_chan0): <HDF5 dataset "cycle47_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 78.61174 111.5624   94.1126  ...  19.402    43.9434   11.4928 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle48_scan1_chan0): <HDF5 dataset "cycle48_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [91.4055  49.7413  51.38744 ... 32.8997  13.75666 30.89244] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle48_scan2_chan0): <HDF5 dataset "cycle48_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [112.3312   98.47364  92.39856 ...   9.1238   10.17084  27.22216] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle48_scan3_chan0): <HDF5 dataset "cycle48_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [73.03676 96.0214  86.0392  ... 25.65982  6.5697   6.2611 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle49_scan1_chan0): <HDF5 dataset "cycle49_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 67.79156 114.73074  69.72816 ...  20.2734    6.0212    9.1078 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle49_scan2_chan0): <HDF5 dataset "cycle49_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [121.39126   97.1512    81.630688 ...   8.0792    16.41588   30.39352 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle49_scan3_chan0): <HDF5 dataset "cycle49_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [113.96184   68.937148  61.406952 ...  16.4326     0.         0.      ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle4_scan1_chan0): <HDF5 dataset "cycle4_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [40.08644 47.15516 51.3014  ...  0.       8.594   21.406  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle4_scan2_chan0): <HDF5 dataset "cycle4_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [34.81938 43.9266  53.82486 ...  4.9752  11.1992  14.6842 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle4_scan3_chan0): <HDF5 dataset "cycle4_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [33.77496 12.76164 36.07346 ...  8.2508   4.2728  29.7588 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle50_scan1_chan0): <HDF5 dataset "cycle50_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 52.384548  95.643052 100.44818  ...  18.1978    28.74716   34.25444 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle50_scan2_chan0): <HDF5 dataset "cycle50_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 76.06602  54.6908  136.6898  ...  42.9685   19.9487   27.134  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle50_scan3_chan0): <HDF5 dataset "cycle50_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [83.36294 88.0953  86.3462  ... 11.9544  20.4794  21.7002 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle51_scan1_chan0): <HDF5 dataset "cycle51_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [100.18598  93.345    65.7852  ...  13.7054   11.972    15.86746] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle51_scan2_chan0): <HDF5 dataset "cycle51_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [134.38906 110.59972  68.71306 ...   4.6488   27.2217   44.0307 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle51_scan3_chan0): <HDF5 dataset "cycle51_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 53.3288 134.4488 112.173  ...  22.3682  20.1186  16.552 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle52_scan1_chan0): <HDF5 dataset "cycle52_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [129.643612 106.2227    58.35414  ...  16.346     20.61894   21.1302  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle52_scan2_chan0): <HDF5 dataset "cycle52_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 87.55174 110.7914  125.00276 ...   2.263     8.3542   21.9048 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle52_scan3_chan0): <HDF5 dataset "cycle52_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 99.64164 122.57186  50.2107  ...  16.8414   13.0352   16.7252 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle53_scan1_chan0): <HDF5 dataset "cycle53_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 86.20794 126.8767   97.5683  ...  12.24558  16.91362   2.5204 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle53_scan2_chan0): <HDF5 dataset "cycle53_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 94.75182  84.06166 132.66184 ...   2.8308   12.46904  32.93256] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle53_scan3_chan0): <HDF5 dataset "cycle53_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 94.64444  83.38098 125.45368 ...  10.5324   27.4266   18.2331 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle54_scan1_chan0): <HDF5 dataset "cycle54_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [130.11922 111.01154  75.05868 ...  22.9855   16.6369   18.3012 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle54_scan2_chan0): <HDF5 dataset "cycle54_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [103.4138   68.2327   71.38946 ...  25.796     6.9472    2.1092 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle54_scan3_chan0): <HDF5 dataset "cycle54_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 74.8343   82.40406 102.93284 ...   9.709    22.7456   23.1554 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle55_scan1_chan0): <HDF5 dataset "cycle55_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [112.71096 135.71564 138.48734 ...   7.393    28.1128    7.5822 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle55_scan2_chan0): <HDF5 dataset "cycle55_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [139.399228 146.018312 117.65092  ...  14.6984    19.0228     9.09    ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle55_scan3_chan0): <HDF5 dataset "cycle55_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 77.97322   90.7534   126.916948 ...  14.7676    19.8286    20.1201  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle56_scan1_chan0): <HDF5 dataset "cycle56_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [8.76696e+01 6.90052e+01 4.96206e+01 ... 4.03750e+01 2.46498e+01 ...
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle56_scan2_chan0): <HDF5 dataset "cycle56_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [138.16582   75.79584   99.997548 ...  32.20994   23.4674    35.60846 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle56_scan3_chan0): <HDF5 dataset "cycle56_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [108.7658   94.2146   72.24866 ...  12.82904   6.62096   9.2801 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle57_scan1_chan0): <HDF5 dataset "cycle57_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [108.5069  106.2977   70.97626 ...   5.89946  16.79334  28.4376 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle57_scan2_chan0): <HDF5 dataset "cycle57_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 98.12724  97.86162 115.74288 ...   0.       10.841    17.2046 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle57_scan3_chan0): <HDF5 dataset "cycle57_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [100.872212 112.62482  100.25822  ...  18.5409    29.8806    14.6314  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle58_scan1_chan0): <HDF5 dataset "cycle58_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [113.945    90.56066  74.6844  ...   1.50956  17.83944  10.2398 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle58_scan2_chan0): <HDF5 dataset "cycle58_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [100.13576  51.25368 101.33972 ...  10.582     5.695     7.4443 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle58_scan3_chan0): <HDF5 dataset "cycle58_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [103.544452 111.73432  120.31194  ...   7.5292    23.9466    18.129   ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle59_scan1_chan0): <HDF5 dataset "cycle59_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [109.8304 111.5924  89.7785 ...   3.9964   8.4568   8.0952] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle59_scan2_chan0): <HDF5 dataset "cycle59_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [100.4982    89.690428  74.461712 ...   9.725     17.0667    21.2521  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle59_scan3_chan0): <HDF5 dataset "cycle59_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [113.1024  120.82634 106.77    ...  15.711    15.90114  30.53206] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle5_scan1_chan0): <HDF5 dataset "cycle5_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [17.9228 42.7272 70.8576 ...  6.261  30.0176 11.9032] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle5_scan2_chan0): <HDF5 dataset "cycle5_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [107.50068 105.48222  65.18144 ...   1.6298    3.37904  15.61106] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle5_scan3_chan0): <HDF5 dataset "cycle5_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [94.617  99.9799 87.6856 ...  2.4178  7.5822  6.4872] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle60_scan1_chan0): <HDF5 dataset "cycle60_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [84.529    89.912252 37.0508   ...  9.1254   13.3808   18.6612  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle60_scan2_chan0): <HDF5 dataset "cycle60_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [134.201572 110.82334   92.76044  ...  15.9188    15.8995    22.4195  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle60_scan3_chan0): <HDF5 dataset "cycle60_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 72.9166  142.94914 136.14126 ...  20.5148   42.0752   39.0902 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle61_scan1_chan0): <HDF5 dataset "cycle61_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [107.925712  85.868     82.87984  ...  13.4496    14.1326     4.305   ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle61_scan2_chan0): <HDF5 dataset "cycle61_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 92.50014  64.0669  110.0489  ...  21.6474    3.1554   23.585  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle61_scan3_chan0): <HDF5 dataset "cycle61_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [89.03864 98.66196 62.03694 ... 26.3327  17.2516   0.     ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle62_scan1_chan0): <HDF5 dataset "cycle62_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 75.48794  103.02124  102.797008 ...  25.64204    9.70736   11.596   ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle62_scan2_chan0): <HDF5 dataset "cycle62_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 67.32404   82.034408 103.711092 ...  13.945     12.575     25.2486  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle62_scan3_chan0): <HDF5 dataset "cycle62_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [116.326    71.52808  95.88224 ...  16.27718  21.78462  35.2643 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle63_scan1_chan0): <HDF5 dataset "cycle63_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [107.63094  77.11796  70.8778  ...  36.53254  11.6636   10.6526 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle63_scan2_chan0): <HDF5 dataset "cycle63_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 76.84446 120.32716 103.01848 ...  19.9471    9.1077   13.4656 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle63_scan3_chan0): <HDF5 dataset "cycle63_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 82.43254  86.36814 118.48876 ...  45.3516   14.0846   15.282  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle64_scan1_chan0): <HDF5 dataset "cycle64_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [50.5992  91.33678 73.12322 ... 22.94934  9.43402 15.987  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle64_scan2_chan0): <HDF5 dataset "cycle64_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [136.07354  96.67066 142.81454 ...  21.2346   41.1162   30.7708 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle64_scan3_chan0): <HDF5 dataset "cycle64_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [141.69792  95.33748 100.635   ...  14.8886   31.665    22.7266 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle65_scan1_chan0): <HDF5 dataset "cycle65_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [161.598588 162.313872  99.74574  ...  40.40994   26.02126   16.00364 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle65_scan2_chan0): <HDF5 dataset "cycle65_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 48.48776   96.89946  106.589048 ...   4.9414    24.543     20.5156  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle65_scan3_chan0): <HDF5 dataset "cycle65_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [141.678252 131.636    123.617    ...  24.2376    40.30704   19.17836 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle66_scan1_chan0): <HDF5 dataset "cycle66_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [79.96474 95.29996 93.87564 ... 39.15902 31.8182  16.0374 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle66_scan2_chan0): <HDF5 dataset "cycle66_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 89.757     77.431788 103.926452 ...   8.0792     7.8396    10.5996  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle66_scan3_chan0): <HDF5 dataset "cycle66_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [124.441328 119.108272  64.8382   ...   6.4124    33.2596    11.2346  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle67_scan1_chan0): <HDF5 dataset "cycle67_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [110.57016 131.31984 128.3336  ...  19.399    17.5644   16.7404 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle67_scan2_chan0): <HDF5 dataset "cycle67_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 77.2719   93.9118  181.14794 ...  20.9772   18.8656   19.4182 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle67_scan3_chan0): <HDF5 dataset "cycle67_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 99.63694 105.9203  111.75922 ...   9.878    17.5822   14.0678 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle68_scan1_chan0): <HDF5 dataset "cycle68_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [116.876788 105.008852 109.60696  ...   7.0497    17.7192    21.20098 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle68_scan2_chan0): <HDF5 dataset "cycle68_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [79.75424 96.57352 79.67088 ...  4.11654 13.2254  26.7746 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle68_scan3_chan0): <HDF5 dataset "cycle68_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [103.10336   85.865848 102.158412 ...   5.2484    35.0796    26.1568  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle69_scan1_chan0): <HDF5 dataset "cycle69_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [141.610932 131.90642  125.1493   ...  14.8894    23.4294    29.3686  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle69_scan2_chan0): <HDF5 dataset "cycle69_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [65.4906 79.6736 71.8375 ...  8.6965  1.3035  0.    ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle69_scan3_chan0): <HDF5 dataset "cycle69_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 97.87674  90.54816 110.42646 ...  10.513    30.344     3.8592 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle6_scan1_chan0): <HDF5 dataset "cycle6_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [95.19704 64.85076 53.434   ... 33.9772  15.044   34.2048 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle6_scan2_chan0): <HDF5 dataset "cycle6_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [83.9104 45.2133 40.6701 ...  9.4676  0.      0.    ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle6_scan3_chan0): <HDF5 dataset "cycle6_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [92.5389  56.8643  37.8184  ... 23.019   26.31236 17.25764] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle70_scan1_chan0): <HDF5 dataset "cycle70_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 83.49774 107.03286  66.41478 ...  22.09476  29.44844  23.1234 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle70_scan2_chan0): <HDF5 dataset "cycle70_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 73.8417   94.25696 142.51944 ...   6.912    19.8286   30.0494 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle70_scan3_chan0): <HDF5 dataset "cycle70_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [93.43098 81.32104 52.6584  ...  3.6876  21.201   20.84106] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle71_scan1_chan0): <HDF5 dataset "cycle71_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 92.92846 160.67334 117.20276 ...  15.62616  22.14264   8.8858 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle71_scan2_chan0): <HDF5 dataset "cycle71_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 93.29224  86.77768 121.11332 ...   7.5646    9.9134   23.94666] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle71_scan3_chan0): <HDF5 dataset "cycle71_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [111.42164  81.7836   84.37394 ...   6.86064   6.62096   8.6804 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle72_scan1_chan0): <HDF5 dataset "cycle72_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [135.472388 110.016792  98.66262  ...  18.5064    12.7602    11.8004  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle72_scan2_chan0): <HDF5 dataset "cycle72_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [66.2798   53.342648 96.535452 ... 24.6648   13.226    10.222   ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle72_scan3_chan0): <HDF5 dataset "cycle72_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 88.4039   92.16164 124.27106 ...   4.94     20.3086   19.074  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle73_scan1_chan0): <HDF5 dataset "cycle73_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 90.66662 125.86778  57.56344 ...  25.93444  14.20316  18.9346 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle73_scan2_chan0): <HDF5 dataset "cycle73_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [72.41976 73.6214  49.8076  ... 26.2772  11.5784   4.0652 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle73_scan3_chan0): <HDF5 dataset "cycle73_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [104.9012 108.5126 103.0147 ...  14.9558  18.473    4.7514] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle74_scan1_chan0): <HDF5 dataset "cycle74_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 73.1741  149.6395   75.35254 ...   4.8028   10.841     9.159  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle74_scan2_chan0): <HDF5 dataset "cycle74_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [54.76674  54.76976  98.545148 ... 30.5998   15.1802    8.7318  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle74_scan3_chan0): <HDF5 dataset "cycle74_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 98.71586 110.51638 108.09616 ...  16.827    16.29736  35.21224] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle75_scan1_chan0): <HDF5 dataset "cycle75_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 79.51924   54.8871   105.182888 ...  23.1572    28.645     44.6474  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle75_scan2_chan0): <HDF5 dataset "cycle75_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 90.511388 145.837952 109.9807   ...  23.68764   25.8666     0.      ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle75_scan3_chan0): <HDF5 dataset "cycle75_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 92.31614  151.26816  128.713848 ...  21.714     37.16914   17.27366 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle76_scan1_chan0): <HDF5 dataset "cycle76_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [106.1914  131.0342   77.2862  ...   6.92968  12.52202  10.8906 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle76_scan2_chan0): <HDF5 dataset "cycle76_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [80.15526 42.96718 70.29186 ...  9.074   10.291   22.8992 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle76_scan3_chan0): <HDF5 dataset "cycle76_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [69.1728  92.40524 85.31596 ... 33.173   26.4654  41.8552 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle77_scan1_chan0): <HDF5 dataset "cycle77_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [72.86496  69.678608 90.047392 ... 16.536    22.7778   24.2712  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle77_scan2_chan0): <HDF5 dataset "cycle77_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [83.8226  75.61154 93.27656 ...  5.1292   0.      21.7156 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle77_scan3_chan0): <HDF5 dataset "cycle77_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 63.67146   75.6068   134.442088 ...  25.6252     9.6738    21.2344  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle78_scan1_chan0): <HDF5 dataset "cycle78_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 61.56466 103.943    91.15    ...  14.6649   13.0351    7.8908 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle78_scan2_chan0): <HDF5 dataset "cycle78_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [124.16858  121.57742   85.456548 ...  18.44066    9.94894   34.698348] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle78_scan3_chan0): <HDF5 dataset "cycle78_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [65.45556 83.307   75.9188  ... 40.6687   6.3475  20.18684] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle79_scan1_chan0): <HDF5 dataset "cycle79_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [135.28136  113.171648 111.115252 ...  12.0066    25.7128    15.3334  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle79_scan2_chan0): <HDF5 dataset "cycle79_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 81.3716   97.7227  112.72734 ...  24.2198   54.13444  63.44786] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle79_scan3_chan0): <HDF5 dataset "cycle79_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [156.532    89.76022 110.70708 ...  10.6157    5.3175   23.65566] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle7_scan1_chan0): <HDF5 dataset "cycle7_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [67.97546 64.5112  91.4414  ... 15.5932   0.857    9.143  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle7_scan2_chan0): <HDF5 dataset "cycle7_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [63.3624  40.4128  37.66618 ... 12.7617  18.4039  24.1006 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle7_scan3_chan0): <HDF5 dataset "cycle7_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [99.5222  54.1146  80.3958  ... 41.30504 16.41336  0.     ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle80_scan1_chan0): <HDF5 dataset "cycle80_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [153.8277    85.2329    88.746948 ...  19.8816    22.6918    11.132   ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle80_scan2_chan0): <HDF5 dataset "cycle80_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 73.5836   68.7166  112.999   ...  22.36558   0.        9.00514] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle80_scan3_chan0): <HDF5 dataset "cycle80_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 70.88924  72.3171  114.993   ...   0.       19.229    10.771  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle81_scan1_chan0): <HDF5 dataset "cycle81_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 74.7162  111.23776 118.9706  ...  24.4783   12.19576  25.98604] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle81_scan2_chan0): <HDF5 dataset "cycle81_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [127.494728 146.10602  100.106652 ...  18.232548  54.426752  24.7675  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle81_scan3_chan0): <HDF5 dataset "cycle81_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 64.80134 107.06916 149.3124  ...  21.35558  38.31982  38.0103 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle82_scan1_chan0): <HDF5 dataset "cycle82_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 95.07498 109.0223   71.83776 ...  19.00514   1.01086   8.0616 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle82_scan2_chan0): <HDF5 dataset "cycle82_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 94.5085   101.52996   85.879688 ...   7.6318    32.8812    14.8894  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle82_scan3_chan0): <HDF5 dataset "cycle82_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [106.34976  96.33976 119.50678 ...  16.5696   11.9384   10.2734 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle83_scan1_chan0): <HDF5 dataset "cycle83_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [82.22914  47.4082   58.699    ... 21.5096   17.839528 34.785072] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle83_scan2_chan0): <HDF5 dataset "cycle83_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [66.3457  82.93396 62.04144 ...  0.       5.2838  14.6649 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle83_scan3_chan0): <HDF5 dataset "cycle83_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [119.84554 102.66296 122.8601  ...   0.        3.37904   6.62096] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle84_scan1_chan0): <HDF5 dataset "cycle84_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 98.4728   122.09754  102.172448 ...   0.        19.5212    24.5104  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle84_scan2_chan0): <HDF5 dataset "cycle84_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [109.79444 152.8117   77.8051  ...  24.854    13.6878   17.8554 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle84_scan3_chan0): <HDF5 dataset "cycle84_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [82.2958 78.0457 76.8617 ... 13.5168 10.      8.7832] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle85_scan1_chan0): <HDF5 dataset "cycle85_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [100.32218  91.19982  94.58154 ...  36.89434  15.62606   7.5998 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle85_scan2_chan0): <HDF5 dataset "cycle85_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [126.05414 127.37536  77.1722  ...   2.5557   15.1282   14.8718 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle85_scan3_chan0): <HDF5 dataset "cycle85_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 79.0371   94.85674 119.98062 ...  12.7122   26.002    27.2902 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle86_scan1_chan0): <HDF5 dataset "cycle86_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [135.4346  74.1005  87.8555 ...  27.3576   9.5896   7.171 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle86_scan2_chan0): <HDF5 dataset "cycle86_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [62.13938 86.36482 98.7986  ...  7.5998   9.4164  11.185  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle86_scan3_chan0): <HDF5 dataset "cycle86_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [55.7808   94.749148 64.921352 ... 12.5734   31.81804  36.84316 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle87_scan1_chan0): <HDF5 dataset "cycle87_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 95.0618  110.22184  93.01776 ...  12.4532   26.261    27.35774] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle87_scan2_chan0): <HDF5 dataset "cycle87_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [110.873472  97.34078  104.8425   ...   7.7866    18.1144    18.4568  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle87_scan3_chan0): <HDF5 dataset "cycle87_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 81.16698 129.51852  92.11398 ...  17.1026   26.56914  23.43086] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle88_scan1_chan0): <HDF5 dataset "cycle88_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [56.15748 80.89464 97.11572 ...  8.1658   8.37024 15.09536] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle88_scan2_chan0): <HDF5 dataset "cycle88_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [85.01412 73.5102  71.08218 ... 22.84838 25.04242  2.7778 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle88_scan3_chan0): <HDF5 dataset "cycle88_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [118.38864   99.403008  86.497992 ...  13.7876     7.118      8.1482  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle89_scan1_chan0): <HDF5 dataset "cycle89_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [123.45894   68.496148  89.754652 ...  11.47428   20.308668  11.681052] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle89_scan2_chan0): <HDF5 dataset "cycle89_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [83.58426 79.9284  62.26374 ...  5.2838  11.1658  20.3614 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle89_scan3_chan0): <HDF5 dataset "cycle89_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [100.517    61.85186 102.68944 ...  19.7764   22.95016  29.67204] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle8_scan1_chan0): <HDF5 dataset "cycle8_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [69.9485  81.97044 84.976   ... 25.35286 14.97334 19.3474 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle8_scan2_chan0): <HDF5 dataset "cycle8_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [47.9748   91.8228   92.316148 ... 15.7288    6.4318   18.76536 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle8_scan3_chan0): <HDF5 dataset "cycle8_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [100.03346 102.57026  47.36014 ...  18.9714   21.9722   14.6648 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle90_scan1_chan0): <HDF5 dataset "cycle90_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [122.299   165.59254  93.72066 ...   6.5696   12.8484    3.464  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle90_scan2_chan0): <HDF5 dataset "cycle90_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 59.9675  102.36716 100.70464 ...  23.9456   14.665    10.3262 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle90_scan3_chan0): <HDF5 dataset "cycle90_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [81.47574  65.28236  58.368496 ... 14.083    20.894    17.2188  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle91_scan1_chan0): <HDF5 dataset "cycle91_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [125.7827  125.33676 127.88724 ...   8.1818    0.        0.     ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle91_scan2_chan0): <HDF5 dataset "cycle91_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 98.8354  110.4467   76.6209  ...   0.       15.69578  58.88572] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle91_scan3_chan0): <HDF5 dataset "cycle91_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 85.812044 102.5751    90.0849   ...  18.2498    12.3338    11.2522  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle92_scan1_chan0): <HDF5 dataset "cycle92_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 94.94016 123.1411   92.89294 ...  11.3732   38.5755   13.3437 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle92_scan2_chan0): <HDF5 dataset "cycle92_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [88.38492 88.09508 75.42516 ... 28.9528  26.7051  15.5093 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle92_scan3_chan0): <HDF5 dataset "cycle92_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [101.3906   159.55184  125.18042  ...  11.733348  18.266652   8.7318  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle93_scan1_chan0): <HDF5 dataset "cycle93_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 84.6522   96.79016 121.47616 ...  10.1026    0.       10.841  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle93_scan2_chan0): <HDF5 dataset "cycle93_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 94.9702   78.73232 107.71706 ...   0.9436   13.7214   15.626  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle93_scan3_chan0): <HDF5 dataset "cycle93_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [102.82758  91.95586  91.01266 ...  14.2714   26.5856   24.4428 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle94_scan1_chan0): <HDF5 dataset "cycle94_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [76.23762 98.99192 50.9593  ... 18.249   11.4758  36.75814] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle94_scan2_chan0): <HDF5 dataset "cycle94_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [90.5149   86.6899   87.326748 ... 24.2714   10.4624    4.2714  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle94_scan3_chan0): <HDF5 dataset "cycle94_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 98.407248 109.314652 103.63806  ...  15.8328     0.         8.6965  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle95_scan1_chan0): <HDF5 dataset "cycle95_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 97.218848 103.518652  76.55046  ...   7.5998    25.1972    14.5102  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle95_scan2_chan0): <HDF5 dataset "cycle95_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [99.3832   85.5389   96.4874   ... 23.088052 35.6942   40.9268  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle95_scan3_chan0): <HDF5 dataset "cycle95_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [72.2502  69.98058 86.92922 ... 35.48806 26.00374 22.6422 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle96_scan1_chan0): <HDF5 dataset "cycle96_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [119.467088  70.500652 118.88624  ...  26.226     19.8116    12.179748] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle96_scan2_chan0): <HDF5 dataset "cycle96_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 41.66458 122.11182 116.3785  ...   3.7902    0.2396   36.1054 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle96_scan3_chan0): <HDF5 dataset "cycle96_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [101.2183   90.53088  68.59296 ...  35.197    19.5014    9.0404 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle97_scan1_chan0): <HDF5 dataset "cycle97_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [34.8187  61.0468  76.4842  ...  2.4708  27.6838  21.92094] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle97_scan2_chan0): <HDF5 dataset "cycle97_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 83.99794 100.41124  99.1441  ...   8.9186   11.0814    2.1268 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle97_scan3_chan0): <HDF5 dataset "cycle97_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 99.555   114.92466  82.02288 ...   9.00514   5.91866  19.0726 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle98_scan1_chan0): <HDF5 dataset "cycle98_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [113.71756  86.3854  101.42004 ...  12.9148   33.4836   15.7108 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle98_scan2_chan0): <HDF5 dataset "cycle98_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 84.5594   72.53744 109.4888  ...  46.70506  26.6217   10.841  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle98_scan3_chan0): <HDF5 dataset "cycle98_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [57.9059 62.3683 86.71   ... 32.0089 19.277   4.8556] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle99_scan1_chan0): <HDF5 dataset "cycle99_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [109.4854  136.96794  95.89546 ...  11.5256   10.6702   10.8924 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle99_scan2_chan0): <HDF5 dataset "cycle99_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [124.25448 103.31356  91.76246 ...  20.6526    6.9808    0.     ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle99_scan3_chan0): <HDF5 dataset "cycle99_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 75.24742 107.7896   60.8914  ...  14.64884  18.43916  19.6898 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle9_scan1_chan0): <HDF5 dataset "cycle9_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [127.41376  114.6284   120.205548 ...  31.3548    12.45306   15.55554 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle9_scan2_chan0): <HDF5 dataset "cycle9_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [ 78.232948 101.253972  84.40846  ...  12.4708    23.6684     4.8204  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/cycle9_scan3_chan0): <HDF5 dataset "cycle9_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [74.54806 89.82328 77.0355  ...  0.       6.1921   3.8079 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/detector/raw_data/raw): <HDF5 dataset "raw": shape (300, 1001), type "<f8">
DEBUG - value: [ 96.50416 147.3704  156.1954  ...   8.4054   28.1818    0.36   ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/DATA
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - documentation (NXdata.nxdl.xml:/DATA):
DEBUG - 
			.. index:: plotting

			Data values to be used as the NeXus *plottable data*. As the upper case ``DATA``
			indicates, the names of the ``DATA`` fields can be chosen :ref:`freely <validItemName>`. The :ref:`signal attribute </NXdata@signal-attribute>`
			and :ref:`auxiliary_signals attribute</NXdata@auxiliary_signals-attribute>` can be used to find all datasets in the ``NXdata``
			that contain data values.

			The maximum rank is ``32`` for compatibility with backend file formats.
		
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/device_information [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXfabrication]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information
NXelectronanalyzer.nxdl.xml:/FABRICATION
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXcomponent.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information
NXelectronanalyzer.nxdl.xml:/FABRICATION
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: PHOIBOS 150 NAP 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: SPECS GmbH 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energy_resolution [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXresolution]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energy_resolution" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXresolution']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution
NXelectronanalyzer.nxdl.xml:/energy_resolution
NXresolution.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/energy_resolution):
DEBUG - 
            Energy resolution of the analyzer with the current setting. May be linked from an
            NXcalibration.
        
DEBUG - documentation (NXresolution.nxdl.xml:):
DEBUG - 
         Describes the resolution of a physical quantity.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energy_resolution@NX_class)
DEBUG - value: NXresolution 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXresolution']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution
NXelectronanalyzer.nxdl.xml:/energy_resolution
NXresolution.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energy_resolution/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: energy 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXresolution', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/physical_quantity
NXelectronanalyzer.nxdl.xml:/energy_resolution/physical_quantity
NXresolution.nxdl.xml:/physical_quantity
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/physical_quantity):
DEBUG - -> energy
DEBUG - enumeration (NXelectronanalyzer.nxdl.xml:/energy_resolution/physical_quantity):
DEBUG - -> energy
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/physical_quantity):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/energy_resolution/physical_quantity):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:/physical_quantity):
DEBUG - 
             The physical quantity of the resolution, e.g.,
             energy, momentum, time, area, etc.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energy_resolution/resolution): <HDF5 dataset "resolution": shape (), type "<f8">
DEBUG - value: 0.1 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXresolution', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/resolution
NXelectronanalyzer.nxdl.xml:/energy_resolution/resolution
NXresolution.nxdl.xml:/resolution
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/resolution):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/energy_resolution/resolution):
DEBUG - 
                Minimum distinguishable energy separation in the energy spectra.
                
                This concept is related to term `10.24`_ of the ISO 18115-1:2023 standard.
                
                .. _10.24: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:10.24
            
DEBUG - documentation (NXresolution.nxdl.xml:/resolution):
DEBUG - 
             The resolution of the physical quantity.
        
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energy_resolution/resolution@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXresolution', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/resolution
NXelectronanalyzer.nxdl.xml:/energy_resolution/resolution
NXresolution.nxdl.xml:/resolution
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/resolution@units - REQUIRED, but undefined unit category
DEBUG - NXelectronanalyzer.nxdl.xml:/energy_resolution/resolution@units [NX_ENERGY]
DEBUG - NXresolution.nxdl.xml:/resolution@units [NX_ANY]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energy_resolution/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: estimated 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXresolution', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/type
NXresolution.nxdl.xml:/type
DEBUG - <<RECOMMENDED>>
DEBUG - enumeration (NXresolution.nxdl.xml:/type):
DEBUG - -> estimated
DEBUG - -> derived
DEBUG - -> calibrated
DEBUG - -> other
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/type):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:/type):
DEBUG - 
             The process by which the resolution was determined.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXenergydispersion]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion" (7 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION
NXelectronanalyzer.nxdl.xml:/ENERGYDISPERSION
NXenergydispersion.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/ENERGYDISPERSION):
DEBUG - 
            Describes the energy dispersion section
        
DEBUG - documentation (NXenergydispersion.nxdl.xml:):
DEBUG - 
        Energy dispersion section of an electron analyzer.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion@NX_class)
DEBUG - value: NXenergydispersion 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION
NXelectronanalyzer.nxdl.xml:/ENERGYDISPERSION
NXenergydispersion.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/device_information [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXenergydispersion/NXfabrication]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information
NXenergydispersion.nxdl.xml:/FABRICATION
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information):
DEBUG - 
DEBUG - documentation (NXenergydispersion.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXcomponent.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information
NXenergydispersion.nxdl.xml:/FABRICATION
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: PHOIBOS 150 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: SPECS GmbH 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/energy_scan_mode): <HDF5 dataset "energy_scan_mode": shape (), type "|O">
DEBUG - value: fixed_analyzer_transmission 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/energy_scan_mode
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/energy_scan_mode
NXenergydispersion.nxdl.xml:/energy_scan_mode
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXenergydispersion.nxdl.xml:/energy_scan_mode):
DEBUG - -> fixed_analyzer_transmission
DEBUG - -> fixed_retardation_ratio
DEBUG - -> fixed_energy
DEBUG - -> snapshot
DEBUG - -> dither
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/energy_scan_mode):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/energy_scan_mode):
DEBUG - 
DEBUG - documentation (NXenergydispersion.nxdl.xml:/energy_scan_mode):
DEBUG - 
            Way of scanning the energy axis
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/entrance_slit [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXenergydispersion/NXaperture]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/entrance_slit" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXaperture']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/entrance_slit
NXenergydispersion.nxdl.xml:/APERTURE
NXaperture.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/entrance_slit):
DEBUG - 
                            Size, position and shape of the entrance slit in dispersive analyzers.
                            
                            To add additional or other slits use the APERTURE group of NXenergydispersion.
                        
DEBUG - documentation (NXenergydispersion.nxdl.xml:/APERTURE):
DEBUG - 
            Size, position and shape of a slit in dispersive analyzer, e.g. entrance and
            exit slits.
        
DEBUG - documentation (NXaperture.nxdl.xml:):
DEBUG - 
      A beamline aperture.

      Note, the group was incorrectly documented as deprecated, but it is not and it is in common use.
      
      You can specify the geometry of the aperture using either NXoff_geometry or for simpler geometry shape and size.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/entrance_slit@NX_class)
DEBUG - value: NXaperture 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXaperture']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/entrance_slit
NXenergydispersion.nxdl.xml:/APERTURE
NXaperture.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/entrance_slit/description): <HDF5 dataset "description": shape (), type "|O">
DEBUG - value: 4:7x20c 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXaperture', 'NX_CHAR']
DEBUG - classes:
NXaperture.nxdl.xml:/description
NXcomponent.nxdl.xml:/description
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXaperture.nxdl.xml:/description):
DEBUG - Description of aperture
DEBUG - documentation (NXcomponent.nxdl.xml:/description):
DEBUG - 
            Ideally, use instances of ``identifierNAME`` to point to a resource
            that provides further details.

            If such a resource does not exist or should not be used, use this free text,
            although it is not recommended.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/exit_slit [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXenergydispersion/NXaperture]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/exit_slit" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXaperture']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/exit_slit
NXenergydispersion.nxdl.xml:/APERTURE
NXaperture.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/exit_slit):
DEBUG - 
                            Size, position and shape of the exit slit in dispersive analyzers.
                            
                            To add additional or other slits use the APERTURE group of NXenergydispersion.
                        
DEBUG - documentation (NXenergydispersion.nxdl.xml:/APERTURE):
DEBUG - 
            Size, position and shape of a slit in dispersive analyzer, e.g. entrance and
            exit slits.
        
DEBUG - documentation (NXaperture.nxdl.xml:):
DEBUG - 
      A beamline aperture.

      Note, the group was incorrectly documented as deprecated, but it is not and it is in common use.
      
      You can specify the geometry of the aperture using either NXoff_geometry or for simpler geometry shape and size.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/exit_slit@NX_class)
DEBUG - value: NXaperture 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXaperture']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/exit_slit
NXenergydispersion.nxdl.xml:/APERTURE
NXaperture.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/exit_slit/description): <HDF5 dataset "description": shape (), type "|O">
DEBUG - value: C:mesh 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXaperture', 'NX_CHAR']
DEBUG - classes:
NXaperture.nxdl.xml:/description
NXcomponent.nxdl.xml:/description
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXaperture.nxdl.xml:/description):
DEBUG - Description of aperture
DEBUG - documentation (NXcomponent.nxdl.xml:/description):
DEBUG - 
            Ideally, use instances of ``identifierNAME`` to point to a resource
            that provides further details.

            If such a resource does not exist or should not be used, use this free text,
            although it is not recommended.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/pass_energy): <HDF5 dataset "pass_energy": shape (), type "<f8">
DEBUG - value: 20.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/pass_energy
NXenergydispersion.nxdl.xml:/pass_energy
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/pass_energy):
DEBUG - 
                            Only one of ``pass_energy`` or ``drift_energy`` should be supplied. ``pass_energy`` should be used when working
                            with hemispherical analyzers.
                        
DEBUG - documentation (NXenergydispersion.nxdl.xml:/pass_energy):
DEBUG - 
            Mean kinetic energy of the electrons in this energy-dispersive section of the analyzer.
            This term should be used for hemispherical analyzers.
            
            This concept is related to term `12.63`_ of the ISO 18115-1:2023 standard.
            
            .. _12.63: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.63
        
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/pass_energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/pass_energy
NXenergydispersion.nxdl.xml:/pass_energy
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/pass_energy@units [NX_ENERGY]
DEBUG - NXenergydispersion.nxdl.xml:/pass_energy@units [NX_ENERGY]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/radius): <HDF5 dataset "radius": shape (), type "<i8">
DEBUG - value: 150 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/radius
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/radius):
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/radius@units)
DEBUG - value: mm 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/radius
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/radius@units [NX_LENGTH]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/energydispersion/scheme): <HDF5 dataset "scheme": shape (), type "|O">
DEBUG - value: hemispherical 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/scheme
NXenergydispersion.nxdl.xml:/scheme
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/scheme):
DEBUG - -> tof
DEBUG - -> hemispherical
DEBUG - -> double hemispherical
DEBUG - -> cylindrical mirror
DEBUG - -> display mirror
DEBUG - -> retarding grid
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/scheme):
DEBUG - 
DEBUG - documentation (NXenergydispersion.nxdl.xml:/scheme):
DEBUG - 
            Energy dispersion scheme employed, for example: tof, hemispherical, cylindrical,
            mirror, retarding grid, etc.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Phoibos1D 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_CHAR']
DEBUG - classes:
NXelectronanalyzer.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/name):
DEBUG - 
            Name or model of the equipment
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/slow_axes): <HDF5 dataset "slow_axes": shape (), type "|O">
DEBUG - value: energy 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/slow_axes
NXelectronanalyzer.nxdl.xml:/slow_axes
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/slow_axes):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/slow_axes):
DEBUG - 
            List of the axes that are acquired by scanning a physical parameter, listed in
            order of decreasing speed. See fast_axes for examples.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/transmission_function [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXdata]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/transmission_function" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXelectronanalyzer.nxdl.xml:/transmission_function
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/transmission_function):
DEBUG - 
            Transmission function of the electron analyzer.
            
            The transmission function (TF) specifies the detection efficiency per solid angle for electrons of
            different kinetic energy passing through the electron analyzer. It depends on the spectrometer
            geometry as well as operation settings such as lens mode and pass energy.
            The transmission function is usually given as relative intensity vs. kinetic energy.
            
            The TF is used for calibration of the intensity scale in quantitative XPS. Without proper
            transmission correction, a comparison of results measured from the same sample using different
            operating modes for an instrument would show significant variations in signal intensity for the same
            kinetic energies.
            
            This concept is related to term `7.15`_ of the ISO 18115-1:2023 standard.
            
            .. _7.15: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:7.15
        
DEBUG - documentation (NXobject.nxdl.xml:/DATA):
DEBUG - 
DEBUG - documentation (NXdata.nxdl.xml:):
DEBUG - 
		The :ref:`NXdata` class is designed to encapsulate all the information required for a set of data to be plotted.
		NXdata groups contain plottable data (also referred to as *signals* or *dependent variables*) and their
		associated axis coordinates (also referred to as *axes* or *independent variables*).

		The actual names of the :ref:`DATA </NXdata/DATA-field>` and :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
		can be chosen :ref:`freely <validItemName>`, as indicated by the upper case (this is a common convention in all NeXus classes).
		
		.. note:: ``NXdata`` provides data and coordinates to be plotted but
			does not describe how the data is to be plotted or even the dimensionality of the plot.
			https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute

		.. include:: data/index.rst
		   :start-line: 1

		.. admonition:: Example of a simple curve plot

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x"]
				  data: float[100]
				  x: float[100]

		More complex cases are supported

		* histogram data: ``x`` has one more value than ``data``.
		* alternative axes: instead of a single ``x`` axis you can have several axes, one of which being the default.
		* signals with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` along each dimension.
		* axes with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` also being 2D, providing a
		  unique ``(x, y)`` coordinate for each ``data`` point.

		**Signals:**

		.. index:: plotting

		.. admonition:: Defined by

			* :ref:`DATA </NXdata/DATA-field>` fields
			* the :ref:`signal </NXdata@signal-attribute>` attribute
			* the :ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute

		The :ref:`DATA </NXdata/DATA-field>` fields contain the signal values to be plotted. The name of the field
		to be used as the *default plot signal* is provided by the :ref:`signal </NXdata@signal-attribute>` attribute.
		The names of the fields to be used as *secondary plot signals* are provided by the
		:ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute.

		.. admonition:: An example with three signals, one of which being the default

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  data1: float[10,20,30]  # the default signal
				  data2: float[10,20,30]
				  data3: float[10,20,30]

		**Axes:**

		.. index:: axes (attribute)
		.. index:: coordinates

		.. admonition:: Defined by

			* :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			* the :ref:`axes </NXdata@axes-attribute>` attribute
			* :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes

		The fields and attributes are defined as follows

		1. The :ref:`AXISNAME </NXdata/AXISNAME-field>` fields contain the axis coordinates associated with the signal values.

		2. The :ref:`axes </NXdata@axes-attribute>` attribute provides the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   fields to be used as the `default axis` for each dimension of the :ref:`DATA </NXdata/DATA-field>` fields.

		3. The :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes describe the :ref:`DATA </NXdata/DATA-field>`
		   dimensions spanned by the corresponding :ref:`AXISNAME </NXdata/AXISNAME-field>` fields.

		The fields and attributes have the following constraints

		1. The length of the :ref:`axes </NXdata@axes-attribute>` attribute must be equal to the rank of the :ref:`DATA </NXdata/DATA-field>`
		   fields. When a particular dimension has no default axis, the string “.” is used in that position.

		2. The number of values in :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` must be equal to the rank of the corresponding
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		3. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is missing for a given
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field, the positions of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   field name in the :ref:`axes </NXdata@axes-attribute>` attribute are used.

		4. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is the same as the indices of "AXISNAME" in the
		   :ref:`axes </NXdata@axes-attribute>` attribute, there is no need to provide
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		5. The indices of "AXISNAME" in the :ref:`axes </NXdata@axes-attribute>` attribute must be a subset of
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		6. The shape of an :ref:`AXISNAME </NXdata/AXISNAME-field>` field must correspond to the shape of the
		   :ref:`DATA </NXdata/DATA-field>` dimensions it spans. This means that for each dimension ``i`` in ``[0, AXISNAME.ndim)``
		   spanned by axis field :ref:`AXISNAME </NXdata/AXISNAME-field>`, the number of axis values ``AXISNAME.shape[i]``
		   along dimension ``i`` must be equal to the number of data points ``DATA.shape[AXISNAME_indices[i]]`` along dimension ``i``
		   or one more than the number of data points ``DATA.shape[AXISNAME_indices[i]]+1`` in case the
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field contains histogram bin edges along dimension ``i``.

		Highlight consequences of these constraints

		1. An :ref:`AXISNAME </NXdata/AXISNAME-field>` field can have more than one dimension and can therefore span
		   more than one :ref:`DATA </NXdata/DATA-field>` dimension. Conversely, one :ref:`DATA </NXdata/DATA-field>` dimension
		   can be spanned by more than one :ref:`AXISNAME </NXdata/AXISNAME-field>` field. The default axis name (if any)
		   of each dimension can be found in the :ref:`axes </NXdata@axes-attribute>` attribute.

		2. A list of all available axes is not provided directly. All strings in the :ref:`axes </NXdata@axes-attribute>` attribute
		   (excluding the “.” string) are axis field names. In addition the prefix of an attribute ending with the string "_indices" is also
		   an axis field name.

		.. admonition:: The following example covers all axes features supported (see :ref:`sphx_glr_classes_base_classes_data_plot_fscan2d.py`)

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x_set", "y_set", "."]  # default axes for all three dimensions
				  @x_encoder_indices = [0, 1]
				  @y_encoder_indices = 1           # or [1]
				  data: float[10,7,1024]
				  x_encoder: float[11,7]           # coordinates along the first and second dimensions
				  y_encoder: float[7]              # coordinates along the second dimension
				  x_set: float[10]                 # default coordinates along the first dimension
				  y_set: float[7]                  # default coordinates along the second dimension

		**Uncertainties:**

		.. admonition:: Defined by

			* :ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields

		Standard deviations on data values as well as coordinates can be provided by
		:ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields where ``FIELDNAME`` is the name of a
		:ref:`DATA </NXdata/DATA-field>` field or an :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		.. admonition:: An example of uncertainties on the signal, auxiliary signals and axis coordinates

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  @axes = ["x", ".", "z"]
				  data1: float[10,20,30]
				  data2: float[10,20,30]
				  data3: float[10,20,30]
				  x: float[10]
				  z: float[30]
				  data1_errors: float[10,20,30]
				  data2_errors: float[10,20,30]
				  data3_errors: float[10,20,30]
				  x_errors: float[10]
				  z_errors: float[30]

	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/transmission_function@NX_class)
DEBUG - value: NXdata 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXelectronanalyzer.nxdl.xml:/transmission_function
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/transmission_function@axes)
DEBUG - value: ['kinetic_energy'] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXelectronanalyzer.nxdl.xml:/transmission_function
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXelectronanalyzer.nxdl.xml:/transmission_function@axes - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXelectronanalyzer.nxdl.xml:/transmission_function/axes):
DEBUG - -> ['kinetic_energy']
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/transmission_function/axes):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@axes - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/axes):
DEBUG - 
			.. index:: plotting

			The ``axes`` attribute is a list of strings which are the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			to be used as the default axis along every :ref:`DATA </NXdata/DATA-field>` dimension. As a result the length must
			be equal to the rank of the :ref:`DATA </NXdata/DATA-field>` fields. The string "." can be used for
			dimensions without a default axis.

			.. note::  When ``axes`` contains multiple strings, it must be saved as an actual array
				of strings and not a single comma separated string.
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/transmission_function@signal)
DEBUG - value: relative_intensity 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXelectronanalyzer.nxdl.xml:/transmission_function
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXelectronanalyzer.nxdl.xml:/transmission_function@signal - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXelectronanalyzer.nxdl.xml:/transmission_function/signal):
DEBUG - -> relative_intensity
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/transmission_function/signal):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@signal - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/signal):
DEBUG - 
			.. index:: find the default plottable data
			.. index:: plotting
			.. index:: signal attribute value
			
			The value is the :ref:`name <validItemName>` of the signal that contains
			the default plottable data. This field or link *must* exist and be a direct child
			of this NXdata group.
			
			It is recommended (as of NIAC2014) to use this attribute
			rather than adding a signal attribute to the field.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/transmission_function/kinetic_energy): <HDF5 dataset "kinetic_energy": shape (2531,), type "<f8">
DEBUG - value: [1158.61 1158.71 1158.81 ... 1411.41 1411.51 1411.61] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/transmission_function/kinetic_energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - NXdata.nxdl.xml:/AXISNAME@units - [NX_CHAR]
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME/units):
DEBUG - 
				Unit in which the coordinate values are expressed.
				See the section :ref:`Design-Units` for more information.
			
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/transmission_function/relative_intensity): <HDF5 dataset "relative_intensity": shape (2531,), type "<f8">
DEBUG - value: [2.54567897 2.54556872 2.54545848 ... 2.30571545 2.30563353 2.30555162] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/DATA
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - documentation (NXdata.nxdl.xml:/DATA):
DEBUG - 
			.. index:: plotting

			Data values to be used as the NeXus *plottable data*. As the upper case ``DATA``
			indicates, the names of the ``DATA`` fields can be chosen :ref:`freely <validItemName>`. The :ref:`signal attribute </NXdata@signal-attribute>`
			and :ref:`auxiliary_signals attribute</NXdata@auxiliary_signals-attribute>` can be used to find all datasets in the ``NXdata``
			that contain data values.

			The maximum rank is ``32`` for compatibility with backend file formats.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/voltage_range): <HDF5 dataset "voltage_range": shape (), type "<f8">
DEBUG - value: 1.5 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_FLOAT']
DEBUG - classes:
NXelectronanalyzer.nxdl.xml:/voltage_range
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/voltage_range):
DEBUG - 
            Voltage range of the power supply. This influences the noise of the supply
            and thereby the energy resolution.
        
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/voltage_range@units)
DEBUG - value: kV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_FLOAT']
DEBUG - classes:
NXelectronanalyzer.nxdl.xml:/voltage_range
DEBUG - NXelectronanalyzer.nxdl.xml:/voltage_range@units [NX_VOLTAGE]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/work_function): <HDF5 dataset "work_function": shape (), type "<f8">
DEBUG - value: 4.156000137329102 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_FLOAT']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function
NXelectronanalyzer.nxdl.xml:/work_function
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/work_function):
DEBUG - 
            Work function of the electron analyzer.
            
            The work function of a uniform surface of a conductor is the minimum energy required to remove
            an electron from the interior of the solid to a vacuum level immediately outside the solid surface.
            
            The kinetic energy :math:E_K of a photoelectron emitted from an energy level with binding energy
            :math:`E_B` below the Fermi level is given by :math:`E_K = h\nu - E_B - W = h\nu - E_B - e \phi_{\mathrm{sample}}`.

            Here, :math:`W = e \phi_{\mathrm{sample}}` is the work function of the sample surface, which is directly proportional
            to the potential difference :math:`\phi_{\mathrm{sample}}` between the electrochemical potential of electrons in
            the bulk and the electrostatic potential of an electron in the vacuum just outside the surface.

            In PES measurements, the sample and the spectrometer (with work function :math:`W_{\mathrm{spectr.}} = e \phi_{\mathrm{spectr.}}`)
            are electrically connected and therefore their Fermi levels are aligned. Due to the difference in local
            vacuum level between the sample and spectrometer, there however exists an electric potential difference (contact potential)
            :math:`\Delta\phi = \phi_{\mathrm{sample}} - \phi_{\mathrm{spectr.}}`.  The measured kinetic energy of a
            photoelectron in PES is therefore given by :math:`E_K^{\mathrm{meas.}} = E_K + e\Delta\phi = h\nu - E_B - e\phi_{\mathrm{spectr.}}`.

            Hence, the measured kinetic energy :math:`E_K^{\mathrm{meas.}}` of a photoelectron is independent
            of the sample work function. Nonetheless, the work function :math:`\phi_{\mathrm{spectr.}}` needs to be known to
            accurately determine the binding energy scale.
        
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/electronanalyzer/work_function@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_FLOAT']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function
NXelectronanalyzer.nxdl.xml:/work_function
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function@units - REQUIRED, but undefined unit category
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function@units [NX_ENERGY]
DEBUG - NXelectronanalyzer.nxdl.xml:/work_function@units [NX_ENERGY]
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/energy_resolution [NXxps::/NXentry/NXinstrument/NXresolution]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/energy_resolution" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution
NXresolution.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution):
DEBUG - 
                    Overall energy resolution of the photoemission instrument.
                
DEBUG - documentation (NXresolution.nxdl.xml:):
DEBUG - 
         Describes the resolution of a physical quantity.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/energy_resolution@NX_class)
DEBUG - value: NXresolution 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution
NXresolution.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/energy_resolution/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: energy 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/physical_quantity
NXresolution.nxdl.xml:/physical_quantity
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/physical_quantity):
DEBUG - -> energy
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/physical_quantity):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:/physical_quantity):
DEBUG - 
             The physical quantity of the resolution, e.g.,
             energy, momentum, time, area, etc.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/energy_resolution/resolution): <HDF5 dataset "resolution": shape (), type "<f8">
DEBUG - value: 0.2 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/resolution
NXresolution.nxdl.xml:/resolution
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/resolution):
DEBUG - 
                        Minimum distinguishable energy separation in the energy spectra.
                        
                        This concept is related to term `10.24`_ of the ISO 18115-1:2023 standard.
                        
                        .. _10.24: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:10.24
                    
DEBUG - documentation (NXresolution.nxdl.xml:/resolution):
DEBUG - 
             The resolution of the physical quantity.
        
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/energy_resolution/resolution@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/resolution
NXresolution.nxdl.xml:/resolution
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/resolution@units [NX_ENERGY]
DEBUG - NXresolution.nxdl.xml:/resolution@units [NX_ANY]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/energy_resolution/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: calibrated 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/type
NXresolution.nxdl.xml:/type
DEBUG - <<RECOMMENDED>>
DEBUG - enumeration (NXresolution.nxdl.xml:/type):
DEBUG - -> estimated
DEBUG - -> derived
DEBUG - -> calibrated
DEBUG - -> other
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/type):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:/type):
DEBUG - 
             The process by which the resolution was determined.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/flood_gun [NXxps::/NXentry/NXinstrument/NXactuator]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/flood_gun" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun
NXinstrument.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun):
DEBUG - 
                    Device to bring low-energy electrons to the sample for charge neutralization
                
DEBUG - documentation (NXinstrument.nxdl.xml:/ACTUATOR):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/flood_gun@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun
NXinstrument.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/flood_gun@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/flood_gun 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun
NXinstrument.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/flood_gun/actuation_target): <HDF5 dataset "actuation_target": shape (), type "|O">
DEBUG - value: current 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/actuation_target
NXactuator.nxdl.xml:/actuation_target
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/actuation_target):
DEBUG - -> current
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/actuation_target):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/actuation_target):
DEBUG - 
             The physical component on which this actuator acts.
             This should be a path in the NeXus tree structure.
             For example, this could be an instance of NXsample or a device on NXinstrument.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/flood_gun/current): <HDF5 dataset "current": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/current
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/current):
DEBUG - 
                        In case of a fixed or averaged electron current, this is the scalar current.
                        It can also be an 1D array of output current (without time stamps).
                    
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/flood_gun/current@units)
DEBUG - value: A 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/current
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/current@units [NX_CURRENT]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/flood_gun/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: FG 22/35 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/name
NXactuator.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/name):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/flood_gun/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: low energy electron source 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/type
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/type):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/manipulator [NXxps::/NXentry/NXinstrument/NXmanipulator]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/manipulator" (6 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR
NXmanipulator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR):
DEBUG - 
                    Manipulator for positioning of the sample.
                
DEBUG - documentation (NXmanipulator.nxdl.xml:):
DEBUG - 
        Base class to describe the use of manipulators and sample stages.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator@NX_class)
DEBUG - value: NXmanipulator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR
NXmanipulator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/manipulator/device_information [NXxps::/NXentry/NXinstrument/NXmanipulator/NXfabrication]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/manipulator/device_information" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information):
DEBUG - 
DEBUG - documentation (NXcomponent.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/device_information/identifier): <HDF5 dataset "identifier": shape (), type "|O">
DEBUG - value: v1.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/identifier
NXobject.nxdl.xml:/identifierNAME
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/identifier):
DEBUG - 
DEBUG - documentation (NXobject.nxdl.xml:/identifierNAME):
DEBUG - 
			An identifier for a (persistent) resource.

			An identifier, provided by some authority, that has been assigned to an
			object described by this ``NXobject``. To be useful, the identifier
			must not be reassigned to a different real-world object. It is typical for
			there to be some mechanism to resolve an identifier, obtaining metadata
			about the object. Identifiers for which some guarantees exist regarding
			this resolution process are called persistent identifiers.
			Persistent identifiers are also known as PIDs.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: 5-axis manipulator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: SPECS GmbH 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/manipulator/drain_current_ammeter [NXxps::/NXentry/NXinstrument/NXmanipulator/NXsensor]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/manipulator/drain_current_ammeter" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter
NXmanipulator.nxdl.xml:/drain_current_ammeter
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/drain_current_ammeter):
DEBUG - 
            Ammeter measuring the drain current of the sample and sample holder.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/drain_current_ammeter@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter
NXmanipulator.nxdl.xml:/drain_current_ammeter
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/drain_current_ammeter@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/manipulator/drain_current_ammeter 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter
NXmanipulator.nxdl.xml:/drain_current_ammeter
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/drain_current_ammeter/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: current 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/measurement
NXmanipulator.nxdl.xml:/drain_current_ammeter/measurement
NXsensor.nxdl.xml:/measurement
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/measurement):
DEBUG - -> current
DEBUG - enumeration (NXmanipulator.nxdl.xml:/drain_current_ammeter/measurement):
DEBUG - -> current
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/measurement):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/drain_current_ammeter/measurement):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/drain_current_ammeter/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: ammeter 1.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/name
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/name):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/drain_current_ammeter/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: wire 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/type
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/type):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/drain_current_ammeter/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 0.1 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/value
NXmanipulator.nxdl.xml:/drain_current_ammeter/value
NXsensor.nxdl.xml:/value
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/value):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/drain_current_ammeter/value):
DEBUG - 
                In case of a single or averaged drain current measurement, this is the scalar drain current measured between
                the sample and sample holder. It can also be an 1D array of measured currents (without time stamps).
            
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/drain_current_ammeter/value@units)
DEBUG - value: nA 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/value
NXmanipulator.nxdl.xml:/drain_current_ammeter/value
NXsensor.nxdl.xml:/value
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/value@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/drain_current_ammeter/value@units [NX_CURRENT]
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_potentiostat [NXxps::/NXentry/NXinstrument/NXmanipulator/NXactuator]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_potentiostat" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat
NXmanipulator.nxdl.xml:/sample_bias_potentiostat
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_potentiostat):
DEBUG - 
            Actuator applying a voltage between sample holder and sample.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_potentiostat@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat
NXmanipulator.nxdl.xml:/sample_bias_potentiostat
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_potentiostat@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_potentiostat 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat
NXmanipulator.nxdl.xml:/sample_bias_potentiostat
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_potentiostat/actuation_target): <HDF5 dataset "actuation_target": shape (), type "|O">
DEBUG - value: voltage 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/actuation_target
NXmanipulator.nxdl.xml:/sample_bias_potentiostat/actuation_target
NXactuator.nxdl.xml:/actuation_target
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/actuation_target):
DEBUG - -> voltage
DEBUG - enumeration (NXmanipulator.nxdl.xml:/sample_bias_potentiostat/actuation_target):
DEBUG - -> voltage
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/actuation_target):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_potentiostat/actuation_target):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/actuation_target):
DEBUG - 
             The physical component on which this actuator acts.
             This should be a path in the NeXus tree structure.
             For example, this could be an instance of NXsample or a device on NXinstrument.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_potentiostat/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: XPS sample potentiostat 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/name
NXactuator.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/name):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_potentiostat/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: potentiostat 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/type
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/type):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_voltmeter [NXxps::/NXentry/NXinstrument/NXmanipulator/NXsensor]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_voltmeter" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter
NXmanipulator.nxdl.xml:/sample_bias_voltmeter
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_voltmeter):
DEBUG - 
            Sensor measuring the voltage applied to sample and sample holder.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_voltmeter@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter
NXmanipulator.nxdl.xml:/sample_bias_voltmeter
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_voltmeter@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_voltmeter 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter
NXmanipulator.nxdl.xml:/sample_bias_voltmeter
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_voltmeter/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: voltage 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/measurement
NXmanipulator.nxdl.xml:/sample_bias_voltmeter/measurement
NXsensor.nxdl.xml:/measurement
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/measurement):
DEBUG - -> voltage
DEBUG - enumeration (NXmanipulator.nxdl.xml:/sample_bias_voltmeter/measurement):
DEBUG - -> voltage
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/measurement):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_voltmeter/measurement):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_voltmeter/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: XPS sample voltmeter 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/name
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/name):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_voltmeter/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: oscilloscope 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/type
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/type):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_voltmeter/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/value
NXmanipulator.nxdl.xml:/sample_bias_voltmeter/value
NXsensor.nxdl.xml:/value
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/value):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_voltmeter/value):
DEBUG - 
                In case of a single or averaged bias measurement, this is the scalar voltage measured between
                sample and sample holder. It can also be an 1D array of measured voltages (without time stamps).
            
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_voltmeter/value@units)
DEBUG - value: V 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/value
NXmanipulator.nxdl.xml:/sample_bias_voltmeter/value
NXsensor.nxdl.xml:/value
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/value@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/sample_bias_voltmeter/value@units [NX_VOLTAGE]
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_heater [NXxps::/NXentry/NXinstrument/NXmanipulator/NXactuator]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_heater" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater
NXmanipulator.nxdl.xml:/sample_heater
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_heater):
DEBUG - 
            Device to heat the sample.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_heater@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater
NXmanipulator.nxdl.xml:/sample_heater
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_heater@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_heater 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater
NXmanipulator.nxdl.xml:/sample_heater
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_heater/actuation_target): <HDF5 dataset "actuation_target": shape (), type "|O">
DEBUG - value: temperature 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/actuation_target
NXmanipulator.nxdl.xml:/sample_heater/actuation_target
NXactuator.nxdl.xml:/actuation_target
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/actuation_target):
DEBUG - -> temperature
DEBUG - enumeration (NXmanipulator.nxdl.xml:/sample_heater/actuation_target):
DEBUG - -> temperature
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/actuation_target):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_heater/actuation_target):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/actuation_target):
DEBUG - 
             The physical component on which this actuator acts.
             This should be a path in the NeXus tree structure.
             For example, this could be an instance of NXsample or a device on NXinstrument.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_heater/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Coherent Compact Evolution IR Diode LASER (DILAS) 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/name
NXactuator.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/name):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_heater/output_heater_power): <HDF5 dataset "output_heater_power": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/output_heater_power
NXmanipulator.nxdl.xml:/sample_heater/output_heater_power
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/output_heater_power):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_heater/output_heater_power):
DEBUG - 
                In case of a fixed or averaged heating power, this is the scalar heater power.
                It can also be a 1D array of heater powers (without time stamps).
            
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_heater/output_heater_power@units)
DEBUG - value: W 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/output_heater_power
NXmanipulator.nxdl.xml:/sample_heater/output_heater_power
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/output_heater_power@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/sample_heater/output_heater_power@units [NX_POWER]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_heater/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: IR diode laser 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/type
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/type):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/manipulator/temperature_sensor [NXxps::/NXentry/NXinstrument/NXmanipulator/NXsensor]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/manipulator/temperature_sensor" (5 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor
NXmanipulator.nxdl.xml:/temperature_sensor
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/temperature_sensor):
DEBUG - 
            Temperature sensor measuring the sample temperature.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/temperature_sensor@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor
NXmanipulator.nxdl.xml:/temperature_sensor
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/temperature_sensor@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/manipulator/temperature_sensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor
NXmanipulator.nxdl.xml:/temperature_sensor
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/temperature_sensor/attached_to): <HDF5 dataset "attached_to": shape (), type "|O">
DEBUG - value: sample 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/attached_to
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/attached_to):
DEBUG - where sensor is attached to ("sample" | "can")
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/temperature_sensor/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: temperature 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/measurement
NXmanipulator.nxdl.xml:/temperature_sensor/measurement
NXsensor.nxdl.xml:/measurement
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/measurement):
DEBUG - -> temperature
DEBUG - enumeration (NXmanipulator.nxdl.xml:/temperature_sensor/measurement):
DEBUG - -> temperature
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/measurement):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/temperature_sensor/measurement):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/temperature_sensor/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: type K thermocouple 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/name
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/name):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/temperature_sensor/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: type K thermocouple 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/type
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/type):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/manipulator/temperature_sensor/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 298.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/value
NXmanipulator.nxdl.xml:/temperature_sensor/value
NXsensor.nxdl.xml:/value
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/value):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/temperature_sensor/value):
DEBUG - 
                In case of a single or averaged temperature measurement, this is the scalar temperature measured
                by the sample temperature sensor. It can also be a 1D array of measured temperatures
                (without time stamps).
            
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/manipulator/temperature_sensor/value@units)
DEBUG - value: K 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/value
NXmanipulator.nxdl.xml:/temperature_sensor/value
NXsensor.nxdl.xml:/value
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/value@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/temperature_sensor/value@units [NX_TEMPERATURE]
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/pressure_gauge [NXxps::/NXentry/NXinstrument/NXsensor]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/pressure_gauge" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge
NXinstrument.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge):
DEBUG - 
                    Device to measure the gas pressure in the instrument.
                
DEBUG - documentation (NXinstrument.nxdl.xml:/SENSOR):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/pressure_gauge@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge
NXinstrument.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/pressure_gauge@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/pressure_gauge 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge
NXinstrument.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/pressure_gauge/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: pressure 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/measurement
NXsensor.nxdl.xml:/measurement
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/measurement):
DEBUG - -> pressure
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/measurement):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/pressure_gauge/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Atmion 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/name
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/name):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/pressure_gauge/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: hot-filament ionization gauge 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/type
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/type):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/pressure_gauge/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 1e-09 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/value
NXsensor.nxdl.xml:/value
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/value):
DEBUG - 
                        In case of a single or averaged gas pressure measurement, this is the scalar gas pressure.
                        It can also be an 1D array of measured pressures (without time stamps).
                    
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/pressure_gauge/value@units)
DEBUG - value: mbar 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/value
NXsensor.nxdl.xml:/value
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/value@units [NX_PRESSURE]
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/source_probe [NXxps::/NXentry/NXinstrument/NXsource]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/source_probe" (7 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/source_probe
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe
NXinstrument.nxdl.xml:/SOURCE
NXsource.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/source_probe):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe):
DEBUG - 
                    The source used to generate the :ref:`beam_probe </NXmpes/ENTRY/INSTRUMENT/beam_probe-group>`.
                    
                    Properties refer strictly to parameters of the source, not of the output beam. For example,
                    the energy of the source is not the optical power of the beam, but the energy of the electron beam
                    in a synchrotron or similar.
                
DEBUG - documentation (NXinstrument.nxdl.xml:/SOURCE):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:):
DEBUG - 
		Radiation source emitting a beam.

		Examples include particle sources (electrons, neutrons, protons) or sources for electromagnetic radiation (photons).
		This base class can also be used to describe neutron or x-ray storage ring/facilities.
   
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/source_probe@NX_class)
DEBUG - value: NXsource 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/source_probe
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe
NXinstrument.nxdl.xml:/SOURCE
NXsource.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/source_probe/associated_beam): <HDF5 dataset "associated_beam": shape (), type "|O">
DEBUG - value: /entry/instrument/beam_probe 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/associated_beam
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/associated_beam):
DEBUG - 
                        A reference to a beam emitted by this source.
                        Should be named with the same suffix, e.g.,
                        for ``source_probe`` it should refer to ``beam_probe``.
                        
                        Example:
                          * /entry/instrument/source_probe/associated_beam = /entry/instrument/beam_probe
                    
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/source_probe/current): <HDF5 dataset "current": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']
DEBUG - classes:
NXsource.nxdl.xml:/current
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsource.nxdl.xml:/current):
DEBUG - Accelerator, X-ray tube, or storage ring current
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/source_probe/current@units)
DEBUG - value: A 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']
DEBUG - classes:
NXsource.nxdl.xml:/current
DEBUG - NXsource.nxdl.xml:/current@units [NX_CURRENT]
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/instrument/source_probe/device_information [NXxps::/NXentry/NXinstrument/NXsource/NXfabrication]): <HDF5 group "/Au_in_25mBar_O2__Au4f/instrument/source_probe/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information
NXsource.nxdl.xml:/FABRICATION
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXcomponent.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/source_probe/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information
NXsource.nxdl.xml:/FABRICATION
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/source_probe/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: µFOCUS 500 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/source_probe/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: SPECS GmbH 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/source_probe/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Phoibos1D 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/name
NXsource.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/name):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:/name):
DEBUG - Name of source
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/source_probe/probe): <HDF5 dataset "probe": shape (), type "|O">
DEBUG - value: photon 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/probe
NXsource.nxdl.xml:/probe
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsource.nxdl.xml:/probe):
DEBUG - -> neutron
DEBUG - -> photon
DEBUG - -> x-ray
DEBUG - -> muon
DEBUG - -> electron
DEBUG - -> ultraviolet
DEBUG - -> visible light
DEBUG - -> positron
DEBUG - -> proton
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/probe):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:/probe):
DEBUG - type of radiation probe (pick one from the enumerated list and spell exactly)
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/source_probe/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: Fixed Tube X-ray 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/type
NXsource.nxdl.xml:/type
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/type):
DEBUG - -> Synchrotron X-ray Source
DEBUG - -> Rotating Anode X-ray
DEBUG - -> Fixed Tube X-ray
DEBUG - -> UV Laser
DEBUG - -> Free-Electron Laser
DEBUG - -> Optical Laser
DEBUG - -> UV Plasma Source
DEBUG - -> Metal Jet X-ray
DEBUG - -> HHG laser
DEBUG - -> UV lamp
DEBUG - -> Monochromatized electron source
DEBUG - enumeration (NXsource.nxdl.xml:/type):
DEBUG - -> Spallation Neutron Source
DEBUG - -> Pulsed Reactor Neutron Source
DEBUG - -> Reactor Neutron Source
DEBUG - -> Synchrotron X-ray Source
DEBUG - -> Pulsed Muon Source
DEBUG - -> Rotating Anode X-ray
DEBUG - -> Fixed Tube X-ray
DEBUG - -> UV Laser
DEBUG - -> Free-Electron Laser
DEBUG - -> Optical Laser
DEBUG - -> Ion Source
DEBUG - -> UV Plasma Source
DEBUG - -> Metal Jet X-ray
DEBUG - -> Laser
DEBUG - -> Dye Laser
DEBUG - -> Broadband Tunable Light Source
DEBUG - -> Halogen Lamp
DEBUG - -> LED
DEBUG - -> Mercury Cadmium Telluride Lamp
DEBUG - -> Deuterium Lamp
DEBUG - -> Xenon Lamp
DEBUG - -> Globar
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/type):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:/type):
DEBUG - type of radiation source (pick one from the enumerated list and spell exactly)
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/instrument/source_probe/voltage): <HDF5 dataset "voltage": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']
DEBUG - classes:
NXsource.nxdl.xml:/voltage
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsource.nxdl.xml:/voltage):
DEBUG - Accelerator voltage
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/instrument/source_probe/voltage@units)
DEBUG - value: V 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']
DEBUG - classes:
NXsource.nxdl.xml:/voltage
DEBUG - NXsource.nxdl.xml:/voltage@units [NX_VOLTAGE]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/method): <HDF5 dataset "method": shape (), type "|O">
DEBUG - value: X-ray photoelectron spectroscopy (XPS) 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/method
NXmpes.nxdl.xml:/ENTRY/method
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/method):
DEBUG - 
                A name of the experimental method according to `Clause 11`_ of
                the `ISO 18115-1:2023`_ specification.
                
                Examples for XPS-related experiments include:
                    * X-ray photoelectron spectroscopy (XPS)
                    * angle-resolved X-ray photoelectron spectroscopy (ARXPS)
                    * ultraviolet photoelectron spectroscopy (UPS)
                    * hard X-ray photoemission spectroscopy (HAXPES)
                    * near ambient pressure X-ray photoelectron spectroscopy (NAPXPS)
                    * electron spectroscopy for chemical analysis (ESCA)
                
                .. _ISO 18115-1:2023: https://www.iso.org/standard/74811.html
                .. _Clause 11: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:sec:11
            
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/method):
DEBUG - 
                Name of the experimental method.
                
                If applicable, this name should match the terms given by `Clause 11`_ of
                the `ISO 18115-1:2023`_ specification.
                
                Examples include:
                    * X-ray photoelectron spectroscopy (XPS)
                    * angle-resolved X-ray photoelectron spectroscopy (ARXPS)
                    * ultraviolet photoelectron spectroscopy (UPS)
                    * angle-resolved photoelectron spectroscopy (ARPES)
                    * hard X-ray photoemission spectroscopy (HAXPES)
                    * near ambient pressure X-ray photoelectron spectroscopy (NAPXPS)
                    * photoelectron emission microscopy (PEEM)
                    * electron spectroscopy for chemical analysis (ESCA)
                    * time-resolved angle-resolved X-ray photoelectron spectroscopy (trARPES)
                    * spin-resolved angle-resolved X-ray photoelectron spectroscopy (spin-ARPES)
                    * momentum microscopy
                
                .. _ISO 18115-1:2023: https://www.iso.org/standard/74811.html
                .. _Clause 11: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:sec:11
            
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/program_name): <HDF5 dataset "program_name": shape (), type "|O">
DEBUG - value: SpecsLabProdigy 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXentry.nxdl.xml:/program_name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/program_name):
DEBUG - Name of program used to generate this file
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample [NXxps::/NXentry/NXsample]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample" (12 members)>
DEBUG - classpath: ['NXentry', 'NXsample']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE
NXmpes.nxdl.xml:/ENTRY/SAMPLE
NXentry.nxdl.xml:/SAMPLE
NXsample.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE):
DEBUG - 
DEBUG - documentation (NXentry.nxdl.xml:/SAMPLE):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:):
DEBUG - 
		Any information on the sample. 
		
		This could include scanned variables that
		are associated with one of the data dimensions, e.g. the magnetic field, or
		logged data, e.g. monitored temperature vs elapsed time.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample@NX_class)
DEBUG - value: NXsample 
DEBUG - classpath: ['NXentry', 'NXsample']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE
NXmpes.nxdl.xml:/ENTRY/SAMPLE
NXentry.nxdl.xml:/SAMPLE
NXsample.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/atom_types): <HDF5 dataset "atom_types": shape (), type "|O">
DEBUG - value: Au 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/atom_types
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/atom_types):
DEBUG - 
                    Array of comma-separated elements from the periodic table
                    that are contained in the sample.
                    If the sample substance has multiple components, all
                    elements from each component must be included in `atom_types`.
                
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/bias_env [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/bias_env" (2 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env):
DEBUG - 
                    Bias of the sample with respect to analyzer ground and actuators/sensors
                    controlling/measuring it.
                    
                    This concept is related to term `8.41`_ of the ISO 18115-1:2023 standard.
                    
                    .. _8.41: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:8.41
                
DEBUG - documentation (NXsample.nxdl.xml:/ENVIRONMENT):
DEBUG - 
			Any environmental or external stimuli/measurements.
			These can include, among others:
			applied pressure, surrounding gas phase and gas pressure,
			external electric/magnetic/mechanical fields, temperature, ...
		
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - Parameters for controlling external conditions
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/bias_env@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/bias_env/potentiostat [NXxps::/NXentry/NXsample/NXenvironment/NXactuator]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/bias_env/potentiostat" (3 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/potentiostat
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/potentiostat):
DEBUG - 
                        Actuator applying a voltage to sample and sample holder.
                        
                        In most cases, this can be a link to /entry/instrument/manipulator/sample_bias_potentiostat
                        if a manipulator is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/ACTUATOR):
DEBUG - 
             Any actuator used to control the environment. This can be linked to an actuator
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/bias_env/potentiostat@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/potentiostat
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/bias_env/potentiostat@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_potentiostat 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/potentiostat
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/bias_env/potentiostat/actuation_target): <HDF5 dataset "actuation_target": shape (), type "|O">
DEBUG - value: voltage 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/actuation_target
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/actuation_target):
DEBUG - 
             The physical component on which this actuator acts.
             This should be a path in the NeXus tree structure.
             For example, this could be an instance of NXsample or a device on NXinstrument.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/bias_env/potentiostat/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: XPS sample potentiostat 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/bias_env/potentiostat/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: potentiostat 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/bias_env/voltmeter [NXxps::/NXentry/NXsample/NXenvironment/NXsensor]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/bias_env/voltmeter" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/voltmeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/voltmeter):
DEBUG - 
                        Sensor measuring the applied voltage.
                        
                        In most cases, this can be a link to /entry/instrument/manipulator/sample_bias_voltmeter
                        if a manipulator is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/SENSOR):
DEBUG - 
             Any sensor used to monitor the environment. This can be linked to a sensor
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/bias_env/voltmeter@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/voltmeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/bias_env/voltmeter@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_bias_voltmeter 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/voltmeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/bias_env/voltmeter/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: voltage 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/measurement
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/bias_env/voltmeter/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: XPS sample voltmeter 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/bias_env/voltmeter/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: oscilloscope 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/bias_env/voltmeter/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/bias_env/voltmeter/value@units)
DEBUG - value: V 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/chemical_formula): <HDF5 dataset "chemical_formula": shape (), type "|O">
DEBUG - value: Au 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/chemical_formula
NXsample.nxdl.xml:/chemical_formula
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/chemical_formula):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:/chemical_formula):
DEBUG - 
			The chemical formula specified using CIF conventions.
			Abbreviated version of CIF standard: 
			
			* Only recognized element symbols may be used.
			* Each element symbol is followed by a 'count' number. A count of '1' may be omitted.
			* A space or parenthesis must separate each cluster of (element symbol + count).
			* Where a group of elements is enclosed in parentheses, the multiplier for the 
			  group must follow the closing parentheses. That is, all element and group 
			  multipliers are assumed to be printed as subscripted numbers.
			* Unless the elements are ordered in a manner that corresponds to their chemical 
			  structure, the order of the elements within any group or moiety depends on 
			  whether or not carbon is present.
			* If carbon is present, the order should be: 
			
			  - C, then H, then the other elements in alphabetical order of their symbol. 
			  - If carbon is not present, the elements are listed purely in alphabetic order of their symbol. 
			  
			* This is the *Hill* system used by Chemical Abstracts.
		
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/drain_current_env [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/drain_current_env" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env):
DEBUG - 
                    Drain current of the sample and sample holder.
                
DEBUG - documentation (NXsample.nxdl.xml:/ENVIRONMENT):
DEBUG - 
			Any environmental or external stimuli/measurements.
			These can include, among others:
			applied pressure, surrounding gas phase and gas pressure,
			external electric/magnetic/mechanical fields, temperature, ...
		
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - Parameters for controlling external conditions
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/drain_current_env@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/drain_current_env/ammeter [NXxps::/NXentry/NXsample/NXenvironment/NXsensor]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/drain_current_env/ammeter" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env/ammeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env/ammeter):
DEBUG - 
                        Ammeter measuring the drain current of the sample and sample holder.
                        
                        In most cases, this can be a link to /entry/instrument/manipulator/drain_current_ammeter
                        if a manipulator is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/SENSOR):
DEBUG - 
             Any sensor used to monitor the environment. This can be linked to a sensor
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/drain_current_env/ammeter@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env/ammeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/drain_current_env/ammeter@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/manipulator/drain_current_ammeter 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env/ammeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/drain_current_env/ammeter/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: current 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/measurement
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/drain_current_env/ammeter/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: ammeter 1.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/drain_current_env/ammeter/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: wire 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/drain_current_env/ammeter/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 0.1 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/drain_current_env/ammeter/value@units)
DEBUG - value: nA 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/flood_gun_current_env [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/flood_gun_current_env" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env):
DEBUG - 
                    Current of low-energy electrons to the sample (for charge neutralization) and
                    actuators/sensors controlling/measuring it.
                
DEBUG - documentation (NXsample.nxdl.xml:/ENVIRONMENT):
DEBUG - 
			Any environmental or external stimuli/measurements.
			These can include, among others:
			applied pressure, surrounding gas phase and gas pressure,
			external electric/magnetic/mechanical fields, temperature, ...
		
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - Parameters for controlling external conditions
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/flood_gun_current_env@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/flood_gun_current_env/flood_gun [NXxps::/NXentry/NXsample/NXenvironment/NXactuator]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/flood_gun_current_env/flood_gun" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env/flood_gun
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env/flood_gun):
DEBUG - 
                        Flood gun creating a current of low-energy electrons.
                        
                        In most cases this can be a link to /entry/instrument/flood_gun
                        if a flood_gun is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/ACTUATOR):
DEBUG - 
             Any actuator used to control the environment. This can be linked to an actuator
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/flood_gun_current_env/flood_gun@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env/flood_gun
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/flood_gun_current_env/flood_gun@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/flood_gun 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env/flood_gun
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/flood_gun_current_env/flood_gun/actuation_target): <HDF5 dataset "actuation_target": shape (), type "|O">
DEBUG - value: current 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/actuation_target
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/actuation_target):
DEBUG - 
             The physical component on which this actuator acts.
             This should be a path in the NeXus tree structure.
             For example, this could be an instance of NXsample or a device on NXinstrument.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/flood_gun_current_env/flood_gun/current): <HDF5 dataset "current": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - NOT IN SCHEMA
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/flood_gun_current_env/flood_gun/current@units)
DEBUG - value: A 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/flood_gun_current_env/flood_gun/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: FG 22/35 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/flood_gun_current_env/flood_gun/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: low energy electron source 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/gas_pressure_env [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/gas_pressure_env" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env):
DEBUG - 
                    Gas pressure surrounding the sample and actuators/sensors controlling/measuring
                    it.
                
DEBUG - documentation (NXsample.nxdl.xml:/ENVIRONMENT):
DEBUG - 
			Any environmental or external stimuli/measurements.
			These can include, among others:
			applied pressure, surrounding gas phase and gas pressure,
			external electric/magnetic/mechanical fields, temperature, ...
		
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - Parameters for controlling external conditions
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/gas_pressure_env@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/gas_pressure_env/pressure_gauge [NXxps::/NXentry/NXsample/NXenvironment/NXsensor]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/gas_pressure_env/pressure_gauge" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env/pressure_gauge
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env/pressure_gauge):
DEBUG - 
                        Gauge measuring the gas pressure.
                        
                        In most cases, this can be a link to /entry/instrument/pressure_gauge or to another
                        NXsensor measuring gas pressure (typically, the gauge in closest proximity to the
                        sample) if such a pressure gauge is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/SENSOR):
DEBUG - 
             Any sensor used to monitor the environment. This can be linked to a sensor
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/gas_pressure_env/pressure_gauge@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env/pressure_gauge
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/gas_pressure_env/pressure_gauge@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/pressure_gauge 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env/pressure_gauge
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/gas_pressure_env/pressure_gauge/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: pressure 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/measurement
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/gas_pressure_env/pressure_gauge/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Atmion 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/gas_pressure_env/pressure_gauge/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: hot-filament ionization gauge 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/gas_pressure_env/pressure_gauge/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 1e-09 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/gas_pressure_env/pressure_gauge/value@units)
DEBUG - value: mbar 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/history [NXxps::/NXentry/NXsample/NXhistory]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/history" (2 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history
NXsample.nxdl.xml:/history
NXhistory.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history):
DEBUG - 
                    A set of activities that occurred to the sample prior to/during photoemission
                    experiment.
                
DEBUG - documentation (NXsample.nxdl.xml:/history):
DEBUG - 
        	A set of physical processes that occurred to the sample prior/during experiment.
		
DEBUG - documentation (NXhistory.nxdl.xml:):
DEBUG - 
        A set of activities that occurred to a physical entity prior/during experiment.
        
        Ideally, a full report of the previous operations (or links to a chain of operations).
        Alternatively, notes allow for additional descriptors in any format.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/history@NX_class)
DEBUG - value: NXhistory 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history
NXsample.nxdl.xml:/history
NXhistory.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/history/sample_loading [NXxps::/NXentry/NXsample/NXhistory/NXactivity]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/history/sample_loading" (3 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity']
DEBUG - classes:
NXhistory.nxdl.xml:/ACTIVITY
NXactivity.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXhistory.nxdl.xml:/ACTIVITY):
DEBUG - 
            Any activity that was performed on the physical entity prior or during the
            experiment.
        
DEBUG - documentation (NXactivity.nxdl.xml:):
DEBUG - 
         A planned or unplanned action that has a temporal extension and for some time depends on some entity.
         
         This class is a super class for all other activities.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/history/sample_loading@NX_class)
DEBUG - value: NXactivity 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity']
DEBUG - classes:
NXhistory.nxdl.xml:/ACTIVITY
NXactivity.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/history/sample_loading/description): <HDF5 dataset "description": shape (), type "|O">
DEBUG - value: vacuum transfer, loaded in the endstation and transferred to analysis chamber 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_CHAR']
DEBUG - classes:
NXactivity.nxdl.xml:/description
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactivity.nxdl.xml:/description):
DEBUG - 
             Short description of the activity.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/history/sample_loading/end_time): <HDF5 dataset "end_time": shape (), type "|O">
DEBUG - value: 2022-04-08T11:03:00.020000+00:00 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_DATE_TIME']
DEBUG - classes:
NXactivity.nxdl.xml:/end_time
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactivity.nxdl.xml:/end_time):
DEBUG - 
             End time of this activity. It is recommended to include local time zone information.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/history/sample_loading/start_time): <HDF5 dataset "start_time": shape (), type "|O">
DEBUG - value: 2022-04-08T11:02:00.020000+00:00 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_DATE_TIME']
DEBUG - classes:
NXactivity.nxdl.xml:/start_time
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactivity.nxdl.xml:/start_time):
DEBUG - 
            Start time of this activity. It is recommended to include local time zone information.
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/history/sample_preparation [NXxps::/NXentry/NXsample/NXhistory/NXactivity]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/history/sample_preparation" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation
NXhistory.nxdl.xml:/ACTIVITY
NXactivity.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation):
DEBUG - 
                        Details about the sample preparation for the photoemission experiment (e.g. UHV cleaving,
                        in-situ growth, sputtering/annealing, etc.).
                    
DEBUG - documentation (NXhistory.nxdl.xml:/ACTIVITY):
DEBUG - 
            Any activity that was performed on the physical entity prior or during the
            experiment.
        
DEBUG - documentation (NXactivity.nxdl.xml:):
DEBUG - 
         A planned or unplanned action that has a temporal extension and for some time depends on some entity.
         
         This class is a super class for all other activities.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/history/sample_preparation@NX_class)
DEBUG - value: NXactivity 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation
NXhistory.nxdl.xml:/ACTIVITY
NXactivity.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/history/sample_preparation/description): <HDF5 dataset "description": shape (), type "|O">
DEBUG - value: sputter cleaned with Ar ions for 20 min 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_CHAR']
DEBUG - classes:
NXactivity.nxdl.xml:/description
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactivity.nxdl.xml:/description):
DEBUG - 
             Short description of the activity.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/history/sample_preparation/end_time): <HDF5 dataset "end_time": shape (), type "|O">
DEBUG - value: 2022-04-08T11:45:00.200000+00:00 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_DATE_TIME']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/end_time
NXactivity.nxdl.xml:/end_time
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/end_time):
DEBUG - 
DEBUG - documentation (NXactivity.nxdl.xml:/end_time):
DEBUG - 
             End time of this activity. It is recommended to include local time zone information.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/history/sample_preparation/method): <HDF5 dataset "method": shape (), type "|O">
DEBUG - value: Ar sputtering 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/method
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/method):
DEBUG - 
                            Details about the method of sample preparation before the photoemission
                            experiment.
                        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/history/sample_preparation/start_time): <HDF5 dataset "start_time": shape (), type "|O">
DEBUG - value: 2022-04-08T11:25:00.200000+00:00 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_DATE_TIME']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/start_time
NXactivity.nxdl.xml:/start_time
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/start_time):
DEBUG - 
DEBUG - documentation (NXactivity.nxdl.xml:/start_time):
DEBUG - 
            Start time of this activity. It is recommended to include local time zone information.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/identifier): <HDF5 dataset "identifier": shape (), type "|O">
DEBUG - value: S718 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/identifier
NXobject.nxdl.xml:/identifierNAME
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/identifier):
DEBUG - 
DEBUG - documentation (NXobject.nxdl.xml:/identifierNAME):
DEBUG - 
			An identifier for a (persistent) resource.

			An identifier, provided by some authority, that has been assigned to an
			object described by this ``NXobject``. To be useful, the identifier
			must not be reassigned to a different real-world object. It is typical for
			there to be some mechanism to resolve an identifier, obtaining metadata
			about the object. Identifiers for which some guarantees exist regarding
			this resolution process are called persistent identifiers.
			Persistent identifiers are also known as PIDs.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Polycristalline Au foil 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/name
NXsample.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/name):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:/name):
DEBUG - Descriptive name of sample
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/physical_form): <HDF5 dataset "physical_form": shape (), type "|O">
DEBUG - value: foil 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/physical_form
NXsample.nxdl.xml:/physical_form
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/physical_form):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:/physical_form):
DEBUG - 
			Physical form of the sample material.
			Examples include single crystal, foil, pellet, powder, thin film, disc, foam, gas, liquid, amorphous.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/situation): <HDF5 dataset "situation": shape (), type "|O">
DEBUG - value: vacuum 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/situation
NXsample.nxdl.xml:/situation
DEBUG - <<RECOMMENDED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/SAMPLE/situation):
DEBUG - -> vacuum
DEBUG - -> inert atmosphere
DEBUG - -> oxidizing atmosphere
DEBUG - -> reducing atmosphere
DEBUG - enumeration (NXsample.nxdl.xml:/situation):
DEBUG - -> air
DEBUG - -> vacuum
DEBUG - -> inert atmosphere
DEBUG - -> oxidising atmosphere
DEBUG - -> reducing atmosphere
DEBUG - -> sealed can
DEBUG - -> other
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/situation):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:/situation):
DEBUG - 
			The atmosphere will be one of the components, which is where 
			its details will be stored; the relevant components will be 
			indicated by the entry in the sample_component member.
		
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/temperature_env [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/temperature_env" (2 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env
NXsample.nxdl.xml:/temperature_env
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env):
DEBUG - 
                    Sample temperature (either controlled or just measured) and actuators/sensors
                    controlling/measuring it.
                
DEBUG - documentation (NXsample.nxdl.xml:/temperature_env):
DEBUG - Additional sample temperature environment information
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - Parameters for controlling external conditions
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/temperature_env@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env
NXsample.nxdl.xml:/temperature_env
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/temperature_env/sample_heater [NXxps::/NXentry/NXsample/NXenvironment/NXactuator]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/temperature_env/sample_heater" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/sample_heater
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/sample_heater):
DEBUG - 
                        Device to heat the sample.
                        
                        In most cases, this can be a link to /entry/instrument/manipulator/sample_heater
                        if a manipulator is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/ACTUATOR):
DEBUG - 
             Any actuator used to control the environment. This can be linked to an actuator
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/temperature_env/sample_heater@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/sample_heater
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/temperature_env/sample_heater@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/manipulator/sample_heater 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/sample_heater
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/temperature_env/sample_heater/actuation_target): <HDF5 dataset "actuation_target": shape (), type "|O">
DEBUG - value: temperature 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/actuation_target
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/actuation_target):
DEBUG - 
             The physical component on which this actuator acts.
             This should be a path in the NeXus tree structure.
             For example, this could be an instance of NXsample or a device on NXinstrument.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/temperature_env/sample_heater/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Coherent Compact Evolution IR Diode LASER (DILAS) 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/temperature_env/sample_heater/output_heater_power): <HDF5 dataset "output_heater_power": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_NUMBER']
DEBUG - classes:
NXactuator.nxdl.xml:/outputVALUE
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/outputVALUE):
DEBUG - 
             Any output that the actuator produces.
             For example, a heater can have the field output_power(NX_NUMBER).
        
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/temperature_env/sample_heater/output_heater_power@units)
DEBUG - value: W 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_NUMBER']
DEBUG - classes:
NXactuator.nxdl.xml:/outputVALUE
DEBUG - NXactuator.nxdl.xml:/outputVALUE@units [NX_ANY]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/temperature_env/sample_heater/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: IR diode laser 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/sample/temperature_env/temperature_sensor [NXxps::/NXentry/NXsample/NXenvironment/NXsensor]): <HDF5 group "/Au_in_25mBar_O2__Au4f/sample/temperature_env/temperature_sensor" (5 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/temperature_sensor
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/temperature_sensor):
DEBUG - 
                        Temperature sensor measuring the sample temperature.
                        
                        In most cases, this can be a link to /entry/instrument/manipulator/temperature_sensor
                        if a manipulator is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/SENSOR):
DEBUG - 
             Any sensor used to monitor the environment. This can be linked to a sensor
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/temperature_env/temperature_sensor@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/temperature_sensor
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/temperature_env/temperature_sensor@target)
DEBUG - value: /Au_in_25mBar_O2__Au4f/instrument/manipulator/temperature_sensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/temperature_sensor
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/temperature_env/temperature_sensor/attached_to): <HDF5 dataset "attached_to": shape (), type "|O">
DEBUG - value: sample 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/attached_to
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/attached_to):
DEBUG - where sensor is attached to ("sample" | "can")
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/temperature_env/temperature_sensor/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: temperature 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/measurement
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/temperature_env/temperature_sensor/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: type K thermocouple 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/temperature_env/temperature_sensor/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: type K thermocouple 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/sample/temperature_env/temperature_sensor/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 298.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/sample/temperature_env/temperature_sensor/value@units)
DEBUG - value: K 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/start_time): <HDF5 dataset "start_time": shape (), type "|O">
DEBUG - value: 2022-04-08T11:47:02.020000+00:00 
DEBUG - classpath: ['NXentry', 'NX_DATE_TIME']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/start_time
NXentry.nxdl.xml:/start_time
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/start_time):
DEBUG - 
                Datetime of the start of the measurement.
                Should be an ISO8601 date/time stamp. It is recommended to add an explicit time zone,
                otherwise the local time zone is assumed per ISO8601.
            
DEBUG - documentation (NXentry.nxdl.xml:/start_time):
DEBUG - Starting time of measurement
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/title): <HDF5 dataset "title": shape (), type "|O">
DEBUG - value: EX439_S718_Au in 25 mbar O2 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/title
NXentry.nxdl.xml:/title
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/title):
DEBUG - 
DEBUG - documentation (NXentry.nxdl.xml:/title):
DEBUG - Extended title for entry
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/transmission_correction [NXxps::/NXentry/NXcalibration]): <HDF5 group "/Au_in_25mBar_O2__Au4f/transmission_correction" (2 members)>
DEBUG - classpath: ['NXentry', 'NXcalibration']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/transmission_correction
NXmpes.nxdl.xml:/ENTRY/transmission_correction
NXcalibration.nxdl.xml:
NXprocess.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/transmission_correction):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/transmission_correction):
DEBUG - 
                In the transmission correction, each intensity measurement for electrons of a given
                kinetic energy is multiplied by the corresponding value in the relative_intensity
                field of the transmission_function. This calibration procedure is used to account for
                energy-dependent transmission efficiencies in certain lens modes.
            
DEBUG - documentation (NXcalibration.nxdl.xml:):
DEBUG - 
        Subclass of NXprocess to describe post-processing calibrations.
    
DEBUG - documentation (NXprocess.nxdl.xml:):
DEBUG - 
        The :ref:`NXprocess` class describes an operation used to
        process data as part of an analysis workflow, providing
        information such as the software used, the date of the
        operation, the input parameters, and the resulting data. 
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/transmission_correction@NX_class)
DEBUG - value: NXcalibration 
DEBUG - classpath: ['NXentry', 'NXcalibration']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/transmission_correction
NXmpes.nxdl.xml:/ENTRY/transmission_correction
NXcalibration.nxdl.xml:
NXprocess.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/transmission_correction/calibration_object [NXxps::/NXentry/NXcalibration/NXnote]): <HDF5 group "/Au_in_25mBar_O2__Au4f/transmission_correction/calibration_object" (1 members)>
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote']
DEBUG - classes:
NXcalibration.nxdl.xml:/calibration_object
NXprocess.nxdl.xml:/NOTE
NXobject.nxdl.xml:/NOTE
NXnote.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcalibration.nxdl.xml:/calibration_object):
DEBUG - 
            A file serialization of a calibration which may not be publicly available (externally from the NeXus file).
            
            This metadata can be a documentation of the source (file) or database (entry) from which pieces
            of information have been extracted for consumption (e.g. in a research data management system (RDMS)).
            It is also possible to include the actual file by using the `file` field.
            
            The axis values may be copied or linked in the appropriate NXcalibration fields for reference.
        
DEBUG - documentation (NXprocess.nxdl.xml:/NOTE):
DEBUG - 
            The note will contain information about how the data was
            processed or anything about the data provenance. The
            contents of the note can be anything that the processing
            code can understand, or simple text.
            
            The name will be numbered to allow for ordering of steps.
        
DEBUG - documentation (NXobject.nxdl.xml:/NOTE):
DEBUG - 
DEBUG - documentation (NXnote.nxdl.xml:):
DEBUG - 
		Any additional freeform information not covered by the other base classes.
		
		This class can be used to store additional information in a 
		NeXus file e.g. pictures, movies, audio, additional text logs
	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/transmission_correction/calibration_object@NX_class)
DEBUG - value: NXnote 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote']
DEBUG - classes:
NXcalibration.nxdl.xml:/calibration_object
NXprocess.nxdl.xml:/NOTE
NXobject.nxdl.xml:/NOTE
NXnote.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/transmission_correction/calibration_object/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: file 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote', 'NX_CHAR']
DEBUG - classes:
NXnote.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXnote.nxdl.xml:/type):
DEBUG - Mime content type of note data field e.g. image/jpeg, text/plain, text/html
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/transmission_correction/transmission_function [NXxps::/NXentry/NXcalibration/NXdata]): <HDF5 group "/Au_in_25mBar_O2__Au4f/transmission_correction/transmission_function" (2 members)>
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function
NXcalibration.nxdl.xml:/DATA
NXprocess.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function):
DEBUG - 
                    Transmission function of the electron analyzer.
                    
                    The transmission function (TF) specifies the detection efficiency for electrons of
                    different kinetic energy passing through the electron analyzer.
                    
                    This can be a link to /entry/instrument/electronanalyzer/transmission_function.
                
DEBUG - documentation (NXcalibration.nxdl.xml:/DATA):
DEBUG - 
            Any data acquired/used during the calibration that does not fit the `NX_FLOAT` fields above.
            NXdata groups can be used for multidimensional data which are relevant to the calibration
        
DEBUG - documentation (NXprocess.nxdl.xml:/DATA):
DEBUG - 
            The data resulting from the operation.
        
DEBUG - documentation (NXobject.nxdl.xml:/DATA):
DEBUG - 
DEBUG - documentation (NXdata.nxdl.xml:):
DEBUG - 
		The :ref:`NXdata` class is designed to encapsulate all the information required for a set of data to be plotted.
		NXdata groups contain plottable data (also referred to as *signals* or *dependent variables*) and their
		associated axis coordinates (also referred to as *axes* or *independent variables*).

		The actual names of the :ref:`DATA </NXdata/DATA-field>` and :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
		can be chosen :ref:`freely <validItemName>`, as indicated by the upper case (this is a common convention in all NeXus classes).
		
		.. note:: ``NXdata`` provides data and coordinates to be plotted but
			does not describe how the data is to be plotted or even the dimensionality of the plot.
			https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute

		.. include:: data/index.rst
		   :start-line: 1

		.. admonition:: Example of a simple curve plot

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x"]
				  data: float[100]
				  x: float[100]

		More complex cases are supported

		* histogram data: ``x`` has one more value than ``data``.
		* alternative axes: instead of a single ``x`` axis you can have several axes, one of which being the default.
		* signals with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` along each dimension.
		* axes with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` also being 2D, providing a
		  unique ``(x, y)`` coordinate for each ``data`` point.

		**Signals:**

		.. index:: plotting

		.. admonition:: Defined by

			* :ref:`DATA </NXdata/DATA-field>` fields
			* the :ref:`signal </NXdata@signal-attribute>` attribute
			* the :ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute

		The :ref:`DATA </NXdata/DATA-field>` fields contain the signal values to be plotted. The name of the field
		to be used as the *default plot signal* is provided by the :ref:`signal </NXdata@signal-attribute>` attribute.
		The names of the fields to be used as *secondary plot signals* are provided by the
		:ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute.

		.. admonition:: An example with three signals, one of which being the default

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  data1: float[10,20,30]  # the default signal
				  data2: float[10,20,30]
				  data3: float[10,20,30]

		**Axes:**

		.. index:: axes (attribute)
		.. index:: coordinates

		.. admonition:: Defined by

			* :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			* the :ref:`axes </NXdata@axes-attribute>` attribute
			* :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes

		The fields and attributes are defined as follows

		1. The :ref:`AXISNAME </NXdata/AXISNAME-field>` fields contain the axis coordinates associated with the signal values.

		2. The :ref:`axes </NXdata@axes-attribute>` attribute provides the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   fields to be used as the `default axis` for each dimension of the :ref:`DATA </NXdata/DATA-field>` fields.

		3. The :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes describe the :ref:`DATA </NXdata/DATA-field>`
		   dimensions spanned by the corresponding :ref:`AXISNAME </NXdata/AXISNAME-field>` fields.

		The fields and attributes have the following constraints

		1. The length of the :ref:`axes </NXdata@axes-attribute>` attribute must be equal to the rank of the :ref:`DATA </NXdata/DATA-field>`
		   fields. When a particular dimension has no default axis, the string “.” is used in that position.

		2. The number of values in :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` must be equal to the rank of the corresponding
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		3. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is missing for a given
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field, the positions of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   field name in the :ref:`axes </NXdata@axes-attribute>` attribute are used.

		4. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is the same as the indices of "AXISNAME" in the
		   :ref:`axes </NXdata@axes-attribute>` attribute, there is no need to provide
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		5. The indices of "AXISNAME" in the :ref:`axes </NXdata@axes-attribute>` attribute must be a subset of
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		6. The shape of an :ref:`AXISNAME </NXdata/AXISNAME-field>` field must correspond to the shape of the
		   :ref:`DATA </NXdata/DATA-field>` dimensions it spans. This means that for each dimension ``i`` in ``[0, AXISNAME.ndim)``
		   spanned by axis field :ref:`AXISNAME </NXdata/AXISNAME-field>`, the number of axis values ``AXISNAME.shape[i]``
		   along dimension ``i`` must be equal to the number of data points ``DATA.shape[AXISNAME_indices[i]]`` along dimension ``i``
		   or one more than the number of data points ``DATA.shape[AXISNAME_indices[i]]+1`` in case the
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field contains histogram bin edges along dimension ``i``.

		Highlight consequences of these constraints

		1. An :ref:`AXISNAME </NXdata/AXISNAME-field>` field can have more than one dimension and can therefore span
		   more than one :ref:`DATA </NXdata/DATA-field>` dimension. Conversely, one :ref:`DATA </NXdata/DATA-field>` dimension
		   can be spanned by more than one :ref:`AXISNAME </NXdata/AXISNAME-field>` field. The default axis name (if any)
		   of each dimension can be found in the :ref:`axes </NXdata@axes-attribute>` attribute.

		2. A list of all available axes is not provided directly. All strings in the :ref:`axes </NXdata@axes-attribute>` attribute
		   (excluding the “.” string) are axis field names. In addition the prefix of an attribute ending with the string "_indices" is also
		   an axis field name.

		.. admonition:: The following example covers all axes features supported (see :ref:`sphx_glr_classes_base_classes_data_plot_fscan2d.py`)

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x_set", "y_set", "."]  # default axes for all three dimensions
				  @x_encoder_indices = [0, 1]
				  @y_encoder_indices = 1           # or [1]
				  data: float[10,7,1024]
				  x_encoder: float[11,7]           # coordinates along the first and second dimensions
				  y_encoder: float[7]              # coordinates along the second dimension
				  x_set: float[10]                 # default coordinates along the first dimension
				  y_set: float[7]                  # default coordinates along the second dimension

		**Uncertainties:**

		.. admonition:: Defined by

			* :ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields

		Standard deviations on data values as well as coordinates can be provided by
		:ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields where ``FIELDNAME`` is the name of a
		:ref:`DATA </NXdata/DATA-field>` field or an :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		.. admonition:: An example of uncertainties on the signal, auxiliary signals and axis coordinates

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  @axes = ["x", ".", "z"]
				  data1: float[10,20,30]
				  data2: float[10,20,30]
				  data3: float[10,20,30]
				  x: float[10]
				  z: float[30]
				  data1_errors: float[10,20,30]
				  data2_errors: float[10,20,30]
				  data3_errors: float[10,20,30]
				  x_errors: float[10]
				  z_errors: float[30]

	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/transmission_correction/transmission_function@NX_class)
DEBUG - value: NXdata 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function
NXcalibration.nxdl.xml:/DATA
NXprocess.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/transmission_correction/transmission_function@axes)
DEBUG - value: ['kinetic_energy'] 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function
NXcalibration.nxdl.xml:/DATA
NXprocess.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function@axes - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function/axes):
DEBUG - -> ['kinetic_energy']
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function/axes):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@axes - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/axes):
DEBUG - 
			.. index:: plotting

			The ``axes`` attribute is a list of strings which are the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			to be used as the default axis along every :ref:`DATA </NXdata/DATA-field>` dimension. As a result the length must
			be equal to the rank of the :ref:`DATA </NXdata/DATA-field>` fields. The string "." can be used for
			dimensions without a default axis.

			.. note::  When ``axes`` contains multiple strings, it must be saved as an actual array
				of strings and not a single comma separated string.
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/transmission_correction/transmission_function@signal)
DEBUG - value: relative_intensity 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function
NXcalibration.nxdl.xml:/DATA
NXprocess.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function@signal - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function/signal):
DEBUG - -> relative_intensity
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function/signal):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@signal - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/signal):
DEBUG - 
			.. index:: find the default plottable data
			.. index:: plotting
			.. index:: signal attribute value
			
			The value is the :ref:`name <validItemName>` of the signal that contains
			the default plottable data. This field or link *must* exist and be a direct child
			of this NXdata group.
			
			It is recommended (as of NIAC2014) to use this attribute
			rather than adding a signal attribute to the field.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
		
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/transmission_correction/transmission_function/kinetic_energy): <HDF5 dataset "kinetic_energy": shape (2531,), type "<f8">
DEBUG - value: [1158.61 1158.71 1158.81 ... 1411.41 1411.51 1411.61] 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/transmission_correction/transmission_function/kinetic_energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - NXdata.nxdl.xml:/AXISNAME@units - [NX_CHAR]
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME/units):
DEBUG - 
				Unit in which the coordinate values are expressed.
				See the section :ref:`Design-Units` for more information.
			
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/transmission_correction/transmission_function/relative_intensity): <HDF5 dataset "relative_intensity": shape (2531,), type "<f8">
DEBUG - value: [2.54567897 2.54556872 2.54545848 ... 2.30571545 2.30563353 2.30555162] 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/DATA
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - documentation (NXdata.nxdl.xml:/DATA):
DEBUG - 
			.. index:: plotting

			Data values to be used as the NeXus *plottable data*. As the upper case ``DATA``
			indicates, the names of the ``DATA`` fields can be chosen :ref:`freely <validItemName>`. The :ref:`signal attribute </NXdata@signal-attribute>`
			and :ref:`auxiliary_signals attribute</NXdata@auxiliary_signals-attribute>` can be used to find all datasets in the ``NXdata``
			that contain data values.

			The maximum rank is ``32`` for compatibility with backend file formats.
		
DEBUG - ===== GROUP (//Au_in_25mBar_O2__Au4f/user [NXxps::/NXentry/NXuser]): <HDF5 group "/Au_in_25mBar_O2__Au4f/user" (5 members)>
DEBUG - classpath: ['NXentry', 'NXuser']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/USER
NXentry.nxdl.xml:/USER
NXuser.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/USER):
DEBUG - 
                Contact information of at least the user of the instrument or the investigator
                who performed this experiment. Adding multiple users if relevant is recommended.
            
DEBUG - documentation (NXentry.nxdl.xml:/USER):
DEBUG - 
DEBUG - documentation (NXuser.nxdl.xml:):
DEBUG - 
		Contact information for a user.  
		
		The format allows more 
		than one user with the same affiliation and contact information, 
		but a second :ref:`NXuser` group should be used if they have different 
		affiliations, etc.
	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/user@NX_class)
DEBUG - value: NXuser 
DEBUG - classpath: ['NXentry', 'NXuser']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/USER
NXentry.nxdl.xml:/USER
NXuser.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/user/address): <HDF5 dataset "address": shape (), type "|O">
DEBUG - value: Muelheim an der Ruhr 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXuser.nxdl.xml:/address
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXuser.nxdl.xml:/address):
DEBUG - Address of user
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/user/affiliation): <HDF5 dataset "affiliation": shape (), type "|O">
DEBUG - value: Max Planck Institute for Chemical Energy Conversion 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/USER/affiliation
NXuser.nxdl.xml:/affiliation
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/USER/affiliation):
DEBUG - 
                    Name of the affiliation of the user at the time when the experiment was
                    performed.
                
DEBUG - documentation (NXuser.nxdl.xml:/affiliation):
DEBUG - Affiliation of user
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/user/email): <HDF5 dataset "email": shape (), type "|O">
DEBUG - value: lukas.pielsticker@cec.mpg.de 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXuser.nxdl.xml:/email
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXuser.nxdl.xml:/email):
DEBUG - Email of user
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/user/identifier_orcid): <HDF5 dataset "identifier_orcid": shape (), type "|O">
DEBUG - value: 0000-0001-9361-8333 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXobject.nxdl.xml:/identifierNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXobject.nxdl.xml:/identifierNAME):
DEBUG - 
			An identifier for a (persistent) resource.

			An identifier, provided by some authority, that has been assigned to an
			object described by this ``NXobject``. To be useful, the identifier
			must not be reassigned to a different real-world object. It is typical for
			there to be some mechanism to resolve an identifier, obtaining metadata
			about the object. Identifiers for which some guarantees exist regarding
			this resolution process are called persistent identifiers.
			Persistent identifiers are also known as PIDs.
		
DEBUG - ===== ATTRS (//Au_in_25mBar_O2__Au4f/user/identifier_orcid@type)
DEBUG - value: ORCID 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXobject.nxdl.xml:/identifierNAME
DEBUG - NXobject.nxdl.xml:/identifierNAME@type - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXobject.nxdl.xml:/identifierNAME/type):
DEBUG - -> ARK
DEBUG - -> DOI
DEBUG - -> Hdl
DEBUG - -> IGSN
DEBUG - -> ISNI
DEBUG - -> ISSN
DEBUG - -> ISSN-L
DEBUG - -> ORCID
DEBUG - -> PURL
DEBUG - -> ROR
DEBUG - -> URL
DEBUG - -> URN
DEBUG - documentation (NXobject.nxdl.xml:/identifierNAME/type):
DEBUG - 
				The type of identifier used.

				It is recommended to use the most specific type when describing the identifier.
				
				For example, all IGSNs (see below) are DOIs and all DOIs are Handles; however, an IGSN should have type IGSN (and not DOI or Hdl).
				Similarly, an ARK, Purl, ORCID and ROR identifiers should have their corresponding types and should not use the more generic URL identifier.
			
DEBUG - ===== FIELD (//Au_in_25mBar_O2__Au4f/user/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Lukas Pielsticker 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/USER/name
NXuser.nxdl.xml:/name
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/USER/name):
DEBUG - 
                    Name of the user.
                
DEBUG - documentation (NXuser.nxdl.xml:/name):
DEBUG - Name of user responsible for this entry
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f [NXxps::/NXentry]): <HDF5 group "/Au_in_vacuum__Au4f" (16 members)>
DEBUG - classpath: ['NXentry']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY
NXmpes.nxdl.xml:/ENTRY
NXentry.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY):
DEBUG - 
DEBUG - documentation (NXentry.nxdl.xml:):
DEBUG - 
		(**required**) :ref:`NXentry` describes the measurement.

		The top-level NeXus group which contains all the data and associated
		information that comprise a single measurement.
		It is mandatory that there is at least one
		group of this type in the NeXus file.	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f@NX_class)
DEBUG - value: NXentry 
DEBUG - classpath: ['NXentry']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY
NXmpes.nxdl.xml:/ENTRY
NXentry.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f@default)
DEBUG - value: data 
DEBUG - classpath: ['NXentry']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY
NXmpes.nxdl.xml:/ENTRY
NXentry.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXxps.nxdl.xml:/ENTRY@default - [NX_CHAR]
DEBUG - NXmpes.nxdl.xml:/ENTRY@default - [NX_CHAR]
DEBUG - NXentry.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXentry.nxdl.xml:/default):
DEBUG - 
			.. index:: find the default plottable data
			.. index:: plotting
			.. index:: default attribute value

			Declares which :ref:`NXdata` group contains the data
			to be shown by default.
			It is used to resolve ambiguity when
			one :ref:`NXdata` group exists.
			The value :ref:`names <validItemName>` a child group.  If that group
			itself has a ``default`` attribute, continue this chain until an
			:ref:`NXdata` group is reached.

			For more information about how NeXus identifies the default
			plottable data, see the
			:ref:`Find Plottable Data, v3 <Find-Plottable-Data-v3>`
			section.
		
DEBUG - NXobject.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXobject.nxdl.xml:/default):
DEBUG - 
			.. index:: plotting

			Declares which child group contains a path leading
			to a :ref:`NXdata` group or a group using a base class
			extending :ref:`NXdata`.

			It is recommended (as of NIAC2014) to use this attribute
			to help define the path to the default dataset to be plotted.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/data [NXxps::/NXentry/NXdata]): <HDF5 group "/Au_in_vacuum__Au4f/data" (7 members)>
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/DATA
NXmpes.nxdl.xml:/ENTRY/DATA
NXentry.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/DATA):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/DATA):
DEBUG - 
                The NXdata group containing a view on the measured data.

                This NXdata group contains a collection of the main relevant fields (axes).
                Axes should be named according to the conventions defined below. Note that this
                list is a glossary with explicitly named axis names, which is only intended to cover
                the most common measurement axes and is therefore not complete. It is possible to add
                axes with other names at any time.

                In NXmpes, it is recommended to provide an energy axis.
            
DEBUG - documentation (NXentry.nxdl.xml:/DATA):
DEBUG - 
			The data group

			.. note:: Before the NIAC2016 meeting [#]_, at least one
			   :ref:`NXdata` group was required in each :ref:`NXentry` group.
			   At the NIAC2016 meeting, it was decided to make :ref:`NXdata`
			   an optional group in :ref:`NXentry` groups for data files that
			   do not use an application definition.
			   It is recommended strongly that all NeXus data files provide
			   a NXdata group.
			   It is permissible to omit the NXdata group only when
			   defining the default plot is not practical or possible
			   from the available data.

			   For example, neutron event data may not have anything that
			   makes a useful plot without extensive processing.

			   Certain application definitions override this decision and
			   require an :ref:`NXdata` group
			   in the :ref:`NXentry` group.  The ``minOccurs=0`` attribute
			   in the application definition will indicate the
			   :ref:`NXdata` group
			   is optional, otherwise, it is required.

			   .. [#] NIAC2016:
			      https://www.nexusformat.org/NIAC2016.html,
			      https://github.com/nexusformat/NIAC/issues/16

		
DEBUG - documentation (NXobject.nxdl.xml:/DATA):
DEBUG - 
DEBUG - documentation (NXdata.nxdl.xml:):
DEBUG - 
		The :ref:`NXdata` class is designed to encapsulate all the information required for a set of data to be plotted.
		NXdata groups contain plottable data (also referred to as *signals* or *dependent variables*) and their
		associated axis coordinates (also referred to as *axes* or *independent variables*).

		The actual names of the :ref:`DATA </NXdata/DATA-field>` and :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
		can be chosen :ref:`freely <validItemName>`, as indicated by the upper case (this is a common convention in all NeXus classes).
		
		.. note:: ``NXdata`` provides data and coordinates to be plotted but
			does not describe how the data is to be plotted or even the dimensionality of the plot.
			https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute

		.. include:: data/index.rst
		   :start-line: 1

		.. admonition:: Example of a simple curve plot

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x"]
				  data: float[100]
				  x: float[100]

		More complex cases are supported

		* histogram data: ``x`` has one more value than ``data``.
		* alternative axes: instead of a single ``x`` axis you can have several axes, one of which being the default.
		* signals with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` along each dimension.
		* axes with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` also being 2D, providing a
		  unique ``(x, y)`` coordinate for each ``data`` point.

		**Signals:**

		.. index:: plotting

		.. admonition:: Defined by

			* :ref:`DATA </NXdata/DATA-field>` fields
			* the :ref:`signal </NXdata@signal-attribute>` attribute
			* the :ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute

		The :ref:`DATA </NXdata/DATA-field>` fields contain the signal values to be plotted. The name of the field
		to be used as the *default plot signal* is provided by the :ref:`signal </NXdata@signal-attribute>` attribute.
		The names of the fields to be used as *secondary plot signals* are provided by the
		:ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute.

		.. admonition:: An example with three signals, one of which being the default

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  data1: float[10,20,30]  # the default signal
				  data2: float[10,20,30]
				  data3: float[10,20,30]

		**Axes:**

		.. index:: axes (attribute)
		.. index:: coordinates

		.. admonition:: Defined by

			* :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			* the :ref:`axes </NXdata@axes-attribute>` attribute
			* :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes

		The fields and attributes are defined as follows

		1. The :ref:`AXISNAME </NXdata/AXISNAME-field>` fields contain the axis coordinates associated with the signal values.

		2. The :ref:`axes </NXdata@axes-attribute>` attribute provides the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   fields to be used as the `default axis` for each dimension of the :ref:`DATA </NXdata/DATA-field>` fields.

		3. The :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes describe the :ref:`DATA </NXdata/DATA-field>`
		   dimensions spanned by the corresponding :ref:`AXISNAME </NXdata/AXISNAME-field>` fields.

		The fields and attributes have the following constraints

		1. The length of the :ref:`axes </NXdata@axes-attribute>` attribute must be equal to the rank of the :ref:`DATA </NXdata/DATA-field>`
		   fields. When a particular dimension has no default axis, the string “.” is used in that position.

		2. The number of values in :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` must be equal to the rank of the corresponding
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		3. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is missing for a given
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field, the positions of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   field name in the :ref:`axes </NXdata@axes-attribute>` attribute are used.

		4. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is the same as the indices of "AXISNAME" in the
		   :ref:`axes </NXdata@axes-attribute>` attribute, there is no need to provide
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		5. The indices of "AXISNAME" in the :ref:`axes </NXdata@axes-attribute>` attribute must be a subset of
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		6. The shape of an :ref:`AXISNAME </NXdata/AXISNAME-field>` field must correspond to the shape of the
		   :ref:`DATA </NXdata/DATA-field>` dimensions it spans. This means that for each dimension ``i`` in ``[0, AXISNAME.ndim)``
		   spanned by axis field :ref:`AXISNAME </NXdata/AXISNAME-field>`, the number of axis values ``AXISNAME.shape[i]``
		   along dimension ``i`` must be equal to the number of data points ``DATA.shape[AXISNAME_indices[i]]`` along dimension ``i``
		   or one more than the number of data points ``DATA.shape[AXISNAME_indices[i]]+1`` in case the
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field contains histogram bin edges along dimension ``i``.

		Highlight consequences of these constraints

		1. An :ref:`AXISNAME </NXdata/AXISNAME-field>` field can have more than one dimension and can therefore span
		   more than one :ref:`DATA </NXdata/DATA-field>` dimension. Conversely, one :ref:`DATA </NXdata/DATA-field>` dimension
		   can be spanned by more than one :ref:`AXISNAME </NXdata/AXISNAME-field>` field. The default axis name (if any)
		   of each dimension can be found in the :ref:`axes </NXdata@axes-attribute>` attribute.

		2. A list of all available axes is not provided directly. All strings in the :ref:`axes </NXdata@axes-attribute>` attribute
		   (excluding the “.” string) are axis field names. In addition the prefix of an attribute ending with the string "_indices" is also
		   an axis field name.

		.. admonition:: The following example covers all axes features supported (see :ref:`sphx_glr_classes_base_classes_data_plot_fscan2d.py`)

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x_set", "y_set", "."]  # default axes for all three dimensions
				  @x_encoder_indices = [0, 1]
				  @y_encoder_indices = 1           # or [1]
				  data: float[10,7,1024]
				  x_encoder: float[11,7]           # coordinates along the first and second dimensions
				  y_encoder: float[7]              # coordinates along the second dimension
				  x_set: float[10]                 # default coordinates along the first dimension
				  y_set: float[7]                  # default coordinates along the second dimension

		**Uncertainties:**

		.. admonition:: Defined by

			* :ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields

		Standard deviations on data values as well as coordinates can be provided by
		:ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields where ``FIELDNAME`` is the name of a
		:ref:`DATA </NXdata/DATA-field>` field or an :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		.. admonition:: An example of uncertainties on the signal, auxiliary signals and axis coordinates

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  @axes = ["x", ".", "z"]
				  data1: float[10,20,30]
				  data2: float[10,20,30]
				  data3: float[10,20,30]
				  x: float[10]
				  z: float[30]
				  data1_errors: float[10,20,30]
				  data2_errors: float[10,20,30]
				  data3_errors: float[10,20,30]
				  x_errors: float[10]
				  z_errors: float[30]

	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/data@NX_class)
DEBUG - value: NXdata 
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/DATA
NXmpes.nxdl.xml:/ENTRY/DATA
NXentry.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/data@axes)
DEBUG - value: ['energy'] 
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/DATA
NXmpes.nxdl.xml:/ENTRY/DATA
NXentry.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXdata.nxdl.xml:@axes - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/axes):
DEBUG - 
			.. index:: plotting

			The ``axes`` attribute is a list of strings which are the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			to be used as the default axis along every :ref:`DATA </NXdata/DATA-field>` dimension. As a result the length must
			be equal to the rank of the :ref:`DATA </NXdata/DATA-field>` fields. The string "." can be used for
			dimensions without a default axis.

			.. note::  When ``axes`` contains multiple strings, it must be saved as an actual array
				of strings and not a single comma separated string.
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/data@energy_indices)
DEBUG - value: 0 
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/DATA
NXmpes.nxdl.xml:/ENTRY/DATA
NXentry.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXxps.nxdl.xml:/ENTRY/DATA@energy_indices - [NX_INT]
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/DATA/energy_indices):
DEBUG - 
DEBUG - NXmpes.nxdl.xml:/ENTRY/DATA@energy_indices - [NX_INT]
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/DATA/energy_indices):
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/data@signal)
DEBUG - value: data 
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/DATA
NXmpes.nxdl.xml:/ENTRY/DATA
NXentry.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/DATA@signal - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/DATA/signal):
DEBUG - -> data
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/DATA/signal):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@signal - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/signal):
DEBUG - 
			.. index:: find the default plottable data
			.. index:: plotting
			.. index:: signal attribute value
			
			The value is the :ref:`name <validItemName>` of the signal that contains
			the default plottable data. This field or link *must* exist and be a direct child
			of this NXdata group.
			
			It is recommended (as of NIAC2014) to use this attribute
			rather than adding a signal attribute to the field.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/data/cycle1_scan1): <HDF5 dataset "cycle1_scan1": shape (1001,), type "<f8">
DEBUG - value: [179.60306  194.82036  152.67594  ... 107.359472  86.70928   85.1947  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/data/cycle1_scan2): <HDF5 dataset "cycle1_scan2": shape (1001,), type "<f8">
DEBUG - value: [207.97648 152.34938 128.66128 ...  76.87814  79.34886  63.0867 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/data/cycle1_scan3): <HDF5 dataset "cycle1_scan3": shape (1001,), type "<f8">
DEBUG - value: [120.71816  156.47254  163.7841   ...  73.32446   74.596088  49.6246  ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/data/cycle2_scan1): <HDF5 dataset "cycle2_scan1": shape (1001,), type "<f8">
DEBUG - value: [140.61582 258.68226 283.51536 ...  37.03122  65.11154  62.46824] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/data/data): <HDF5 dataset "data": shape (1001,), type "<f8">
DEBUG - value: [162.22838  190.581135 182.15917  ...  73.648323  76.441442  65.09356 ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/DATA
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - documentation (NXdata.nxdl.xml:/DATA):
DEBUG - 
			.. index:: plotting

			Data values to be used as the NeXus *plottable data*. As the upper case ``DATA``
			indicates, the names of the ``DATA`` fields can be chosen :ref:`freely <validItemName>`. The :ref:`signal attribute </NXdata@signal-attribute>`
			and :ref:`auxiliary_signals attribute</NXdata@auxiliary_signals-attribute>` can be used to find all datasets in the ``NXdata``
			that contain data values.

			The maximum rank is ``32`` for compatibility with backend file formats.
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/data/data@units)
DEBUG - value: counts_per_second 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/DATA
DEBUG - NXdata.nxdl.xml:/DATA@units - REQUIRED, but undefined unit category
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/data/data_errors): <HDF5 dataset "data_errors": shape (1001,), type "<f8">
DEBUG - value: [33.85620059 42.66379495 59.8790563  ... 24.9388773   7.83667001 ...
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/FIELDNAME_errors
NXobject.nxdl.xml:/FIELDNAME_errors
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/FIELDNAME_errors):
DEBUG - 
			"Errors" (meaning *uncertainties* or *standard deviations*)
			associated with any field named ``FIELDNAME`` in this ``NXdata``
			group. This can be a :ref:`DATA </NXdata/DATA-field>` field
			(signal or auxiliary signal) or a :ref:`AXISNAME </NXdata/AXISNAME-field>`
			field (axis).

			The dimensions of the ``FIELDNAME_errors`` field must match
			the dimensions of the corresponding ``FIELDNAME`` field.
		
DEBUG - documentation (NXobject.nxdl.xml:/FIELDNAME_errors):
DEBUG - 
            Uncertainties of FIELDNAME values.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/data/energy): <HDF5 dataset "energy": shape (1001,), type "<f8">
DEBUG - value: [175.  174.9 174.8 ...  75.2  75.1  75. ] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/data/energy@type)
DEBUG - value: binding 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - @type - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/data/energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - NXdata.nxdl.xml:/AXISNAME@units - [NX_CHAR]
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME/units):
DEBUG - 
				Unit in which the coordinate values are expressed.
				See the section :ref:`Design-Units` for more information.
			
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/definition): <HDF5 dataset "definition": shape (), type "|O">
DEBUG - value: NXxps 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/definition
NXmpes.nxdl.xml:/ENTRY/definition
NXentry.nxdl.xml:/definition
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/definition):
DEBUG - -> NXxps
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/definition):
DEBUG - -> NXmpes
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/definition):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/definition):
DEBUG - 
DEBUG - documentation (NXentry.nxdl.xml:/definition):
DEBUG - 
			(alternate use: see same field in :ref:`NXsubentry` for preferred)
			
			Official NeXus NXDL schema to which this entry conforms which must be
			the name of the NXDL file (case sensitive without the file extension)
			that the NXDL schema is defined in. 
			
			For example the ``definition`` field for a file that conformed to the 
			*NXarpes.nxdl.xml* definition must contain the string **NXarpes**.
			
			This field is provided so that :ref:`NXentry` can be the overlay position
			in a NeXus data file for an application definition and its
			set of groups, fields, and attributes.

			*It is advised* to use :ref:`NXsubentry`, instead, as the overlay position.
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/definition@URL)
DEBUG - value: https://github.com/FAIRmat-NFDI/nexus_definitions/blob/c0f643ac 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/definition
NXmpes.nxdl.xml:/ENTRY/definition
NXentry.nxdl.xml:/definition
DEBUG - NXentry.nxdl.xml:/definition@URL - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/definition/URL):
DEBUG - URL of NXDL file
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/definition@version)
DEBUG - value: v2024.02.post1.dev1989+gc0f643ac 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/definition
NXmpes.nxdl.xml:/ENTRY/definition
NXentry.nxdl.xml:/definition
DEBUG - NXmpes.nxdl.xml:/ENTRY/definition@version - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/definition/version):
DEBUG - 
DEBUG - NXentry.nxdl.xml:/definition@version - [NX_CHAR]
DEBUG - documentation (NXentry.nxdl.xml:/definition/version):
DEBUG - NXDL version number
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/end_time): <HDF5 dataset "end_time": shape (), type "|O">
DEBUG - value: 2022-04-08T14:52:26.040000+00:00 
DEBUG - classpath: ['NXentry', 'NX_DATE_TIME']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/end_time
NXentry.nxdl.xml:/end_time
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/end_time):
DEBUG - 
                Datetime of the end of the measurement.
                Should be a ISO8601 date/time stamp. It is recommended to add an explicit time zone,
                otherwise the local time zone is assumed per ISO8601.
            
DEBUG - documentation (NXentry.nxdl.xml:/end_time):
DEBUG - Ending time of measurement
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/energy_axis_calibration [NXxps::/NXentry/NXcalibration]): <HDF5 group "/Au_in_vacuum__Au4f/energy_axis_calibration" (3 members)>
DEBUG - classpath: ['NXentry', 'NXcalibration']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration
NXcalibration.nxdl.xml:
NXprocess.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration):
DEBUG - 
                Calibration event on the energy axis.
                
                For XPS, the calibration should ideally be performed according to
                `ISO 15472:2010`_ specification.
                
                .. _ISO 15472:2010: https://www.iso.org/standard/74811.html
            
DEBUG - documentation (NXcalibration.nxdl.xml:):
DEBUG - 
        Subclass of NXprocess to describe post-processing calibrations.
    
DEBUG - documentation (NXprocess.nxdl.xml:):
DEBUG - 
        The :ref:`NXprocess` class describes an operation used to
        process data as part of an analysis workflow, providing
        information such as the software used, the date of the
        operation, the input parameters, and the resulting data. 
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/energy_axis_calibration@NX_class)
DEBUG - value: NXcalibration 
DEBUG - classpath: ['NXentry', 'NXcalibration']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration
NXcalibration.nxdl.xml:
NXprocess.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/energy_axis_calibration/calibrated_axis): <HDF5 dataset "calibrated_axis": shape (1001,), type "<f8">
DEBUG - value: [175.  174.9 174.8 ...  75.2  75.1  75. ] 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/calibrated_axis
NXcalibration.nxdl.xml:/calibrated_axis
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/calibrated_axis):
DEBUG - 
                    This is the calibrated energy axis to be used for data plotting.
                
DEBUG - documentation (NXcalibration.nxdl.xml:/calibrated_axis):
DEBUG - 
            An array representing the axis after calibration, matching the data length
        
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/energy_axis_calibration/calibrated_axis@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/calibrated_axis
NXcalibration.nxdl.xml:/calibrated_axis
DEBUG - NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/calibrated_axis@units [NX_ENERGY]
DEBUG - NXcalibration.nxdl.xml:/calibrated_axis@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/energy_axis_calibration/calibration_object [NXxps::/NXentry/NXcalibration/NXnote]): <HDF5 group "/Au_in_vacuum__Au4f/energy_axis_calibration/calibration_object" (2 members)>
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote']
DEBUG - classes:
NXcalibration.nxdl.xml:/calibration_object
NXprocess.nxdl.xml:/NOTE
NXobject.nxdl.xml:/NOTE
NXnote.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcalibration.nxdl.xml:/calibration_object):
DEBUG - 
            A file serialization of a calibration which may not be publicly available (externally from the NeXus file).
            
            This metadata can be a documentation of the source (file) or database (entry) from which pieces
            of information have been extracted for consumption (e.g. in a research data management system (RDMS)).
            It is also possible to include the actual file by using the `file` field.
            
            The axis values may be copied or linked in the appropriate NXcalibration fields for reference.
        
DEBUG - documentation (NXprocess.nxdl.xml:/NOTE):
DEBUG - 
            The note will contain information about how the data was
            processed or anything about the data provenance. The
            contents of the note can be anything that the processing
            code can understand, or simple text.
            
            The name will be numbered to allow for ordering of steps.
        
DEBUG - documentation (NXobject.nxdl.xml:/NOTE):
DEBUG - 
DEBUG - documentation (NXnote.nxdl.xml:):
DEBUG - 
		Any additional freeform information not covered by the other base classes.
		
		This class can be used to store additional information in a 
		NeXus file e.g. pictures, movies, audio, additional text logs
	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/energy_axis_calibration/calibration_object@NX_class)
DEBUG - value: NXnote 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote']
DEBUG - classes:
NXcalibration.nxdl.xml:/calibration_object
NXprocess.nxdl.xml:/NOTE
NXobject.nxdl.xml:/NOTE
NXnote.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/energy_axis_calibration/calibration_object/file_name): <HDF5 dataset "file_name": shape (), type "|O">
DEBUG - value: 20200817-FAT-AR22-7x20c-Ep10-20-30-Au4f.calib1d 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote', 'NX_CHAR']
DEBUG - classes:
NXnote.nxdl.xml:/file_name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXnote.nxdl.xml:/file_name):
DEBUG - Name of original file name if note was read from an external source
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/energy_axis_calibration/calibration_object/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: file 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote', 'NX_CHAR']
DEBUG - classes:
NXnote.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXnote.nxdl.xml:/type):
DEBUG - Mime content type of note data field e.g. image/jpeg, text/plain, text/html
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/energy_axis_calibration/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: energy 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/physical_quantity
NXcalibration.nxdl.xml:/physical_quantity
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/physical_quantity):
DEBUG - -> energy
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/energy_axis_calibration/physical_quantity):
DEBUG - 
DEBUG - documentation (NXcalibration.nxdl.xml:/physical_quantity):
DEBUG - 
            The physical quantity of the calibration, e.g.,
            energy, momentum, time, etc.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/experiment_facility): <HDF5 dataset "experiment_facility": shape (), type "|O">
DEBUG - value: Surface and Interface Analysis Group 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXentry.nxdl.xml:/experiment_facility
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/experiment_facility):
DEBUG - 
             Name of the experimental facility
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/experiment_institution): <HDF5 dataset "experiment_institution": shape (), type "|O">
DEBUG - value: Max Planck Institute for Chemical Energy Conversion 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXentry.nxdl.xml:/experiment_institution
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/experiment_institution):
DEBUG - 
             Name of the institution hosting the facility
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/experiment_laboratory): <HDF5 dataset "experiment_laboratory": shape (), type "|O">
DEBUG - value: Near-Ambient Pressure XPS Lab 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXentry.nxdl.xml:/experiment_laboratory
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/experiment_laboratory):
DEBUG - 
             Name of the laboratory or beamline
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/identifier_entry): <HDF5 dataset "identifier_entry": shape (), type "|O">
DEBUG - value: EX439 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXentry.nxdl.xml:/identifier_entry
NXobject.nxdl.xml:/identifierNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/identifier_entry):
DEBUG - unique identifier for the measurement, defined by the facility.
DEBUG - documentation (NXobject.nxdl.xml:/identifierNAME):
DEBUG - 
			An identifier for a (persistent) resource.

			An identifier, provided by some authority, that has been assigned to an
			object described by this ``NXobject``. To be useful, the identifier
			must not be reassigned to a different real-world object. It is typical for
			there to be some mechanism to resolve an identifier, obtaining metadata
			about the object. Identifiers for which some guarantees exist regarding
			this resolution process are called persistent identifiers.
			Persistent identifiers are also known as PIDs.
		
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument [NXxps::/NXentry/NXinstrument]): <HDF5 group "/Au_in_vacuum__Au4f/instrument" (8 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT
NXentry.nxdl.xml:/INSTRUMENT
NXinstrument.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT):
DEBUG - 
                Description of the XPS spectrometer and its individual parts.
                
                This concept is related to term `12.58`_ of the ISO 18115-1:2023 standard.
                
                .. _12.58: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.58
            
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT):
DEBUG - 
                Description of the photoemission spectrometer and its individual parts.
                
                This concept is related to term `12.58`_ of the ISO 18115-1:2023 standard.
                
                .. _12.58: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.58
            
DEBUG - documentation (NXentry.nxdl.xml:/INSTRUMENT):
DEBUG - 
DEBUG - documentation (NXinstrument.nxdl.xml:):
DEBUG - 
		Collection of the components of the instrument or beamline.
		
		Template of instrument descriptions comprising various beamline components. 
		Each component will also be a NeXus group defined by its distance from the 
		sample. Negative distances represent beamline components that are before the 
		sample while positive distances represent components that are after the sample. 
		This device allows the unique identification of beamline components in a way 
		that is valid for both reactor and pulsed instrumentation.
	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument@NX_class)
DEBUG - value: NXinstrument 
DEBUG - classpath: ['NXentry', 'NXinstrument']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT
NXentry.nxdl.xml:/INSTRUMENT
NXinstrument.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument@default)
DEBUG - value: electronanalyzer 
DEBUG - classpath: ['NXentry', 'NXinstrument']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT
NXentry.nxdl.xml:/INSTRUMENT
NXinstrument.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT@default - [NX_CHAR]
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT@default - [NX_CHAR]
DEBUG - NXentry.nxdl.xml:/INSTRUMENT@default - [NX_CHAR]
DEBUG - NXinstrument.nxdl.xml:@default - [NX_CHAR]
DEBUG - NXobject.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXobject.nxdl.xml:/default):
DEBUG - 
			.. index:: plotting

			Declares which child group contains a path leading
			to a :ref:`NXdata` group or a group using a base class
			extending :ref:`NXdata`.

			It is recommended (as of NIAC2014) to use this attribute
			to help define the path to the default dataset to be plotted.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/beam_probe [NXxps::/NXentry/NXinstrument/NXbeam]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/beam_probe" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe
NXinstrument.nxdl.xml:/BEAM
NXbeam.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe):
DEBUG - 
                    Properties of the probe beam at a given location.
                    
                    This is the beam that is used to facilitate the photoemission during MPES
                    experiments.
                
DEBUG - documentation (NXinstrument.nxdl.xml:/BEAM):
DEBUG - 
DEBUG - documentation (NXbeam.nxdl.xml:):
DEBUG - 
        Properties of the neutron or X-ray beam at a given location. 

        This group is intended to be referenced
        by beamline component groups within the :ref:`NXinstrument` group or by the :ref:`NXsample` group. This group is
        especially valuable in storing the results of instrument simulations in which it is useful
        to specify the beam profile, time distribution etc. at each beamline component. Otherwise,
        its most likely use is in the :ref:`NXsample` group in which it defines the results of the neutron
        scattering by the sample, e.g., energy transfer, polarizations. Finally, There are cases where the beam is
        considered as a beamline component and this group may be defined as a subgroup directly inside
        :ref:`NXinstrument`, in which case it is recommended that the position of the beam is specified by an 
        :ref:`NXtransformations` group, unless the beam is at the origin (which is the sample).

        Note that ``incident_wavelength``, ``incident_energy``, and related fields can be a scalar values or arrays, depending on the use case.
        To support these use cases, the explicit dimensionality of these fields is not specified, but it can be inferred
        by the presense of and shape of accompanying fields, such as incident_wavelength_weights for a polychromatic beam.
        
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/beam_probe@NX_class)
DEBUG - value: NXbeam 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe
NXinstrument.nxdl.xml:/BEAM
NXbeam.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/beam_probe/associated_source): <HDF5 dataset "associated_source": shape (), type "|O">
DEBUG - value: /entry/instrument/source_probe 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/associated_source
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/associated_source):
DEBUG - 
                        The source that emitted this beam.
                        Should be named with the same suffix, e.g.,
                        for ``beam_probe`` it should refer to ``source_probe``.
                        This should be specified if an associated source exists.
                        
                        Example:
                          * /entry/instrument/beam_probe/associated_source = /entry/instrument/source_probe
                    
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/beam_probe/distance): <HDF5 dataset "distance": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/distance
NXbeam.nxdl.xml:/distance
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/distance):
DEBUG - 
                        Distance between the point where the current NXbeam instance is evaluating
                        the beam properties and the point where the beam interacts with the sample.
                        For photoemission, the latter is the point where the the centre of the beam
                        touches the sample surface.
                    
DEBUG - documentation (NXbeam.nxdl.xml:/distance):
DEBUG - Distance from sample. Note, it is recommended to use NXtransformations instead.
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/beam_probe/distance@units)
DEBUG - value: mm 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/distance
NXbeam.nxdl.xml:/distance
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/distance@units [NX_LENGTH]
DEBUG - NXbeam.nxdl.xml:/distance@units [NX_LENGTH]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/beam_probe/incident_energy): <HDF5 dataset "incident_energy": shape (), type "<f8">
DEBUG - value: 1486.61 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/incident_energy
NXbeam.nxdl.xml:/incident_energy
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/incident_energy):
DEBUG - 
DEBUG - documentation (NXbeam.nxdl.xml:/incident_energy):
DEBUG - 
            Energy carried by each particle of the beam on entering the given location.

            Several use cases are permitted, depending on the presence or absence of
            other ``incident_energy_X`` fields. The usage should follow that of
            :ref:`incident_wavelength </NXbeam/incident_wavelength-field>`.
       
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/beam_probe/incident_energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/incident_energy
NXbeam.nxdl.xml:/incident_energy
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beam_probe/incident_energy@units [NX_ENERGY]
DEBUG - NXbeam.nxdl.xml:/incident_energy@units [NX_ENERGY]
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/device_information [NXxps::/NXentry/NXinstrument/NXfabrication]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information
NXinstrument.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information):
DEBUG - 
DEBUG - documentation (NXinstrument.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information
NXinstrument.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: Custom NAP-XPS instrument 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: SPECS GmbH 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer [NXxps::/NXentry/NXinstrument/NXelectronanalyzer]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer" (11 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER
NXelectronanalyzer.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:):
DEBUG - 
        Basic class for describing an electron analyzer.
        
        This concept is related to term `12.59`_ of the ISO 18115-1:2023 standard.
        
        .. _12.59: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.59
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer@NX_class)
DEBUG - value: NXelectronanalyzer 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER
NXelectronanalyzer.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer@default)
DEBUG - value: detector 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER
NXelectronanalyzer.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER@default - [NX_CHAR]
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER@default - [NX_CHAR]
DEBUG - NXelectronanalyzer.nxdl.xml:@default - [NX_CHAR]
DEBUG - NXcomponent.nxdl.xml:@default - [NX_CHAR]
DEBUG - NXobject.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXobject.nxdl.xml:/default):
DEBUG - 
			.. index:: plotting

			Declares which child group contains a path leading
			to a :ref:`NXdata` group or a group using a base class
			extending :ref:`NXdata`.

			It is recommended (as of NIAC2014) to use this attribute
			to help define the path to the default dataset to be plotted.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn" (10 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN
NXelectronanalyzer.nxdl.xml:/COLLECTIONCOLUMN
NXcollectioncolumn.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/COLLECTIONCOLUMN):
DEBUG - 
            Describes the electron collection (spatial and momentum imaging) column
        
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:):
DEBUG - 
        Electron collection column of an electron analyzer.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn@NX_class)
DEBUG - value: NXcollectioncolumn 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN
NXelectronanalyzer.nxdl.xml:/COLLECTIONCOLUMN
NXcollectioncolumn.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/L1 [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXelectromagnetic_lens]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/L1" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS):
DEBUG - 
            Individual lenses in the collection column section
        
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:):
DEBUG - 
        Base class for an electro-magnetic lens or a compound lens.
        
        For :ref:`NXtransformations` the origin of the coordinate system is placed
        in the center of the lens its polepiece, pinhole, or another point of reference.
        The origin should be specified in the :ref:`NXtransformations`.
        
        For details of electro-magnetic lenses in the literature see e.g.
        
        * `L. Reimer: Scanning Electron Microscopy <https://doi.org/10.1007/978-3-540-38967-5>`_
        * `P. Hawkes: Magnetic Electron Lenses <https://link.springer.com/book/10.1007/978-3-642-81516-4>`_
        * `Y. Liao: Practical Electron Microscopy and Database <https://www.globalsino.com/EM/>`_
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/L1@NX_class)
DEBUG - value: NXelectromagnetic_lens 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/L1/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Lens 1 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens', 'NX_CHAR']
DEBUG - classes:
NXelectromagnetic_lens.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:/name):
DEBUG - 
            Name of the lens.
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/L2 [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXelectromagnetic_lens]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/L2" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS):
DEBUG - 
            Individual lenses in the collection column section
        
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:):
DEBUG - 
        Base class for an electro-magnetic lens or a compound lens.
        
        For :ref:`NXtransformations` the origin of the coordinate system is placed
        in the center of the lens its polepiece, pinhole, or another point of reference.
        The origin should be specified in the :ref:`NXtransformations`.
        
        For details of electro-magnetic lenses in the literature see e.g.
        
        * `L. Reimer: Scanning Electron Microscopy <https://doi.org/10.1007/978-3-540-38967-5>`_
        * `P. Hawkes: Magnetic Electron Lenses <https://link.springer.com/book/10.1007/978-3-642-81516-4>`_
        * `Y. Liao: Practical Electron Microscopy and Database <https://www.globalsino.com/EM/>`_
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/L2@NX_class)
DEBUG - value: NXelectromagnetic_lens 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/L2/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Lens 2 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens', 'NX_CHAR']
DEBUG - classes:
NXelectromagnetic_lens.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:/name):
DEBUG - 
            Name of the lens.
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/coil [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXelectromagnetic_lens]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/coil" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS):
DEBUG - 
            Individual lenses in the collection column section
        
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:):
DEBUG - 
        Base class for an electro-magnetic lens or a compound lens.
        
        For :ref:`NXtransformations` the origin of the coordinate system is placed
        in the center of the lens its polepiece, pinhole, or another point of reference.
        The origin should be specified in the :ref:`NXtransformations`.
        
        For details of electro-magnetic lenses in the literature see e.g.
        
        * `L. Reimer: Scanning Electron Microscopy <https://doi.org/10.1007/978-3-540-38967-5>`_
        * `P. Hawkes: Magnetic Electron Lenses <https://link.springer.com/book/10.1007/978-3-642-81516-4>`_
        * `Y. Liao: Practical Electron Microscopy and Database <https://www.globalsino.com/EM/>`_
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/coil@NX_class)
DEBUG - value: NXelectromagnetic_lens 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/coil/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Coil 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens', 'NX_CHAR']
DEBUG - classes:
NXelectromagnetic_lens.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:/name):
DEBUG - 
            Name of the lens.
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/device_information [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXfabrication]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information):
DEBUG - 
DEBUG - documentation (NXcomponent.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: PHOIBOS 150 NAP 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: SPECS GmbH 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/focus_displacement [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXelectromagnetic_lens]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/focus_displacement" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS):
DEBUG - 
            Individual lenses in the collection column section
        
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:):
DEBUG - 
        Base class for an electro-magnetic lens or a compound lens.
        
        For :ref:`NXtransformations` the origin of the coordinate system is placed
        in the center of the lens its polepiece, pinhole, or another point of reference.
        The origin should be specified in the :ref:`NXtransformations`.
        
        For details of electro-magnetic lenses in the literature see e.g.
        
        * `L. Reimer: Scanning Electron Microscopy <https://doi.org/10.1007/978-3-540-38967-5>`_
        * `P. Hawkes: Magnetic Electron Lenses <https://link.springer.com/book/10.1007/978-3-642-81516-4>`_
        * `Y. Liao: Practical Electron Microscopy and Database <https://www.globalsino.com/EM/>`_
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/focus_displacement@NX_class)
DEBUG - value: NXelectromagnetic_lens 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/focus_displacement/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Focus Displacement 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens', 'NX_CHAR']
DEBUG - classes:
NXelectromagnetic_lens.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:/name):
DEBUG - 
            Name of the lens.
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/iris [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXaperture]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/iris" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXaperture']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/iris
NXcollectioncolumn.nxdl.xml:/APERTURE
NXaperture.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/iris):
DEBUG - 
                            Size, position and shape of the iris inserted in the column.
                            
                            The iris is an aperture in the lens with a variable diameter which can reduce the number of
                            electrons entering the analyzer.
                            
                            To add additional or other slits use the APERTURE group of NXcollectioncolumn.
                        
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/APERTURE):
DEBUG - 
            The size and position of an aperture inserted in the column, e.g. field aperture
            or contrast aperture
        
DEBUG - documentation (NXaperture.nxdl.xml:):
DEBUG - 
      A beamline aperture.

      Note, the group was incorrectly documented as deprecated, but it is not and it is in common use.
      
      You can specify the geometry of the aperture using either NXoff_geometry or for simpler geometry shape and size.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/iris@NX_class)
DEBUG - value: NXaperture 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXaperture']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/iris
NXcollectioncolumn.nxdl.xml:/APERTURE
NXaperture.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/iris/size): <HDF5 dataset "size": shape (), type "<f8">
DEBUG - value: 60.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXaperture', 'NX_NUMBER']
DEBUG - classes:
NXaperture.nxdl.xml:/size
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXaperture.nxdl.xml:/size):
DEBUG - 
             The relevant dimension for the aperture, i.e. slit width, pinhole and iris
             diameter
        
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/iris/size@units)
DEBUG - value: mm 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXaperture', 'NX_NUMBER']
DEBUG - classes:
NXaperture.nxdl.xml:/size
DEBUG - NXaperture.nxdl.xml:/size@units [NX_LENGTH]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/lens_mode): <HDF5 dataset "lens_mode": shape (), type "|O">
DEBUG - value: AngleResolvedMode22 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/lens_mode
NXcollectioncolumn.nxdl.xml:/lens_mode
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/lens_mode):
DEBUG - 
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/lens_mode):
DEBUG - 
            Labelling of the lens setting in use.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_x [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXelectromagnetic_lens]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_x" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS):
DEBUG - 
            Individual lenses in the collection column section
        
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:):
DEBUG - 
        Base class for an electro-magnetic lens or a compound lens.
        
        For :ref:`NXtransformations` the origin of the coordinate system is placed
        in the center of the lens its polepiece, pinhole, or another point of reference.
        The origin should be specified in the :ref:`NXtransformations`.
        
        For details of electro-magnetic lenses in the literature see e.g.
        
        * `L. Reimer: Scanning Electron Microscopy <https://doi.org/10.1007/978-3-540-38967-5>`_
        * `P. Hawkes: Magnetic Electron Lenses <https://link.springer.com/book/10.1007/978-3-642-81516-4>`_
        * `Y. Liao: Practical Electron Microscopy and Database <https://www.globalsino.com/EM/>`_
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_x@NX_class)
DEBUG - value: NXelectromagnetic_lens 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_x/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Pre-Deflector X 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens', 'NX_CHAR']
DEBUG - classes:
NXelectromagnetic_lens.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:/name):
DEBUG - 
            Name of the lens.
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_y [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXcollectioncolumn/NXelectromagnetic_lens]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_y" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS):
DEBUG - 
            Individual lenses in the collection column section
        
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:):
DEBUG - 
        Base class for an electro-magnetic lens or a compound lens.
        
        For :ref:`NXtransformations` the origin of the coordinate system is placed
        in the center of the lens its polepiece, pinhole, or another point of reference.
        The origin should be specified in the :ref:`NXtransformations`.
        
        For details of electro-magnetic lenses in the literature see e.g.
        
        * `L. Reimer: Scanning Electron Microscopy <https://doi.org/10.1007/978-3-540-38967-5>`_
        * `P. Hawkes: Magnetic Electron Lenses <https://link.springer.com/book/10.1007/978-3-642-81516-4>`_
        * `Y. Liao: Practical Electron Microscopy and Database <https://www.globalsino.com/EM/>`_
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_y@NX_class)
DEBUG - value: NXelectromagnetic_lens 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens']
DEBUG - classes:
NXcollectioncolumn.nxdl.xml:/ELECTROMAGNETIC_LENS
NXelectromagnetic_lens.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/pre_defl_y/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Pre-Deflector Y 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NXelectromagnetic_lens', 'NX_CHAR']
DEBUG - classes:
NXelectromagnetic_lens.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectromagnetic_lens.nxdl.xml:/name):
DEBUG - 
            Name of the lens.
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/collectioncolumn/scheme): <HDF5 dataset "scheme": shape (), type "|O">
DEBUG - value: angular dispersive 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXcollectioncolumn', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/scheme
NXcollectioncolumn.nxdl.xml:/scheme
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/scheme):
DEBUG - -> angular dispersive
DEBUG - -> spatial dispersive
DEBUG - -> momentum dispersive
DEBUG - -> non-dispersive
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/COLLECTIONCOLUMN/scheme):
DEBUG - 
                            Scheme of the electron collection column.
                        
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/scheme):
DEBUG - 
            Scheme of the electron collection lens, i.e. angular dispersive,
            spatial dispersive, momentum dispersive, non-dispersive, etc.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/description): <HDF5 dataset "description": shape (), type "|O">
DEBUG - value: hemispherical 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/description
NXelectronanalyzer.nxdl.xml:/description
NXcomponent.nxdl.xml:/description
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/description):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/description):
DEBUG - 
            Free text description of the type of the detector
        
DEBUG - documentation (NXcomponent.nxdl.xml:/description):
DEBUG - 
            Ideally, use instances of ``identifierNAME`` to point to a resource
            that provides further details.

            If such a resource does not exist or should not be used, use this free text,
            although it is not recommended.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXelectron_detector]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/detector" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR
NXelectron_detector.nxdl.xml:
NXdetector.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR):
DEBUG - 
DEBUG - documentation (NXelectron_detector.nxdl.xml:):
DEBUG - 
    A subclass of NXdetector for detectors that detect electrons.
  
DEBUG - documentation (NXdetector.nxdl.xml:):
DEBUG - 
    A detector, detector bank, or multidetector.
  
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector@NX_class)
DEBUG - value: NXelectron_detector 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR
NXelectron_detector.nxdl.xml:
NXdetector.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector@default)
DEBUG - value: raw_data 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR
NXelectron_detector.nxdl.xml:
NXdetector.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR@default - [NX_CHAR]
DEBUG - NXelectron_detector.nxdl.xml:@default - [NX_CHAR]
DEBUG - NXdetector.nxdl.xml:@default - [NX_CHAR]
DEBUG - NXcomponent.nxdl.xml:@default - [NX_CHAR]
DEBUG - NXobject.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXobject.nxdl.xml:/default):
DEBUG - 
			.. index:: plotting

			Declares which child group contains a path leading
			to a :ref:`NXdata` group or a group using a base class
			extending :ref:`NXdata`.

			It is recommended (as of NIAC2014) to use this attribute
			to help define the path to the default dataset to be plotted.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector/count_time): <HDF5 dataset "count_time": shape (), type "<f8">
DEBUG - value: 0.1 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NX_NUMBER']
DEBUG - classes:
NXdetector.nxdl.xml:/count_time
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdetector.nxdl.xml:/count_time):
DEBUG - Elapsed actual counting time
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector/count_time@units)
DEBUG - value: s 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NX_NUMBER']
DEBUG - classes:
NXdetector.nxdl.xml:/count_time
DEBUG - NXdetector.nxdl.xml:/count_time@units [NX_TIME]
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector/raw_data [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXelectron_detector/NXdata]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/detector/raw_data" (5 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data):
DEBUG - 
                            Contains the raw data collected by the detector before calibration.
                            The data which is considered raw might change from experiment to experiment
                            due to hardware pre-processing of the data.
                            This group ideally collects the data with the lowest level of processing
                            possible.
                            
                            Axes should be named according to the conventions defined below. Note that this
                            list is a glossary with explicitly named axis names, which is only intended to
                            cover the most common measurement axes and is therefore not complete. It is
                            possible to add axes with other names at any time.
                        
DEBUG - documentation (NXobject.nxdl.xml:/DATA):
DEBUG - 
DEBUG - documentation (NXdata.nxdl.xml:):
DEBUG - 
		The :ref:`NXdata` class is designed to encapsulate all the information required for a set of data to be plotted.
		NXdata groups contain plottable data (also referred to as *signals* or *dependent variables*) and their
		associated axis coordinates (also referred to as *axes* or *independent variables*).

		The actual names of the :ref:`DATA </NXdata/DATA-field>` and :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
		can be chosen :ref:`freely <validItemName>`, as indicated by the upper case (this is a common convention in all NeXus classes).
		
		.. note:: ``NXdata`` provides data and coordinates to be plotted but
			does not describe how the data is to be plotted or even the dimensionality of the plot.
			https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute

		.. include:: data/index.rst
		   :start-line: 1

		.. admonition:: Example of a simple curve plot

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x"]
				  data: float[100]
				  x: float[100]

		More complex cases are supported

		* histogram data: ``x`` has one more value than ``data``.
		* alternative axes: instead of a single ``x`` axis you can have several axes, one of which being the default.
		* signals with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` along each dimension.
		* axes with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` also being 2D, providing a
		  unique ``(x, y)`` coordinate for each ``data`` point.

		**Signals:**

		.. index:: plotting

		.. admonition:: Defined by

			* :ref:`DATA </NXdata/DATA-field>` fields
			* the :ref:`signal </NXdata@signal-attribute>` attribute
			* the :ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute

		The :ref:`DATA </NXdata/DATA-field>` fields contain the signal values to be plotted. The name of the field
		to be used as the *default plot signal* is provided by the :ref:`signal </NXdata@signal-attribute>` attribute.
		The names of the fields to be used as *secondary plot signals* are provided by the
		:ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute.

		.. admonition:: An example with three signals, one of which being the default

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  data1: float[10,20,30]  # the default signal
				  data2: float[10,20,30]
				  data3: float[10,20,30]

		**Axes:**

		.. index:: axes (attribute)
		.. index:: coordinates

		.. admonition:: Defined by

			* :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			* the :ref:`axes </NXdata@axes-attribute>` attribute
			* :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes

		The fields and attributes are defined as follows

		1. The :ref:`AXISNAME </NXdata/AXISNAME-field>` fields contain the axis coordinates associated with the signal values.

		2. The :ref:`axes </NXdata@axes-attribute>` attribute provides the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   fields to be used as the `default axis` for each dimension of the :ref:`DATA </NXdata/DATA-field>` fields.

		3. The :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes describe the :ref:`DATA </NXdata/DATA-field>`
		   dimensions spanned by the corresponding :ref:`AXISNAME </NXdata/AXISNAME-field>` fields.

		The fields and attributes have the following constraints

		1. The length of the :ref:`axes </NXdata@axes-attribute>` attribute must be equal to the rank of the :ref:`DATA </NXdata/DATA-field>`
		   fields. When a particular dimension has no default axis, the string “.” is used in that position.

		2. The number of values in :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` must be equal to the rank of the corresponding
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		3. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is missing for a given
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field, the positions of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   field name in the :ref:`axes </NXdata@axes-attribute>` attribute are used.

		4. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is the same as the indices of "AXISNAME" in the
		   :ref:`axes </NXdata@axes-attribute>` attribute, there is no need to provide
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		5. The indices of "AXISNAME" in the :ref:`axes </NXdata@axes-attribute>` attribute must be a subset of
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		6. The shape of an :ref:`AXISNAME </NXdata/AXISNAME-field>` field must correspond to the shape of the
		   :ref:`DATA </NXdata/DATA-field>` dimensions it spans. This means that for each dimension ``i`` in ``[0, AXISNAME.ndim)``
		   spanned by axis field :ref:`AXISNAME </NXdata/AXISNAME-field>`, the number of axis values ``AXISNAME.shape[i]``
		   along dimension ``i`` must be equal to the number of data points ``DATA.shape[AXISNAME_indices[i]]`` along dimension ``i``
		   or one more than the number of data points ``DATA.shape[AXISNAME_indices[i]]+1`` in case the
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field contains histogram bin edges along dimension ``i``.

		Highlight consequences of these constraints

		1. An :ref:`AXISNAME </NXdata/AXISNAME-field>` field can have more than one dimension and can therefore span
		   more than one :ref:`DATA </NXdata/DATA-field>` dimension. Conversely, one :ref:`DATA </NXdata/DATA-field>` dimension
		   can be spanned by more than one :ref:`AXISNAME </NXdata/AXISNAME-field>` field. The default axis name (if any)
		   of each dimension can be found in the :ref:`axes </NXdata@axes-attribute>` attribute.

		2. A list of all available axes is not provided directly. All strings in the :ref:`axes </NXdata@axes-attribute>` attribute
		   (excluding the “.” string) are axis field names. In addition the prefix of an attribute ending with the string "_indices" is also
		   an axis field name.

		.. admonition:: The following example covers all axes features supported (see :ref:`sphx_glr_classes_base_classes_data_plot_fscan2d.py`)

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x_set", "y_set", "."]  # default axes for all three dimensions
				  @x_encoder_indices = [0, 1]
				  @y_encoder_indices = 1           # or [1]
				  data: float[10,7,1024]
				  x_encoder: float[11,7]           # coordinates along the first and second dimensions
				  y_encoder: float[7]              # coordinates along the second dimension
				  x_set: float[10]                 # default coordinates along the first dimension
				  y_set: float[7]                  # default coordinates along the second dimension

		**Uncertainties:**

		.. admonition:: Defined by

			* :ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields

		Standard deviations on data values as well as coordinates can be provided by
		:ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields where ``FIELDNAME`` is the name of a
		:ref:`DATA </NXdata/DATA-field>` field or an :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		.. admonition:: An example of uncertainties on the signal, auxiliary signals and axis coordinates

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  @axes = ["x", ".", "z"]
				  data1: float[10,20,30]
				  data2: float[10,20,30]
				  data3: float[10,20,30]
				  x: float[10]
				  z: float[30]
				  data1_errors: float[10,20,30]
				  data2_errors: float[10,20,30]
				  data3_errors: float[10,20,30]
				  x_errors: float[10]
				  z_errors: float[30]

	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector/raw_data@NX_class)
DEBUG - value: NXdata 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector/raw_data@signal)
DEBUG - value: raw 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data@signal - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data/signal):
DEBUG - -> raw
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ELECTRON_DETECTOR/raw_data/signal):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@signal - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/signal):
DEBUG - 
			.. index:: find the default plottable data
			.. index:: plotting
			.. index:: signal attribute value
			
			The value is the :ref:`name <validItemName>` of the signal that contains
			the default plottable data. This field or link *must* exist and be a direct child
			of this NXdata group.
			
			It is recommended (as of NIAC2014) to use this attribute
			rather than adding a signal attribute to the field.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector/raw_data/cycle1_scan1_chan0): <HDF5 dataset "cycle1_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [179.60306  194.82036  152.67594  ... 107.359472  86.70928   85.1947  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector/raw_data/cycle1_scan2_chan0): <HDF5 dataset "cycle1_scan2_chan0": shape (1001,), type "<f8">
DEBUG - value: [207.97648 152.34938 128.66128 ...  76.87814  79.34886  63.0867 ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector/raw_data/cycle1_scan3_chan0): <HDF5 dataset "cycle1_scan3_chan0": shape (1001,), type "<f8">
DEBUG - value: [120.71816  156.47254  163.7841   ...  73.32446   74.596088  49.6246  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector/raw_data/cycle2_scan1_chan0): <HDF5 dataset "cycle2_scan1_chan0": shape (1001,), type "<f8">
DEBUG - value: [140.61582 258.68226 283.51536 ...  37.03122  65.11154  62.46824] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/detector/raw_data/raw): <HDF5 dataset "raw": shape (4, 1001), type "<f8">
DEBUG - value: [179.60306  194.82036  152.67594  ... 107.359472  86.70928   85.1947  ] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXelectron_detector', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/DATA
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - documentation (NXdata.nxdl.xml:/DATA):
DEBUG - 
			.. index:: plotting

			Data values to be used as the NeXus *plottable data*. As the upper case ``DATA``
			indicates, the names of the ``DATA`` fields can be chosen :ref:`freely <validItemName>`. The :ref:`signal attribute </NXdata@signal-attribute>`
			and :ref:`auxiliary_signals attribute</NXdata@auxiliary_signals-attribute>` can be used to find all datasets in the ``NXdata``
			that contain data values.

			The maximum rank is ``32`` for compatibility with backend file formats.
		
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/device_information [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXfabrication]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information
NXelectronanalyzer.nxdl.xml:/FABRICATION
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXcomponent.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information
NXelectronanalyzer.nxdl.xml:/FABRICATION
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: PHOIBOS 150 NAP 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: SPECS GmbH 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energy_resolution [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXresolution]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/energy_resolution" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXresolution']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution
NXelectronanalyzer.nxdl.xml:/energy_resolution
NXresolution.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/energy_resolution):
DEBUG - 
            Energy resolution of the analyzer with the current setting. May be linked from an
            NXcalibration.
        
DEBUG - documentation (NXresolution.nxdl.xml:):
DEBUG - 
         Describes the resolution of a physical quantity.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energy_resolution@NX_class)
DEBUG - value: NXresolution 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXresolution']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution
NXelectronanalyzer.nxdl.xml:/energy_resolution
NXresolution.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energy_resolution/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: energy 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXresolution', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/physical_quantity
NXelectronanalyzer.nxdl.xml:/energy_resolution/physical_quantity
NXresolution.nxdl.xml:/physical_quantity
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/physical_quantity):
DEBUG - -> energy
DEBUG - enumeration (NXelectronanalyzer.nxdl.xml:/energy_resolution/physical_quantity):
DEBUG - -> energy
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/physical_quantity):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/energy_resolution/physical_quantity):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:/physical_quantity):
DEBUG - 
             The physical quantity of the resolution, e.g.,
             energy, momentum, time, area, etc.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energy_resolution/resolution): <HDF5 dataset "resolution": shape (), type "<f8">
DEBUG - value: 0.1 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXresolution', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/resolution
NXelectronanalyzer.nxdl.xml:/energy_resolution/resolution
NXresolution.nxdl.xml:/resolution
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/resolution):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/energy_resolution/resolution):
DEBUG - 
                Minimum distinguishable energy separation in the energy spectra.
                
                This concept is related to term `10.24`_ of the ISO 18115-1:2023 standard.
                
                .. _10.24: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:10.24
            
DEBUG - documentation (NXresolution.nxdl.xml:/resolution):
DEBUG - 
             The resolution of the physical quantity.
        
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energy_resolution/resolution@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXresolution', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/resolution
NXelectronanalyzer.nxdl.xml:/energy_resolution/resolution
NXresolution.nxdl.xml:/resolution
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/resolution@units - REQUIRED, but undefined unit category
DEBUG - NXelectronanalyzer.nxdl.xml:/energy_resolution/resolution@units [NX_ENERGY]
DEBUG - NXresolution.nxdl.xml:/resolution@units [NX_ANY]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energy_resolution/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: estimated 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXresolution', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/type
NXresolution.nxdl.xml:/type
DEBUG - <<RECOMMENDED>>
DEBUG - enumeration (NXresolution.nxdl.xml:/type):
DEBUG - -> estimated
DEBUG - -> derived
DEBUG - -> calibrated
DEBUG - -> other
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/energy_resolution/type):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:/type):
DEBUG - 
             The process by which the resolution was determined.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXenergydispersion]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion" (7 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION
NXelectronanalyzer.nxdl.xml:/ENERGYDISPERSION
NXenergydispersion.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/ENERGYDISPERSION):
DEBUG - 
            Describes the energy dispersion section
        
DEBUG - documentation (NXenergydispersion.nxdl.xml:):
DEBUG - 
        Energy dispersion section of an electron analyzer.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion@NX_class)
DEBUG - value: NXenergydispersion 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION
NXelectronanalyzer.nxdl.xml:/ENERGYDISPERSION
NXenergydispersion.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/device_information [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXenergydispersion/NXfabrication]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information
NXenergydispersion.nxdl.xml:/FABRICATION
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information):
DEBUG - 
DEBUG - documentation (NXenergydispersion.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXcomponent.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information
NXenergydispersion.nxdl.xml:/FABRICATION
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: PHOIBOS 150 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: SPECS GmbH 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/energy_scan_mode): <HDF5 dataset "energy_scan_mode": shape (), type "|O">
DEBUG - value: fixed_analyzer_transmission 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/energy_scan_mode
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/energy_scan_mode
NXenergydispersion.nxdl.xml:/energy_scan_mode
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXenergydispersion.nxdl.xml:/energy_scan_mode):
DEBUG - -> fixed_analyzer_transmission
DEBUG - -> fixed_retardation_ratio
DEBUG - -> fixed_energy
DEBUG - -> snapshot
DEBUG - -> dither
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/energy_scan_mode):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/energy_scan_mode):
DEBUG - 
DEBUG - documentation (NXenergydispersion.nxdl.xml:/energy_scan_mode):
DEBUG - 
            Way of scanning the energy axis
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/entrance_slit [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXenergydispersion/NXaperture]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/entrance_slit" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXaperture']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/entrance_slit
NXenergydispersion.nxdl.xml:/APERTURE
NXaperture.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/entrance_slit):
DEBUG - 
                            Size, position and shape of the entrance slit in dispersive analyzers.
                            
                            To add additional or other slits use the APERTURE group of NXenergydispersion.
                        
DEBUG - documentation (NXenergydispersion.nxdl.xml:/APERTURE):
DEBUG - 
            Size, position and shape of a slit in dispersive analyzer, e.g. entrance and
            exit slits.
        
DEBUG - documentation (NXaperture.nxdl.xml:):
DEBUG - 
      A beamline aperture.

      Note, the group was incorrectly documented as deprecated, but it is not and it is in common use.
      
      You can specify the geometry of the aperture using either NXoff_geometry or for simpler geometry shape and size.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/entrance_slit@NX_class)
DEBUG - value: NXaperture 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXaperture']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/entrance_slit
NXenergydispersion.nxdl.xml:/APERTURE
NXaperture.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/entrance_slit/description): <HDF5 dataset "description": shape (), type "|O">
DEBUG - value: 4:7x20c 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXaperture', 'NX_CHAR']
DEBUG - classes:
NXaperture.nxdl.xml:/description
NXcomponent.nxdl.xml:/description
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXaperture.nxdl.xml:/description):
DEBUG - Description of aperture
DEBUG - documentation (NXcomponent.nxdl.xml:/description):
DEBUG - 
            Ideally, use instances of ``identifierNAME`` to point to a resource
            that provides further details.

            If such a resource does not exist or should not be used, use this free text,
            although it is not recommended.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/exit_slit [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXenergydispersion/NXaperture]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/exit_slit" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXaperture']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/exit_slit
NXenergydispersion.nxdl.xml:/APERTURE
NXaperture.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/exit_slit):
DEBUG - 
                            Size, position and shape of the exit slit in dispersive analyzers.
                            
                            To add additional or other slits use the APERTURE group of NXenergydispersion.
                        
DEBUG - documentation (NXenergydispersion.nxdl.xml:/APERTURE):
DEBUG - 
            Size, position and shape of a slit in dispersive analyzer, e.g. entrance and
            exit slits.
        
DEBUG - documentation (NXaperture.nxdl.xml:):
DEBUG - 
      A beamline aperture.

      Note, the group was incorrectly documented as deprecated, but it is not and it is in common use.
      
      You can specify the geometry of the aperture using either NXoff_geometry or for simpler geometry shape and size.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/exit_slit@NX_class)
DEBUG - value: NXaperture 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXaperture']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/exit_slit
NXenergydispersion.nxdl.xml:/APERTURE
NXaperture.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/exit_slit/description): <HDF5 dataset "description": shape (), type "|O">
DEBUG - value: C:mesh 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NXaperture', 'NX_CHAR']
DEBUG - classes:
NXaperture.nxdl.xml:/description
NXcomponent.nxdl.xml:/description
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXaperture.nxdl.xml:/description):
DEBUG - Description of aperture
DEBUG - documentation (NXcomponent.nxdl.xml:/description):
DEBUG - 
            Ideally, use instances of ``identifierNAME`` to point to a resource
            that provides further details.

            If such a resource does not exist or should not be used, use this free text,
            although it is not recommended.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/pass_energy): <HDF5 dataset "pass_energy": shape (), type "<f8">
DEBUG - value: 20.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/pass_energy
NXenergydispersion.nxdl.xml:/pass_energy
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/pass_energy):
DEBUG - 
                            Only one of ``pass_energy`` or ``drift_energy`` should be supplied. ``pass_energy`` should be used when working
                            with hemispherical analyzers.
                        
DEBUG - documentation (NXenergydispersion.nxdl.xml:/pass_energy):
DEBUG - 
            Mean kinetic energy of the electrons in this energy-dispersive section of the analyzer.
            This term should be used for hemispherical analyzers.
            
            This concept is related to term `12.63`_ of the ISO 18115-1:2023 standard.
            
            .. _12.63: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.63
        
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/pass_energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/pass_energy
NXenergydispersion.nxdl.xml:/pass_energy
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/pass_energy@units [NX_ENERGY]
DEBUG - NXenergydispersion.nxdl.xml:/pass_energy@units [NX_ENERGY]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/radius): <HDF5 dataset "radius": shape (), type "<i8">
DEBUG - value: 150 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/radius
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/radius):
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/radius@units)
DEBUG - value: mm 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/radius
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/radius@units [NX_LENGTH]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/energydispersion/scheme): <HDF5 dataset "scheme": shape (), type "|O">
DEBUG - value: hemispherical 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXenergydispersion', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/scheme
NXenergydispersion.nxdl.xml:/scheme
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/scheme):
DEBUG - -> tof
DEBUG - -> hemispherical
DEBUG - -> double hemispherical
DEBUG - -> cylindrical mirror
DEBUG - -> display mirror
DEBUG - -> retarding grid
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/ENERGYDISPERSION/scheme):
DEBUG - 
DEBUG - documentation (NXenergydispersion.nxdl.xml:/scheme):
DEBUG - 
            Energy dispersion scheme employed, for example: tof, hemispherical, cylindrical,
            mirror, retarding grid, etc.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Phoibos1D 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_CHAR']
DEBUG - classes:
NXelectronanalyzer.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/name):
DEBUG - 
            Name or model of the equipment
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/slow_axes): <HDF5 dataset "slow_axes": shape (), type "|O">
DEBUG - value: energy 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/slow_axes
NXelectronanalyzer.nxdl.xml:/slow_axes
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/slow_axes):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/slow_axes):
DEBUG - 
            List of the axes that are acquired by scanning a physical parameter, listed in
            order of decreasing speed. See fast_axes for examples.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/electronanalyzer/transmission_function [NXxps::/NXentry/NXinstrument/NXelectronanalyzer/NXdata]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/electronanalyzer/transmission_function" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXelectronanalyzer.nxdl.xml:/transmission_function
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/transmission_function):
DEBUG - 
            Transmission function of the electron analyzer.
            
            The transmission function (TF) specifies the detection efficiency per solid angle for electrons of
            different kinetic energy passing through the electron analyzer. It depends on the spectrometer
            geometry as well as operation settings such as lens mode and pass energy.
            The transmission function is usually given as relative intensity vs. kinetic energy.
            
            The TF is used for calibration of the intensity scale in quantitative XPS. Without proper
            transmission correction, a comparison of results measured from the same sample using different
            operating modes for an instrument would show significant variations in signal intensity for the same
            kinetic energies.
            
            This concept is related to term `7.15`_ of the ISO 18115-1:2023 standard.
            
            .. _7.15: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:7.15
        
DEBUG - documentation (NXobject.nxdl.xml:/DATA):
DEBUG - 
DEBUG - documentation (NXdata.nxdl.xml:):
DEBUG - 
		The :ref:`NXdata` class is designed to encapsulate all the information required for a set of data to be plotted.
		NXdata groups contain plottable data (also referred to as *signals* or *dependent variables*) and their
		associated axis coordinates (also referred to as *axes* or *independent variables*).

		The actual names of the :ref:`DATA </NXdata/DATA-field>` and :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
		can be chosen :ref:`freely <validItemName>`, as indicated by the upper case (this is a common convention in all NeXus classes).
		
		.. note:: ``NXdata`` provides data and coordinates to be plotted but
			does not describe how the data is to be plotted or even the dimensionality of the plot.
			https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute

		.. include:: data/index.rst
		   :start-line: 1

		.. admonition:: Example of a simple curve plot

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x"]
				  data: float[100]
				  x: float[100]

		More complex cases are supported

		* histogram data: ``x`` has one more value than ``data``.
		* alternative axes: instead of a single ``x`` axis you can have several axes, one of which being the default.
		* signals with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` along each dimension.
		* axes with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` also being 2D, providing a
		  unique ``(x, y)`` coordinate for each ``data`` point.

		**Signals:**

		.. index:: plotting

		.. admonition:: Defined by

			* :ref:`DATA </NXdata/DATA-field>` fields
			* the :ref:`signal </NXdata@signal-attribute>` attribute
			* the :ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute

		The :ref:`DATA </NXdata/DATA-field>` fields contain the signal values to be plotted. The name of the field
		to be used as the *default plot signal* is provided by the :ref:`signal </NXdata@signal-attribute>` attribute.
		The names of the fields to be used as *secondary plot signals* are provided by the
		:ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute.

		.. admonition:: An example with three signals, one of which being the default

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  data1: float[10,20,30]  # the default signal
				  data2: float[10,20,30]
				  data3: float[10,20,30]

		**Axes:**

		.. index:: axes (attribute)
		.. index:: coordinates

		.. admonition:: Defined by

			* :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			* the :ref:`axes </NXdata@axes-attribute>` attribute
			* :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes

		The fields and attributes are defined as follows

		1. The :ref:`AXISNAME </NXdata/AXISNAME-field>` fields contain the axis coordinates associated with the signal values.

		2. The :ref:`axes </NXdata@axes-attribute>` attribute provides the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   fields to be used as the `default axis` for each dimension of the :ref:`DATA </NXdata/DATA-field>` fields.

		3. The :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes describe the :ref:`DATA </NXdata/DATA-field>`
		   dimensions spanned by the corresponding :ref:`AXISNAME </NXdata/AXISNAME-field>` fields.

		The fields and attributes have the following constraints

		1. The length of the :ref:`axes </NXdata@axes-attribute>` attribute must be equal to the rank of the :ref:`DATA </NXdata/DATA-field>`
		   fields. When a particular dimension has no default axis, the string “.” is used in that position.

		2. The number of values in :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` must be equal to the rank of the corresponding
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		3. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is missing for a given
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field, the positions of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   field name in the :ref:`axes </NXdata@axes-attribute>` attribute are used.

		4. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is the same as the indices of "AXISNAME" in the
		   :ref:`axes </NXdata@axes-attribute>` attribute, there is no need to provide
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		5. The indices of "AXISNAME" in the :ref:`axes </NXdata@axes-attribute>` attribute must be a subset of
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		6. The shape of an :ref:`AXISNAME </NXdata/AXISNAME-field>` field must correspond to the shape of the
		   :ref:`DATA </NXdata/DATA-field>` dimensions it spans. This means that for each dimension ``i`` in ``[0, AXISNAME.ndim)``
		   spanned by axis field :ref:`AXISNAME </NXdata/AXISNAME-field>`, the number of axis values ``AXISNAME.shape[i]``
		   along dimension ``i`` must be equal to the number of data points ``DATA.shape[AXISNAME_indices[i]]`` along dimension ``i``
		   or one more than the number of data points ``DATA.shape[AXISNAME_indices[i]]+1`` in case the
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field contains histogram bin edges along dimension ``i``.

		Highlight consequences of these constraints

		1. An :ref:`AXISNAME </NXdata/AXISNAME-field>` field can have more than one dimension and can therefore span
		   more than one :ref:`DATA </NXdata/DATA-field>` dimension. Conversely, one :ref:`DATA </NXdata/DATA-field>` dimension
		   can be spanned by more than one :ref:`AXISNAME </NXdata/AXISNAME-field>` field. The default axis name (if any)
		   of each dimension can be found in the :ref:`axes </NXdata@axes-attribute>` attribute.

		2. A list of all available axes is not provided directly. All strings in the :ref:`axes </NXdata@axes-attribute>` attribute
		   (excluding the “.” string) are axis field names. In addition the prefix of an attribute ending with the string "_indices" is also
		   an axis field name.

		.. admonition:: The following example covers all axes features supported (see :ref:`sphx_glr_classes_base_classes_data_plot_fscan2d.py`)

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x_set", "y_set", "."]  # default axes for all three dimensions
				  @x_encoder_indices = [0, 1]
				  @y_encoder_indices = 1           # or [1]
				  data: float[10,7,1024]
				  x_encoder: float[11,7]           # coordinates along the first and second dimensions
				  y_encoder: float[7]              # coordinates along the second dimension
				  x_set: float[10]                 # default coordinates along the first dimension
				  y_set: float[7]                  # default coordinates along the second dimension

		**Uncertainties:**

		.. admonition:: Defined by

			* :ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields

		Standard deviations on data values as well as coordinates can be provided by
		:ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields where ``FIELDNAME`` is the name of a
		:ref:`DATA </NXdata/DATA-field>` field or an :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		.. admonition:: An example of uncertainties on the signal, auxiliary signals and axis coordinates

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  @axes = ["x", ".", "z"]
				  data1: float[10,20,30]
				  data2: float[10,20,30]
				  data3: float[10,20,30]
				  x: float[10]
				  z: float[30]
				  data1_errors: float[10,20,30]
				  data2_errors: float[10,20,30]
				  data3_errors: float[10,20,30]
				  x_errors: float[10]
				  z_errors: float[30]

	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/transmission_function@NX_class)
DEBUG - value: NXdata 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXelectronanalyzer.nxdl.xml:/transmission_function
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/transmission_function@axes)
DEBUG - value: ['kinetic_energy'] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXelectronanalyzer.nxdl.xml:/transmission_function
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXelectronanalyzer.nxdl.xml:/transmission_function@axes - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXelectronanalyzer.nxdl.xml:/transmission_function/axes):
DEBUG - -> ['kinetic_energy']
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/transmission_function/axes):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@axes - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/axes):
DEBUG - 
			.. index:: plotting

			The ``axes`` attribute is a list of strings which are the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			to be used as the default axis along every :ref:`DATA </NXdata/DATA-field>` dimension. As a result the length must
			be equal to the rank of the :ref:`DATA </NXdata/DATA-field>` fields. The string "." can be used for
			dimensions without a default axis.

			.. note::  When ``axes`` contains multiple strings, it must be saved as an actual array
				of strings and not a single comma separated string.
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/transmission_function@signal)
DEBUG - value: relative_intensity 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/transmission_function
NXelectronanalyzer.nxdl.xml:/transmission_function
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXelectronanalyzer.nxdl.xml:/transmission_function@signal - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXelectronanalyzer.nxdl.xml:/transmission_function/signal):
DEBUG - -> relative_intensity
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/transmission_function/signal):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@signal - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/signal):
DEBUG - 
			.. index:: find the default plottable data
			.. index:: plotting
			.. index:: signal attribute value
			
			The value is the :ref:`name <validItemName>` of the signal that contains
			the default plottable data. This field or link *must* exist and be a direct child
			of this NXdata group.
			
			It is recommended (as of NIAC2014) to use this attribute
			rather than adding a signal attribute to the field.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/transmission_function/kinetic_energy): <HDF5 dataset "kinetic_energy": shape (1001,), type "<f8">
DEBUG - value: [1311.61 1311.71 1311.81 ... 1411.41 1411.51 1411.61] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/transmission_function/kinetic_energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - NXdata.nxdl.xml:/AXISNAME@units - [NX_CHAR]
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME/units):
DEBUG - 
				Unit in which the coordinate values are expressed.
				See the section :ref:`Design-Units` for more information.
			
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/transmission_function/relative_intensity): <HDF5 dataset "relative_intensity": shape (1001,), type "<f8">
DEBUG - value: [2.39209681 2.39200534 2.39191387 ... 2.30571545 2.30563353 2.30555162] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/DATA
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - documentation (NXdata.nxdl.xml:/DATA):
DEBUG - 
			.. index:: plotting

			Data values to be used as the NeXus *plottable data*. As the upper case ``DATA``
			indicates, the names of the ``DATA`` fields can be chosen :ref:`freely <validItemName>`. The :ref:`signal attribute </NXdata@signal-attribute>`
			and :ref:`auxiliary_signals attribute</NXdata@auxiliary_signals-attribute>` can be used to find all datasets in the ``NXdata``
			that contain data values.

			The maximum rank is ``32`` for compatibility with backend file formats.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/voltage_range): <HDF5 dataset "voltage_range": shape (), type "<f8">
DEBUG - value: 1.5 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_FLOAT']
DEBUG - classes:
NXelectronanalyzer.nxdl.xml:/voltage_range
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/voltage_range):
DEBUG - 
            Voltage range of the power supply. This influences the noise of the supply
            and thereby the energy resolution.
        
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/voltage_range@units)
DEBUG - value: kV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_FLOAT']
DEBUG - classes:
NXelectronanalyzer.nxdl.xml:/voltage_range
DEBUG - NXelectronanalyzer.nxdl.xml:/voltage_range@units [NX_VOLTAGE]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/electronanalyzer/work_function): <HDF5 dataset "work_function": shape (), type "<f8">
DEBUG - value: 4.156000137329102 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_FLOAT']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function
NXelectronanalyzer.nxdl.xml:/work_function
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function):
DEBUG - 
DEBUG - documentation (NXelectronanalyzer.nxdl.xml:/work_function):
DEBUG - 
            Work function of the electron analyzer.
            
            The work function of a uniform surface of a conductor is the minimum energy required to remove
            an electron from the interior of the solid to a vacuum level immediately outside the solid surface.
            
            The kinetic energy :math:E_K of a photoelectron emitted from an energy level with binding energy
            :math:`E_B` below the Fermi level is given by :math:`E_K = h\nu - E_B - W = h\nu - E_B - e \phi_{\mathrm{sample}}`.

            Here, :math:`W = e \phi_{\mathrm{sample}}` is the work function of the sample surface, which is directly proportional
            to the potential difference :math:`\phi_{\mathrm{sample}}` between the electrochemical potential of electrons in
            the bulk and the electrostatic potential of an electron in the vacuum just outside the surface.

            In PES measurements, the sample and the spectrometer (with work function :math:`W_{\mathrm{spectr.}} = e \phi_{\mathrm{spectr.}}`)
            are electrically connected and therefore their Fermi levels are aligned. Due to the difference in local
            vacuum level between the sample and spectrometer, there however exists an electric potential difference (contact potential)
            :math:`\Delta\phi = \phi_{\mathrm{sample}} - \phi_{\mathrm{spectr.}}`.  The measured kinetic energy of a
            photoelectron in PES is therefore given by :math:`E_K^{\mathrm{meas.}} = E_K + e\Delta\phi = h\nu - E_B - e\phi_{\mathrm{spectr.}}`.

            Hence, the measured kinetic energy :math:`E_K^{\mathrm{meas.}}` of a photoelectron is independent
            of the sample work function. Nonetheless, the work function :math:`\phi_{\mathrm{spectr.}}` needs to be known to
            accurately determine the binding energy scale.
        
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/electronanalyzer/work_function@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyzer', 'NX_FLOAT']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function
NXelectronanalyzer.nxdl.xml:/work_function
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function@units - REQUIRED, but undefined unit category
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYZER/work_function@units [NX_ENERGY]
DEBUG - NXelectronanalyzer.nxdl.xml:/work_function@units [NX_ENERGY]
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/energy_resolution [NXxps::/NXentry/NXinstrument/NXresolution]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/energy_resolution" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution
NXresolution.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution):
DEBUG - 
                    Overall energy resolution of the photoemission instrument.
                
DEBUG - documentation (NXresolution.nxdl.xml:):
DEBUG - 
         Describes the resolution of a physical quantity.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/energy_resolution@NX_class)
DEBUG - value: NXresolution 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution
NXresolution.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/energy_resolution/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: energy 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/physical_quantity
NXresolution.nxdl.xml:/physical_quantity
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/physical_quantity):
DEBUG - -> energy
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/physical_quantity):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:/physical_quantity):
DEBUG - 
             The physical quantity of the resolution, e.g.,
             energy, momentum, time, area, etc.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/energy_resolution/resolution): <HDF5 dataset "resolution": shape (), type "<f8">
DEBUG - value: 0.2 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/resolution
NXresolution.nxdl.xml:/resolution
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/resolution):
DEBUG - 
                        Minimum distinguishable energy separation in the energy spectra.
                        
                        This concept is related to term `10.24`_ of the ISO 18115-1:2023 standard.
                        
                        .. _10.24: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:10.24
                    
DEBUG - documentation (NXresolution.nxdl.xml:/resolution):
DEBUG - 
             The resolution of the physical quantity.
        
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/energy_resolution/resolution@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/resolution
NXresolution.nxdl.xml:/resolution
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/resolution@units [NX_ENERGY]
DEBUG - NXresolution.nxdl.xml:/resolution@units [NX_ANY]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/energy_resolution/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: calibrated 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/type
NXresolution.nxdl.xml:/type
DEBUG - <<RECOMMENDED>>
DEBUG - enumeration (NXresolution.nxdl.xml:/type):
DEBUG - -> estimated
DEBUG - -> derived
DEBUG - -> calibrated
DEBUG - -> other
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/type):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:/type):
DEBUG - 
             The process by which the resolution was determined.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/flood_gun [NXxps::/NXentry/NXinstrument/NXactuator]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/flood_gun" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun
NXinstrument.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun):
DEBUG - 
                    Device to bring low-energy electrons to the sample for charge neutralization
                
DEBUG - documentation (NXinstrument.nxdl.xml:/ACTUATOR):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/flood_gun@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun
NXinstrument.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/flood_gun@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/flood_gun 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun
NXinstrument.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/flood_gun/actuation_target): <HDF5 dataset "actuation_target": shape (), type "|O">
DEBUG - value: current 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/actuation_target
NXactuator.nxdl.xml:/actuation_target
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/actuation_target):
DEBUG - -> current
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/actuation_target):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/actuation_target):
DEBUG - 
             The physical component on which this actuator acts.
             This should be a path in the NeXus tree structure.
             For example, this could be an instance of NXsample or a device on NXinstrument.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/flood_gun/current): <HDF5 dataset "current": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/current
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/current):
DEBUG - 
                        In case of a fixed or averaged electron current, this is the scalar current.
                        It can also be an 1D array of output current (without time stamps).
                    
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/flood_gun/current@units)
DEBUG - value: A 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/current
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/current@units [NX_CURRENT]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/flood_gun/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: FG 22/35 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/name
NXactuator.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/name):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/flood_gun/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: low energy electron source 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/type
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/type):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/manipulator [NXxps::/NXentry/NXinstrument/NXmanipulator]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/manipulator" (6 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR
NXmanipulator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR):
DEBUG - 
                    Manipulator for positioning of the sample.
                
DEBUG - documentation (NXmanipulator.nxdl.xml:):
DEBUG - 
        Base class to describe the use of manipulators and sample stages.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator@NX_class)
DEBUG - value: NXmanipulator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR
NXmanipulator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/manipulator/device_information [NXxps::/NXentry/NXinstrument/NXmanipulator/NXfabrication]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/manipulator/device_information" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information):
DEBUG - 
DEBUG - documentation (NXcomponent.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/device_information/identifier): <HDF5 dataset "identifier": shape (), type "|O">
DEBUG - value: v1.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/identifier
NXobject.nxdl.xml:/identifierNAME
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/identifier):
DEBUG - 
DEBUG - documentation (NXobject.nxdl.xml:/identifierNAME):
DEBUG - 
			An identifier for a (persistent) resource.

			An identifier, provided by some authority, that has been assigned to an
			object described by this ``NXobject``. To be useful, the identifier
			must not be reassigned to a different real-world object. It is typical for
			there to be some mechanism to resolve an identifier, obtaining metadata
			about the object. Identifiers for which some guarantees exist regarding
			this resolution process are called persistent identifiers.
			Persistent identifiers are also known as PIDs.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: 5-axis manipulator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: SPECS GmbH 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/manipulator/drain_current_ammeter [NXxps::/NXentry/NXinstrument/NXmanipulator/NXsensor]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/manipulator/drain_current_ammeter" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter
NXmanipulator.nxdl.xml:/drain_current_ammeter
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/drain_current_ammeter):
DEBUG - 
            Ammeter measuring the drain current of the sample and sample holder.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/drain_current_ammeter@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter
NXmanipulator.nxdl.xml:/drain_current_ammeter
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/drain_current_ammeter@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/manipulator/drain_current_ammeter 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter
NXmanipulator.nxdl.xml:/drain_current_ammeter
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/drain_current_ammeter/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: current 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/measurement
NXmanipulator.nxdl.xml:/drain_current_ammeter/measurement
NXsensor.nxdl.xml:/measurement
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/measurement):
DEBUG - -> current
DEBUG - enumeration (NXmanipulator.nxdl.xml:/drain_current_ammeter/measurement):
DEBUG - -> current
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/measurement):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/drain_current_ammeter/measurement):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/drain_current_ammeter/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: ammeter 1.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/name
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/name):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/drain_current_ammeter/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: wire 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/type
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/type):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/drain_current_ammeter/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 0.1 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/value
NXmanipulator.nxdl.xml:/drain_current_ammeter/value
NXsensor.nxdl.xml:/value
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/value):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/drain_current_ammeter/value):
DEBUG - 
                In case of a single or averaged drain current measurement, this is the scalar drain current measured between
                the sample and sample holder. It can also be an 1D array of measured currents (without time stamps).
            
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/drain_current_ammeter/value@units)
DEBUG - value: nA 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/value
NXmanipulator.nxdl.xml:/drain_current_ammeter/value
NXsensor.nxdl.xml:/value
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_ammeter/value@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/drain_current_ammeter/value@units [NX_CURRENT]
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_potentiostat [NXxps::/NXentry/NXinstrument/NXmanipulator/NXactuator]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_potentiostat" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat
NXmanipulator.nxdl.xml:/sample_bias_potentiostat
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_potentiostat):
DEBUG - 
            Actuator applying a voltage between sample holder and sample.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_potentiostat@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat
NXmanipulator.nxdl.xml:/sample_bias_potentiostat
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_potentiostat@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_potentiostat 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat
NXmanipulator.nxdl.xml:/sample_bias_potentiostat
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_potentiostat/actuation_target): <HDF5 dataset "actuation_target": shape (), type "|O">
DEBUG - value: voltage 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/actuation_target
NXmanipulator.nxdl.xml:/sample_bias_potentiostat/actuation_target
NXactuator.nxdl.xml:/actuation_target
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/actuation_target):
DEBUG - -> voltage
DEBUG - enumeration (NXmanipulator.nxdl.xml:/sample_bias_potentiostat/actuation_target):
DEBUG - -> voltage
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/actuation_target):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_potentiostat/actuation_target):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/actuation_target):
DEBUG - 
             The physical component on which this actuator acts.
             This should be a path in the NeXus tree structure.
             For example, this could be an instance of NXsample or a device on NXinstrument.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_potentiostat/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: XPS sample potentiostat 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/name
NXactuator.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/name):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_potentiostat/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: potentiostat 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/type
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/type):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_voltmeter [NXxps::/NXentry/NXinstrument/NXmanipulator/NXsensor]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_voltmeter" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter
NXmanipulator.nxdl.xml:/sample_bias_voltmeter
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_voltmeter):
DEBUG - 
            Sensor measuring the voltage applied to sample and sample holder.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_voltmeter@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter
NXmanipulator.nxdl.xml:/sample_bias_voltmeter
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_voltmeter@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_voltmeter 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter
NXmanipulator.nxdl.xml:/sample_bias_voltmeter
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_voltmeter/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: voltage 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/measurement
NXmanipulator.nxdl.xml:/sample_bias_voltmeter/measurement
NXsensor.nxdl.xml:/measurement
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/measurement):
DEBUG - -> voltage
DEBUG - enumeration (NXmanipulator.nxdl.xml:/sample_bias_voltmeter/measurement):
DEBUG - -> voltage
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/measurement):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_voltmeter/measurement):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_voltmeter/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: XPS sample voltmeter 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/name
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/name):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_voltmeter/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: oscilloscope 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/type
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/type):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_voltmeter/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/value
NXmanipulator.nxdl.xml:/sample_bias_voltmeter/value
NXsensor.nxdl.xml:/value
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/value):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_voltmeter/value):
DEBUG - 
                In case of a single or averaged bias measurement, this is the scalar voltage measured between
                sample and sample holder. It can also be an 1D array of measured voltages (without time stamps).
            
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_voltmeter/value@units)
DEBUG - value: V 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/value
NXmanipulator.nxdl.xml:/sample_bias_voltmeter/value
NXsensor.nxdl.xml:/value
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/value@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/sample_bias_voltmeter/value@units [NX_VOLTAGE]
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/manipulator/sample_heater [NXxps::/NXentry/NXinstrument/NXmanipulator/NXactuator]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/manipulator/sample_heater" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater
NXmanipulator.nxdl.xml:/sample_heater
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_heater):
DEBUG - 
            Device to heat the sample.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/sample_heater@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater
NXmanipulator.nxdl.xml:/sample_heater
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/sample_heater@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/manipulator/sample_heater 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater
NXmanipulator.nxdl.xml:/sample_heater
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/sample_heater/actuation_target): <HDF5 dataset "actuation_target": shape (), type "|O">
DEBUG - value: temperature 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/actuation_target
NXmanipulator.nxdl.xml:/sample_heater/actuation_target
NXactuator.nxdl.xml:/actuation_target
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/actuation_target):
DEBUG - -> temperature
DEBUG - enumeration (NXmanipulator.nxdl.xml:/sample_heater/actuation_target):
DEBUG - -> temperature
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/actuation_target):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_heater/actuation_target):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/actuation_target):
DEBUG - 
             The physical component on which this actuator acts.
             This should be a path in the NeXus tree structure.
             For example, this could be an instance of NXsample or a device on NXinstrument.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/sample_heater/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Coherent Compact Evolution IR Diode LASER (DILAS) 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/name
NXactuator.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/name):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/sample_heater/output_heater_power): <HDF5 dataset "output_heater_power": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/output_heater_power
NXmanipulator.nxdl.xml:/sample_heater/output_heater_power
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/output_heater_power):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_heater/output_heater_power):
DEBUG - 
                In case of a fixed or averaged heating power, this is the scalar heater power.
                It can also be a 1D array of heater powers (without time stamps).
            
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/sample_heater/output_heater_power@units)
DEBUG - value: W 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/output_heater_power
NXmanipulator.nxdl.xml:/sample_heater/output_heater_power
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/output_heater_power@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/sample_heater/output_heater_power@units [NX_POWER]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/sample_heater/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: IR diode laser 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/type
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/type):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/manipulator/temperature_sensor [NXxps::/NXentry/NXinstrument/NXmanipulator/NXsensor]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/manipulator/temperature_sensor" (5 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor
NXmanipulator.nxdl.xml:/temperature_sensor
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/temperature_sensor):
DEBUG - 
            Temperature sensor measuring the sample temperature.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/temperature_sensor@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor
NXmanipulator.nxdl.xml:/temperature_sensor
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/temperature_sensor@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/manipulator/temperature_sensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor
NXmanipulator.nxdl.xml:/temperature_sensor
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/temperature_sensor/attached_to): <HDF5 dataset "attached_to": shape (), type "|O">
DEBUG - value: sample 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/attached_to
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/attached_to):
DEBUG - where sensor is attached to ("sample" | "can")
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/temperature_sensor/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: temperature 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/measurement
NXmanipulator.nxdl.xml:/temperature_sensor/measurement
NXsensor.nxdl.xml:/measurement
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/measurement):
DEBUG - -> temperature
DEBUG - enumeration (NXmanipulator.nxdl.xml:/temperature_sensor/measurement):
DEBUG - -> temperature
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/measurement):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/temperature_sensor/measurement):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/temperature_sensor/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: type K thermocouple 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/name
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/name):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/temperature_sensor/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: type K thermocouple 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/type
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/type):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/manipulator/temperature_sensor/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 298.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/value
NXmanipulator.nxdl.xml:/temperature_sensor/value
NXsensor.nxdl.xml:/value
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/value):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/temperature_sensor/value):
DEBUG - 
                In case of a single or averaged temperature measurement, this is the scalar temperature measured
                by the sample temperature sensor. It can also be a 1D array of measured temperatures
                (without time stamps).
            
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/manipulator/temperature_sensor/value@units)
DEBUG - value: K 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/value
NXmanipulator.nxdl.xml:/temperature_sensor/value
NXsensor.nxdl.xml:/value
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/value@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/temperature_sensor/value@units [NX_TEMPERATURE]
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/pressure_gauge [NXxps::/NXentry/NXinstrument/NXsensor]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/pressure_gauge" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge
NXinstrument.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge):
DEBUG - 
                    Device to measure the gas pressure in the instrument.
                
DEBUG - documentation (NXinstrument.nxdl.xml:/SENSOR):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/pressure_gauge@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge
NXinstrument.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/pressure_gauge@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/pressure_gauge 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge
NXinstrument.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/pressure_gauge/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: pressure 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/measurement
NXsensor.nxdl.xml:/measurement
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/measurement):
DEBUG - -> pressure
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/measurement):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/pressure_gauge/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Atmion 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/name
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/name):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/pressure_gauge/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: hot-filament ionization gauge 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/type
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/type):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/pressure_gauge/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 1e-09 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/value
NXsensor.nxdl.xml:/value
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/value):
DEBUG - 
                        In case of a single or averaged gas pressure measurement, this is the scalar gas pressure.
                        It can also be an 1D array of measured pressures (without time stamps).
                    
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/pressure_gauge/value@units)
DEBUG - value: mbar 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/value
NXsensor.nxdl.xml:/value
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/value@units [NX_PRESSURE]
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/source_probe [NXxps::/NXentry/NXinstrument/NXsource]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/source_probe" (7 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/source_probe
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe
NXinstrument.nxdl.xml:/SOURCE
NXsource.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/source_probe):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe):
DEBUG - 
                    The source used to generate the :ref:`beam_probe </NXmpes/ENTRY/INSTRUMENT/beam_probe-group>`.
                    
                    Properties refer strictly to parameters of the source, not of the output beam. For example,
                    the energy of the source is not the optical power of the beam, but the energy of the electron beam
                    in a synchrotron or similar.
                
DEBUG - documentation (NXinstrument.nxdl.xml:/SOURCE):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:):
DEBUG - 
		Radiation source emitting a beam.

		Examples include particle sources (electrons, neutrons, protons) or sources for electromagnetic radiation (photons).
		This base class can also be used to describe neutron or x-ray storage ring/facilities.
   
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/source_probe@NX_class)
DEBUG - value: NXsource 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/source_probe
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe
NXinstrument.nxdl.xml:/SOURCE
NXsource.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/source_probe/associated_beam): <HDF5 dataset "associated_beam": shape (), type "|O">
DEBUG - value: /entry/instrument/beam_probe 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/associated_beam
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/associated_beam):
DEBUG - 
                        A reference to a beam emitted by this source.
                        Should be named with the same suffix, e.g.,
                        for ``source_probe`` it should refer to ``beam_probe``.
                        
                        Example:
                          * /entry/instrument/source_probe/associated_beam = /entry/instrument/beam_probe
                    
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/source_probe/current): <HDF5 dataset "current": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']
DEBUG - classes:
NXsource.nxdl.xml:/current
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsource.nxdl.xml:/current):
DEBUG - Accelerator, X-ray tube, or storage ring current
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/source_probe/current@units)
DEBUG - value: A 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']
DEBUG - classes:
NXsource.nxdl.xml:/current
DEBUG - NXsource.nxdl.xml:/current@units [NX_CURRENT]
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/instrument/source_probe/device_information [NXxps::/NXentry/NXinstrument/NXsource/NXfabrication]): <HDF5 group "/Au_in_vacuum__Au4f/instrument/source_probe/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information
NXsource.nxdl.xml:/FABRICATION
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXcomponent.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/source_probe/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information
NXsource.nxdl.xml:/FABRICATION
NXcomponent.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/source_probe/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: µFOCUS 500 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/source_probe/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: SPECS GmbH 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/source_probe/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Phoibos1D 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/name
NXsource.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/name):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:/name):
DEBUG - Name of source
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/source_probe/probe): <HDF5 dataset "probe": shape (), type "|O">
DEBUG - value: photon 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/probe
NXsource.nxdl.xml:/probe
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsource.nxdl.xml:/probe):
DEBUG - -> neutron
DEBUG - -> photon
DEBUG - -> x-ray
DEBUG - -> muon
DEBUG - -> electron
DEBUG - -> ultraviolet
DEBUG - -> visible light
DEBUG - -> positron
DEBUG - -> proton
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/probe):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:/probe):
DEBUG - type of radiation probe (pick one from the enumerated list and spell exactly)
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/source_probe/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: Fixed Tube X-ray 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/type
NXsource.nxdl.xml:/type
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/type):
DEBUG - -> Synchrotron X-ray Source
DEBUG - -> Rotating Anode X-ray
DEBUG - -> Fixed Tube X-ray
DEBUG - -> UV Laser
DEBUG - -> Free-Electron Laser
DEBUG - -> Optical Laser
DEBUG - -> UV Plasma Source
DEBUG - -> Metal Jet X-ray
DEBUG - -> HHG laser
DEBUG - -> UV lamp
DEBUG - -> Monochromatized electron source
DEBUG - enumeration (NXsource.nxdl.xml:/type):
DEBUG - -> Spallation Neutron Source
DEBUG - -> Pulsed Reactor Neutron Source
DEBUG - -> Reactor Neutron Source
DEBUG - -> Synchrotron X-ray Source
DEBUG - -> Pulsed Muon Source
DEBUG - -> Rotating Anode X-ray
DEBUG - -> Fixed Tube X-ray
DEBUG - -> UV Laser
DEBUG - -> Free-Electron Laser
DEBUG - -> Optical Laser
DEBUG - -> Ion Source
DEBUG - -> UV Plasma Source
DEBUG - -> Metal Jet X-ray
DEBUG - -> Laser
DEBUG - -> Dye Laser
DEBUG - -> Broadband Tunable Light Source
DEBUG - -> Halogen Lamp
DEBUG - -> LED
DEBUG - -> Mercury Cadmium Telluride Lamp
DEBUG - -> Deuterium Lamp
DEBUG - -> Xenon Lamp
DEBUG - -> Globar
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/source_probe/type):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:/type):
DEBUG - type of radiation source (pick one from the enumerated list and spell exactly)
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/instrument/source_probe/voltage): <HDF5 dataset "voltage": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']
DEBUG - classes:
NXsource.nxdl.xml:/voltage
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsource.nxdl.xml:/voltage):
DEBUG - Accelerator voltage
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/instrument/source_probe/voltage@units)
DEBUG - value: V 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_FLOAT']
DEBUG - classes:
NXsource.nxdl.xml:/voltage
DEBUG - NXsource.nxdl.xml:/voltage@units [NX_VOLTAGE]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/method): <HDF5 dataset "method": shape (), type "|O">
DEBUG - value: X-ray photoelectron spectroscopy (XPS) 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/method
NXmpes.nxdl.xml:/ENTRY/method
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/method):
DEBUG - 
                A name of the experimental method according to `Clause 11`_ of
                the `ISO 18115-1:2023`_ specification.
                
                Examples for XPS-related experiments include:
                    * X-ray photoelectron spectroscopy (XPS)
                    * angle-resolved X-ray photoelectron spectroscopy (ARXPS)
                    * ultraviolet photoelectron spectroscopy (UPS)
                    * hard X-ray photoemission spectroscopy (HAXPES)
                    * near ambient pressure X-ray photoelectron spectroscopy (NAPXPS)
                    * electron spectroscopy for chemical analysis (ESCA)
                
                .. _ISO 18115-1:2023: https://www.iso.org/standard/74811.html
                .. _Clause 11: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:sec:11
            
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/method):
DEBUG - 
                Name of the experimental method.
                
                If applicable, this name should match the terms given by `Clause 11`_ of
                the `ISO 18115-1:2023`_ specification.
                
                Examples include:
                    * X-ray photoelectron spectroscopy (XPS)
                    * angle-resolved X-ray photoelectron spectroscopy (ARXPS)
                    * ultraviolet photoelectron spectroscopy (UPS)
                    * angle-resolved photoelectron spectroscopy (ARPES)
                    * hard X-ray photoemission spectroscopy (HAXPES)
                    * near ambient pressure X-ray photoelectron spectroscopy (NAPXPS)
                    * photoelectron emission microscopy (PEEM)
                    * electron spectroscopy for chemical analysis (ESCA)
                    * time-resolved angle-resolved X-ray photoelectron spectroscopy (trARPES)
                    * spin-resolved angle-resolved X-ray photoelectron spectroscopy (spin-ARPES)
                    * momentum microscopy
                
                .. _ISO 18115-1:2023: https://www.iso.org/standard/74811.html
                .. _Clause 11: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:sec:11
            
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/program_name): <HDF5 dataset "program_name": shape (), type "|O">
DEBUG - value: SpecsLabProdigy 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXentry.nxdl.xml:/program_name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/program_name):
DEBUG - Name of program used to generate this file
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample [NXxps::/NXentry/NXsample]): <HDF5 group "/Au_in_vacuum__Au4f/sample" (12 members)>
DEBUG - classpath: ['NXentry', 'NXsample']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE
NXmpes.nxdl.xml:/ENTRY/SAMPLE
NXentry.nxdl.xml:/SAMPLE
NXsample.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE):
DEBUG - 
DEBUG - documentation (NXentry.nxdl.xml:/SAMPLE):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:):
DEBUG - 
		Any information on the sample. 
		
		This could include scanned variables that
		are associated with one of the data dimensions, e.g. the magnetic field, or
		logged data, e.g. monitored temperature vs elapsed time.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample@NX_class)
DEBUG - value: NXsample 
DEBUG - classpath: ['NXentry', 'NXsample']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE
NXmpes.nxdl.xml:/ENTRY/SAMPLE
NXentry.nxdl.xml:/SAMPLE
NXsample.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/atom_types): <HDF5 dataset "atom_types": shape (), type "|O">
DEBUG - value: Au 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/atom_types
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/atom_types):
DEBUG - 
                    Array of comma-separated elements from the periodic table
                    that are contained in the sample.
                    If the sample substance has multiple components, all
                    elements from each component must be included in `atom_types`.
                
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/bias_env [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/Au_in_vacuum__Au4f/sample/bias_env" (2 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env):
DEBUG - 
                    Bias of the sample with respect to analyzer ground and actuators/sensors
                    controlling/measuring it.
                    
                    This concept is related to term `8.41`_ of the ISO 18115-1:2023 standard.
                    
                    .. _8.41: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:8.41
                
DEBUG - documentation (NXsample.nxdl.xml:/ENVIRONMENT):
DEBUG - 
			Any environmental or external stimuli/measurements.
			These can include, among others:
			applied pressure, surrounding gas phase and gas pressure,
			external electric/magnetic/mechanical fields, temperature, ...
		
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - Parameters for controlling external conditions
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/bias_env@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/bias_env/potentiostat [NXxps::/NXentry/NXsample/NXenvironment/NXactuator]): <HDF5 group "/Au_in_vacuum__Au4f/sample/bias_env/potentiostat" (3 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/potentiostat
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/potentiostat):
DEBUG - 
                        Actuator applying a voltage to sample and sample holder.
                        
                        In most cases, this can be a link to /entry/instrument/manipulator/sample_bias_potentiostat
                        if a manipulator is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/ACTUATOR):
DEBUG - 
             Any actuator used to control the environment. This can be linked to an actuator
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/bias_env/potentiostat@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/potentiostat
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/bias_env/potentiostat@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_potentiostat 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/potentiostat
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/bias_env/potentiostat/actuation_target): <HDF5 dataset "actuation_target": shape (), type "|O">
DEBUG - value: voltage 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/actuation_target
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/actuation_target):
DEBUG - 
             The physical component on which this actuator acts.
             This should be a path in the NeXus tree structure.
             For example, this could be an instance of NXsample or a device on NXinstrument.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/bias_env/potentiostat/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: XPS sample potentiostat 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/bias_env/potentiostat/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: potentiostat 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/bias_env/voltmeter [NXxps::/NXentry/NXsample/NXenvironment/NXsensor]): <HDF5 group "/Au_in_vacuum__Au4f/sample/bias_env/voltmeter" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/voltmeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/voltmeter):
DEBUG - 
                        Sensor measuring the applied voltage.
                        
                        In most cases, this can be a link to /entry/instrument/manipulator/sample_bias_voltmeter
                        if a manipulator is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/SENSOR):
DEBUG - 
             Any sensor used to monitor the environment. This can be linked to a sensor
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/bias_env/voltmeter@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/voltmeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/bias_env/voltmeter@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/manipulator/sample_bias_voltmeter 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias_env/voltmeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/bias_env/voltmeter/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: voltage 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/measurement
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/bias_env/voltmeter/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: XPS sample voltmeter 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/bias_env/voltmeter/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: oscilloscope 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/bias_env/voltmeter/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/bias_env/voltmeter/value@units)
DEBUG - value: V 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/chemical_formula): <HDF5 dataset "chemical_formula": shape (), type "|O">
DEBUG - value: Au 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/chemical_formula
NXsample.nxdl.xml:/chemical_formula
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/chemical_formula):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:/chemical_formula):
DEBUG - 
			The chemical formula specified using CIF conventions.
			Abbreviated version of CIF standard: 
			
			* Only recognized element symbols may be used.
			* Each element symbol is followed by a 'count' number. A count of '1' may be omitted.
			* A space or parenthesis must separate each cluster of (element symbol + count).
			* Where a group of elements is enclosed in parentheses, the multiplier for the 
			  group must follow the closing parentheses. That is, all element and group 
			  multipliers are assumed to be printed as subscripted numbers.
			* Unless the elements are ordered in a manner that corresponds to their chemical 
			  structure, the order of the elements within any group or moiety depends on 
			  whether or not carbon is present.
			* If carbon is present, the order should be: 
			
			  - C, then H, then the other elements in alphabetical order of their symbol. 
			  - If carbon is not present, the elements are listed purely in alphabetic order of their symbol. 
			  
			* This is the *Hill* system used by Chemical Abstracts.
		
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/drain_current_env [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/Au_in_vacuum__Au4f/sample/drain_current_env" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env):
DEBUG - 
                    Drain current of the sample and sample holder.
                
DEBUG - documentation (NXsample.nxdl.xml:/ENVIRONMENT):
DEBUG - 
			Any environmental or external stimuli/measurements.
			These can include, among others:
			applied pressure, surrounding gas phase and gas pressure,
			external electric/magnetic/mechanical fields, temperature, ...
		
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - Parameters for controlling external conditions
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/drain_current_env@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/drain_current_env/ammeter [NXxps::/NXentry/NXsample/NXenvironment/NXsensor]): <HDF5 group "/Au_in_vacuum__Au4f/sample/drain_current_env/ammeter" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env/ammeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env/ammeter):
DEBUG - 
                        Ammeter measuring the drain current of the sample and sample holder.
                        
                        In most cases, this can be a link to /entry/instrument/manipulator/drain_current_ammeter
                        if a manipulator is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/SENSOR):
DEBUG - 
             Any sensor used to monitor the environment. This can be linked to a sensor
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/drain_current_env/ammeter@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env/ammeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/drain_current_env/ammeter@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/manipulator/drain_current_ammeter 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current_env/ammeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/drain_current_env/ammeter/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: current 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/measurement
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/drain_current_env/ammeter/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: ammeter 1.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/drain_current_env/ammeter/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: wire 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/drain_current_env/ammeter/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 0.1 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/drain_current_env/ammeter/value@units)
DEBUG - value: nA 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/flood_gun_current_env [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/Au_in_vacuum__Au4f/sample/flood_gun_current_env" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env):
DEBUG - 
                    Current of low-energy electrons to the sample (for charge neutralization) and
                    actuators/sensors controlling/measuring it.
                
DEBUG - documentation (NXsample.nxdl.xml:/ENVIRONMENT):
DEBUG - 
			Any environmental or external stimuli/measurements.
			These can include, among others:
			applied pressure, surrounding gas phase and gas pressure,
			external electric/magnetic/mechanical fields, temperature, ...
		
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - Parameters for controlling external conditions
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/flood_gun_current_env@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/flood_gun_current_env/flood_gun [NXxps::/NXentry/NXsample/NXenvironment/NXactuator]): <HDF5 group "/Au_in_vacuum__Au4f/sample/flood_gun_current_env/flood_gun" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env/flood_gun
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env/flood_gun):
DEBUG - 
                        Flood gun creating a current of low-energy electrons.
                        
                        In most cases this can be a link to /entry/instrument/flood_gun
                        if a flood_gun is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/ACTUATOR):
DEBUG - 
             Any actuator used to control the environment. This can be linked to an actuator
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/flood_gun_current_env/flood_gun@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env/flood_gun
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/flood_gun_current_env/flood_gun@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/flood_gun 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current_env/flood_gun
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/flood_gun_current_env/flood_gun/actuation_target): <HDF5 dataset "actuation_target": shape (), type "|O">
DEBUG - value: current 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/actuation_target
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/actuation_target):
DEBUG - 
             The physical component on which this actuator acts.
             This should be a path in the NeXus tree structure.
             For example, this could be an instance of NXsample or a device on NXinstrument.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/flood_gun_current_env/flood_gun/current): <HDF5 dataset "current": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - NOT IN SCHEMA
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/flood_gun_current_env/flood_gun/current@units)
DEBUG - value: A 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/flood_gun_current_env/flood_gun/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: FG 22/35 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/flood_gun_current_env/flood_gun/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: low energy electron source 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/gas_pressure_env [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/Au_in_vacuum__Au4f/sample/gas_pressure_env" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env):
DEBUG - 
                    Gas pressure surrounding the sample and actuators/sensors controlling/measuring
                    it.
                
DEBUG - documentation (NXsample.nxdl.xml:/ENVIRONMENT):
DEBUG - 
			Any environmental or external stimuli/measurements.
			These can include, among others:
			applied pressure, surrounding gas phase and gas pressure,
			external electric/magnetic/mechanical fields, temperature, ...
		
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - Parameters for controlling external conditions
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/gas_pressure_env@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/gas_pressure_env/pressure_gauge [NXxps::/NXentry/NXsample/NXenvironment/NXsensor]): <HDF5 group "/Au_in_vacuum__Au4f/sample/gas_pressure_env/pressure_gauge" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env/pressure_gauge
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env/pressure_gauge):
DEBUG - 
                        Gauge measuring the gas pressure.
                        
                        In most cases, this can be a link to /entry/instrument/pressure_gauge or to another
                        NXsensor measuring gas pressure (typically, the gauge in closest proximity to the
                        sample) if such a pressure gauge is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/SENSOR):
DEBUG - 
             Any sensor used to monitor the environment. This can be linked to a sensor
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/gas_pressure_env/pressure_gauge@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env/pressure_gauge
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/gas_pressure_env/pressure_gauge@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/pressure_gauge 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure_env/pressure_gauge
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/gas_pressure_env/pressure_gauge/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: pressure 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/measurement
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/gas_pressure_env/pressure_gauge/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Atmion 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/gas_pressure_env/pressure_gauge/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: hot-filament ionization gauge 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/gas_pressure_env/pressure_gauge/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 1e-09 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/gas_pressure_env/pressure_gauge/value@units)
DEBUG - value: mbar 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/history [NXxps::/NXentry/NXsample/NXhistory]): <HDF5 group "/Au_in_vacuum__Au4f/sample/history" (2 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history
NXsample.nxdl.xml:/history
NXhistory.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history):
DEBUG - 
                    A set of activities that occurred to the sample prior to/during photoemission
                    experiment.
                
DEBUG - documentation (NXsample.nxdl.xml:/history):
DEBUG - 
        	A set of physical processes that occurred to the sample prior/during experiment.
		
DEBUG - documentation (NXhistory.nxdl.xml:):
DEBUG - 
        A set of activities that occurred to a physical entity prior/during experiment.
        
        Ideally, a full report of the previous operations (or links to a chain of operations).
        Alternatively, notes allow for additional descriptors in any format.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/history@NX_class)
DEBUG - value: NXhistory 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history
NXsample.nxdl.xml:/history
NXhistory.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/history/sample_loading [NXxps::/NXentry/NXsample/NXhistory/NXactivity]): <HDF5 group "/Au_in_vacuum__Au4f/sample/history/sample_loading" (3 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity']
DEBUG - classes:
NXhistory.nxdl.xml:/ACTIVITY
NXactivity.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXhistory.nxdl.xml:/ACTIVITY):
DEBUG - 
            Any activity that was performed on the physical entity prior or during the
            experiment.
        
DEBUG - documentation (NXactivity.nxdl.xml:):
DEBUG - 
         A planned or unplanned action that has a temporal extension and for some time depends on some entity.
         
         This class is a super class for all other activities.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/history/sample_loading@NX_class)
DEBUG - value: NXactivity 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity']
DEBUG - classes:
NXhistory.nxdl.xml:/ACTIVITY
NXactivity.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/history/sample_loading/description): <HDF5 dataset "description": shape (), type "|O">
DEBUG - value: vacuum transfer, loaded in the endstation and transferred to analysis chamber 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_CHAR']
DEBUG - classes:
NXactivity.nxdl.xml:/description
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactivity.nxdl.xml:/description):
DEBUG - 
             Short description of the activity.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/history/sample_loading/end_time): <HDF5 dataset "end_time": shape (), type "|O">
DEBUG - value: 2022-04-08T11:03:00.020000+00:00 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_DATE_TIME']
DEBUG - classes:
NXactivity.nxdl.xml:/end_time
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactivity.nxdl.xml:/end_time):
DEBUG - 
             End time of this activity. It is recommended to include local time zone information.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/history/sample_loading/start_time): <HDF5 dataset "start_time": shape (), type "|O">
DEBUG - value: 2022-04-08T11:02:00.020000+00:00 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_DATE_TIME']
DEBUG - classes:
NXactivity.nxdl.xml:/start_time
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactivity.nxdl.xml:/start_time):
DEBUG - 
            Start time of this activity. It is recommended to include local time zone information.
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/history/sample_preparation [NXxps::/NXentry/NXsample/NXhistory/NXactivity]): <HDF5 group "/Au_in_vacuum__Au4f/sample/history/sample_preparation" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation
NXhistory.nxdl.xml:/ACTIVITY
NXactivity.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation):
DEBUG - 
                        Details about the sample preparation for the photoemission experiment (e.g. UHV cleaving,
                        in-situ growth, sputtering/annealing, etc.).
                    
DEBUG - documentation (NXhistory.nxdl.xml:/ACTIVITY):
DEBUG - 
            Any activity that was performed on the physical entity prior or during the
            experiment.
        
DEBUG - documentation (NXactivity.nxdl.xml:):
DEBUG - 
         A planned or unplanned action that has a temporal extension and for some time depends on some entity.
         
         This class is a super class for all other activities.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/history/sample_preparation@NX_class)
DEBUG - value: NXactivity 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation
NXhistory.nxdl.xml:/ACTIVITY
NXactivity.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/history/sample_preparation/description): <HDF5 dataset "description": shape (), type "|O">
DEBUG - value: sputter cleaned with Ar ions for 20 min 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_CHAR']
DEBUG - classes:
NXactivity.nxdl.xml:/description
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactivity.nxdl.xml:/description):
DEBUG - 
             Short description of the activity.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/history/sample_preparation/end_time): <HDF5 dataset "end_time": shape (), type "|O">
DEBUG - value: 2022-04-08T11:45:00.200000+00:00 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_DATE_TIME']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/end_time
NXactivity.nxdl.xml:/end_time
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/end_time):
DEBUG - 
DEBUG - documentation (NXactivity.nxdl.xml:/end_time):
DEBUG - 
             End time of this activity. It is recommended to include local time zone information.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/history/sample_preparation/method): <HDF5 dataset "method": shape (), type "|O">
DEBUG - value: Ar sputtering 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/method
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/method):
DEBUG - 
                            Details about the method of sample preparation before the photoemission
                            experiment.
                        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/history/sample_preparation/start_time): <HDF5 dataset "start_time": shape (), type "|O">
DEBUG - value: 2022-04-08T11:25:00.200000+00:00 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXactivity', 'NX_DATE_TIME']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/start_time
NXactivity.nxdl.xml:/start_time
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/start_time):
DEBUG - 
DEBUG - documentation (NXactivity.nxdl.xml:/start_time):
DEBUG - 
            Start time of this activity. It is recommended to include local time zone information.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/identifier): <HDF5 dataset "identifier": shape (), type "|O">
DEBUG - value: S718 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/identifier
NXobject.nxdl.xml:/identifierNAME
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/identifier):
DEBUG - 
DEBUG - documentation (NXobject.nxdl.xml:/identifierNAME):
DEBUG - 
			An identifier for a (persistent) resource.

			An identifier, provided by some authority, that has been assigned to an
			object described by this ``NXobject``. To be useful, the identifier
			must not be reassigned to a different real-world object. It is typical for
			there to be some mechanism to resolve an identifier, obtaining metadata
			about the object. Identifiers for which some guarantees exist regarding
			this resolution process are called persistent identifiers.
			Persistent identifiers are also known as PIDs.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Polycristalline Au foil 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/name
NXsample.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/name):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:/name):
DEBUG - Descriptive name of sample
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/physical_form): <HDF5 dataset "physical_form": shape (), type "|O">
DEBUG - value: foil 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/physical_form
NXsample.nxdl.xml:/physical_form
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/physical_form):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:/physical_form):
DEBUG - 
			Physical form of the sample material.
			Examples include single crystal, foil, pellet, powder, thin film, disc, foam, gas, liquid, amorphous.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/situation): <HDF5 dataset "situation": shape (), type "|O">
DEBUG - value: vacuum 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/situation
NXsample.nxdl.xml:/situation
DEBUG - <<RECOMMENDED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/SAMPLE/situation):
DEBUG - -> vacuum
DEBUG - -> inert atmosphere
DEBUG - -> oxidizing atmosphere
DEBUG - -> reducing atmosphere
DEBUG - enumeration (NXsample.nxdl.xml:/situation):
DEBUG - -> air
DEBUG - -> vacuum
DEBUG - -> inert atmosphere
DEBUG - -> oxidising atmosphere
DEBUG - -> reducing atmosphere
DEBUG - -> sealed can
DEBUG - -> other
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/situation):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:/situation):
DEBUG - 
			The atmosphere will be one of the components, which is where 
			its details will be stored; the relevant components will be 
			indicated by the entry in the sample_component member.
		
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/temperature_env [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/Au_in_vacuum__Au4f/sample/temperature_env" (2 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env
NXsample.nxdl.xml:/temperature_env
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env):
DEBUG - 
                    Sample temperature (either controlled or just measured) and actuators/sensors
                    controlling/measuring it.
                
DEBUG - documentation (NXsample.nxdl.xml:/temperature_env):
DEBUG - Additional sample temperature environment information
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - Parameters for controlling external conditions
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/temperature_env@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env
NXsample.nxdl.xml:/temperature_env
NXenvironment.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/temperature_env/sample_heater [NXxps::/NXentry/NXsample/NXenvironment/NXactuator]): <HDF5 group "/Au_in_vacuum__Au4f/sample/temperature_env/sample_heater" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/sample_heater
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/sample_heater):
DEBUG - 
                        Device to heat the sample.
                        
                        In most cases, this can be a link to /entry/instrument/manipulator/sample_heater
                        if a manipulator is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/ACTUATOR):
DEBUG - 
             Any actuator used to control the environment. This can be linked to an actuator
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/temperature_env/sample_heater@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/sample_heater
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/temperature_env/sample_heater@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/manipulator/sample_heater 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/sample_heater
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/temperature_env/sample_heater/actuation_target): <HDF5 dataset "actuation_target": shape (), type "|O">
DEBUG - value: temperature 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/actuation_target
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/actuation_target):
DEBUG - 
             The physical component on which this actuator acts.
             This should be a path in the NeXus tree structure.
             For example, this could be an instance of NXsample or a device on NXinstrument.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/temperature_env/sample_heater/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Coherent Compact Evolution IR Diode LASER (DILAS) 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/temperature_env/sample_heater/output_heater_power): <HDF5 dataset "output_heater_power": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_NUMBER']
DEBUG - classes:
NXactuator.nxdl.xml:/outputVALUE
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/outputVALUE):
DEBUG - 
             Any output that the actuator produces.
             For example, a heater can have the field output_power(NX_NUMBER).
        
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/temperature_env/sample_heater/output_heater_power@units)
DEBUG - value: W 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_NUMBER']
DEBUG - classes:
NXactuator.nxdl.xml:/outputVALUE
DEBUG - NXactuator.nxdl.xml:/outputVALUE@units [NX_ANY]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/temperature_env/sample_heater/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: IR diode laser 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/sample/temperature_env/temperature_sensor [NXxps::/NXentry/NXsample/NXenvironment/NXsensor]): <HDF5 group "/Au_in_vacuum__Au4f/sample/temperature_env/temperature_sensor" (5 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/temperature_sensor
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/temperature_sensor):
DEBUG - 
                        Temperature sensor measuring the sample temperature.
                        
                        In most cases, this can be a link to /entry/instrument/manipulator/temperature_sensor
                        if a manipulator is present in the instrument.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/SENSOR):
DEBUG - 
             Any sensor used to monitor the environment. This can be linked to a sensor
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
		A sensor used to monitor an external condition 
		
		The condition itself is described in :ref:`NXenvironment`.
	
DEBUG - documentation (NXcomponent.nxdl.xml:):
DEBUG - 
         Base class for components of an instrument - real ones or simulated ones.
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/temperature_env/temperature_sensor@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/temperature_sensor
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/temperature_env/temperature_sensor@target)
DEBUG - value: /Au_in_vacuum__Au4f/instrument/manipulator/temperature_sensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature_env/temperature_sensor
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
NXcomponent.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @target - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/temperature_env/temperature_sensor/attached_to): <HDF5 dataset "attached_to": shape (), type "|O">
DEBUG - value: sample 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/attached_to
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/attached_to):
DEBUG - where sensor is attached to ("sample" | "can")
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/temperature_env/temperature_sensor/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: temperature 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/measurement
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - name for measured signal
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/temperature_env/temperature_sensor/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: type K thermocouple 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/name
NXcomponent.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - Name for the sensor
DEBUG - documentation (NXcomponent.nxdl.xml:/name):
DEBUG - 
            Name of the component.
        
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/temperature_env/temperature_sensor/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: type K thermocouple 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
			The type of hardware used for the measurement.  
			Examples (suggestions but not restrictions):
			
			:Temperature:
			  J | K | T | E | R | S | Pt100 | Rh/Fe
			:pH:
			  Hg/Hg2Cl2 | Ag/AgCl | ISFET
			:Ion selective electrode:
			  specify species; e.g. Ca2+
			:Magnetic field:
			  Hall
			:Surface pressure:
			  wilhelmy plate
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/sample/temperature_env/temperature_sensor/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 298.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
			nominal setpoint or average value 
			- need [n] as may be a vector
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/sample/temperature_env/temperature_sensor/value@units)
DEBUG - value: K 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/start_time): <HDF5 dataset "start_time": shape (), type "|O">
DEBUG - value: 2022-04-08T11:47:02.020000+00:00 
DEBUG - classpath: ['NXentry', 'NX_DATE_TIME']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/start_time
NXentry.nxdl.xml:/start_time
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/start_time):
DEBUG - 
                Datetime of the start of the measurement.
                Should be an ISO8601 date/time stamp. It is recommended to add an explicit time zone,
                otherwise the local time zone is assumed per ISO8601.
            
DEBUG - documentation (NXentry.nxdl.xml:/start_time):
DEBUG - Starting time of measurement
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/title): <HDF5 dataset "title": shape (), type "|O">
DEBUG - value: EX439_S718_Au in 25 mbar O2 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/title
NXentry.nxdl.xml:/title
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/title):
DEBUG - 
DEBUG - documentation (NXentry.nxdl.xml:/title):
DEBUG - Extended title for entry
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/transmission_correction [NXxps::/NXentry/NXcalibration]): <HDF5 group "/Au_in_vacuum__Au4f/transmission_correction" (2 members)>
DEBUG - classpath: ['NXentry', 'NXcalibration']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/transmission_correction
NXmpes.nxdl.xml:/ENTRY/transmission_correction
NXcalibration.nxdl.xml:
NXprocess.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/transmission_correction):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/transmission_correction):
DEBUG - 
                In the transmission correction, each intensity measurement for electrons of a given
                kinetic energy is multiplied by the corresponding value in the relative_intensity
                field of the transmission_function. This calibration procedure is used to account for
                energy-dependent transmission efficiencies in certain lens modes.
            
DEBUG - documentation (NXcalibration.nxdl.xml:):
DEBUG - 
        Subclass of NXprocess to describe post-processing calibrations.
    
DEBUG - documentation (NXprocess.nxdl.xml:):
DEBUG - 
        The :ref:`NXprocess` class describes an operation used to
        process data as part of an analysis workflow, providing
        information such as the software used, the date of the
        operation, the input parameters, and the resulting data. 
    
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/transmission_correction@NX_class)
DEBUG - value: NXcalibration 
DEBUG - classpath: ['NXentry', 'NXcalibration']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/transmission_correction
NXmpes.nxdl.xml:/ENTRY/transmission_correction
NXcalibration.nxdl.xml:
NXprocess.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/transmission_correction/calibration_object [NXxps::/NXentry/NXcalibration/NXnote]): <HDF5 group "/Au_in_vacuum__Au4f/transmission_correction/calibration_object" (1 members)>
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote']
DEBUG - classes:
NXcalibration.nxdl.xml:/calibration_object
NXprocess.nxdl.xml:/NOTE
NXobject.nxdl.xml:/NOTE
NXnote.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcalibration.nxdl.xml:/calibration_object):
DEBUG - 
            A file serialization of a calibration which may not be publicly available (externally from the NeXus file).
            
            This metadata can be a documentation of the source (file) or database (entry) from which pieces
            of information have been extracted for consumption (e.g. in a research data management system (RDMS)).
            It is also possible to include the actual file by using the `file` field.
            
            The axis values may be copied or linked in the appropriate NXcalibration fields for reference.
        
DEBUG - documentation (NXprocess.nxdl.xml:/NOTE):
DEBUG - 
            The note will contain information about how the data was
            processed or anything about the data provenance. The
            contents of the note can be anything that the processing
            code can understand, or simple text.
            
            The name will be numbered to allow for ordering of steps.
        
DEBUG - documentation (NXobject.nxdl.xml:/NOTE):
DEBUG - 
DEBUG - documentation (NXnote.nxdl.xml:):
DEBUG - 
		Any additional freeform information not covered by the other base classes.
		
		This class can be used to store additional information in a 
		NeXus file e.g. pictures, movies, audio, additional text logs
	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/transmission_correction/calibration_object@NX_class)
DEBUG - value: NXnote 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote']
DEBUG - classes:
NXcalibration.nxdl.xml:/calibration_object
NXprocess.nxdl.xml:/NOTE
NXobject.nxdl.xml:/NOTE
NXnote.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/transmission_correction/calibration_object/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: file 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXnote', 'NX_CHAR']
DEBUG - classes:
NXnote.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXnote.nxdl.xml:/type):
DEBUG - Mime content type of note data field e.g. image/jpeg, text/plain, text/html
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/transmission_correction/transmission_function [NXxps::/NXentry/NXcalibration/NXdata]): <HDF5 group "/Au_in_vacuum__Au4f/transmission_correction/transmission_function" (2 members)>
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function
NXcalibration.nxdl.xml:/DATA
NXprocess.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function):
DEBUG - 
                    Transmission function of the electron analyzer.
                    
                    The transmission function (TF) specifies the detection efficiency for electrons of
                    different kinetic energy passing through the electron analyzer.
                    
                    This can be a link to /entry/instrument/electronanalyzer/transmission_function.
                
DEBUG - documentation (NXcalibration.nxdl.xml:/DATA):
DEBUG - 
            Any data acquired/used during the calibration that does not fit the `NX_FLOAT` fields above.
            NXdata groups can be used for multidimensional data which are relevant to the calibration
        
DEBUG - documentation (NXprocess.nxdl.xml:/DATA):
DEBUG - 
            The data resulting from the operation.
        
DEBUG - documentation (NXobject.nxdl.xml:/DATA):
DEBUG - 
DEBUG - documentation (NXdata.nxdl.xml:):
DEBUG - 
		The :ref:`NXdata` class is designed to encapsulate all the information required for a set of data to be plotted.
		NXdata groups contain plottable data (also referred to as *signals* or *dependent variables*) and their
		associated axis coordinates (also referred to as *axes* or *independent variables*).

		The actual names of the :ref:`DATA </NXdata/DATA-field>` and :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
		can be chosen :ref:`freely <validItemName>`, as indicated by the upper case (this is a common convention in all NeXus classes).
		
		.. note:: ``NXdata`` provides data and coordinates to be plotted but
			does not describe how the data is to be plotted or even the dimensionality of the plot.
			https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute

		.. include:: data/index.rst
		   :start-line: 1

		.. admonition:: Example of a simple curve plot

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x"]
				  data: float[100]
				  x: float[100]

		More complex cases are supported

		* histogram data: ``x`` has one more value than ``data``.
		* alternative axes: instead of a single ``x`` axis you can have several axes, one of which being the default.
		* signals with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` along each dimension.
		* axes with more than one dimension: ``data`` could be 2D with axes ``x`` and ``y`` also being 2D, providing a
		  unique ``(x, y)`` coordinate for each ``data`` point.

		**Signals:**

		.. index:: plotting

		.. admonition:: Defined by

			* :ref:`DATA </NXdata/DATA-field>` fields
			* the :ref:`signal </NXdata@signal-attribute>` attribute
			* the :ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute

		The :ref:`DATA </NXdata/DATA-field>` fields contain the signal values to be plotted. The name of the field
		to be used as the *default plot signal* is provided by the :ref:`signal </NXdata@signal-attribute>` attribute.
		The names of the fields to be used as *secondary plot signals* are provided by the
		:ref:`auxiliary_signals</NXdata@auxiliary_signals-attribute>` attribute.

		.. admonition:: An example with three signals, one of which being the default

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  data1: float[10,20,30]  # the default signal
				  data2: float[10,20,30]
				  data3: float[10,20,30]

		**Axes:**

		.. index:: axes (attribute)
		.. index:: coordinates

		.. admonition:: Defined by

			* :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			* the :ref:`axes </NXdata@axes-attribute>` attribute
			* :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes

		The fields and attributes are defined as follows

		1. The :ref:`AXISNAME </NXdata/AXISNAME-field>` fields contain the axis coordinates associated with the signal values.

		2. The :ref:`axes </NXdata@axes-attribute>` attribute provides the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   fields to be used as the `default axis` for each dimension of the :ref:`DATA </NXdata/DATA-field>` fields.

		3. The :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` attributes describe the :ref:`DATA </NXdata/DATA-field>`
		   dimensions spanned by the corresponding :ref:`AXISNAME </NXdata/AXISNAME-field>` fields.

		The fields and attributes have the following constraints

		1. The length of the :ref:`axes </NXdata@axes-attribute>` attribute must be equal to the rank of the :ref:`DATA </NXdata/DATA-field>`
		   fields. When a particular dimension has no default axis, the string “.” is used in that position.

		2. The number of values in :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` must be equal to the rank of the corresponding
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		3. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is missing for a given
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field, the positions of the :ref:`AXISNAME </NXdata/AXISNAME-field>`
		   field name in the :ref:`axes </NXdata@axes-attribute>` attribute are used.

		4. When :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>` is the same as the indices of "AXISNAME" in the
		   :ref:`axes </NXdata@axes-attribute>` attribute, there is no need to provide
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		5. The indices of "AXISNAME" in the :ref:`axes </NXdata@axes-attribute>` attribute must be a subset of
		   :ref:`AXISNAME_indices </NXdata@AXISNAME_indices-attribute>`.

		6. The shape of an :ref:`AXISNAME </NXdata/AXISNAME-field>` field must correspond to the shape of the
		   :ref:`DATA </NXdata/DATA-field>` dimensions it spans. This means that for each dimension ``i`` in ``[0, AXISNAME.ndim)``
		   spanned by axis field :ref:`AXISNAME </NXdata/AXISNAME-field>`, the number of axis values ``AXISNAME.shape[i]``
		   along dimension ``i`` must be equal to the number of data points ``DATA.shape[AXISNAME_indices[i]]`` along dimension ``i``
		   or one more than the number of data points ``DATA.shape[AXISNAME_indices[i]]+1`` in case the
		   :ref:`AXISNAME </NXdata/AXISNAME-field>` field contains histogram bin edges along dimension ``i``.

		Highlight consequences of these constraints

		1. An :ref:`AXISNAME </NXdata/AXISNAME-field>` field can have more than one dimension and can therefore span
		   more than one :ref:`DATA </NXdata/DATA-field>` dimension. Conversely, one :ref:`DATA </NXdata/DATA-field>` dimension
		   can be spanned by more than one :ref:`AXISNAME </NXdata/AXISNAME-field>` field. The default axis name (if any)
		   of each dimension can be found in the :ref:`axes </NXdata@axes-attribute>` attribute.

		2. A list of all available axes is not provided directly. All strings in the :ref:`axes </NXdata@axes-attribute>` attribute
		   (excluding the “.” string) are axis field names. In addition the prefix of an attribute ending with the string "_indices" is also
		   an axis field name.

		.. admonition:: The following example covers all axes features supported (see :ref:`sphx_glr_classes_base_classes_data_plot_fscan2d.py`)

			.. code-block::

				data:NXdata
				  @signal = "data"
				  @axes = ["x_set", "y_set", "."]  # default axes for all three dimensions
				  @x_encoder_indices = [0, 1]
				  @y_encoder_indices = 1           # or [1]
				  data: float[10,7,1024]
				  x_encoder: float[11,7]           # coordinates along the first and second dimensions
				  y_encoder: float[7]              # coordinates along the second dimension
				  x_set: float[10]                 # default coordinates along the first dimension
				  y_set: float[7]                  # default coordinates along the second dimension

		**Uncertainties:**

		.. admonition:: Defined by

			* :ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields

		Standard deviations on data values as well as coordinates can be provided by
		:ref:`FIELDNAME_errors </NXdata/FIELDNAME_errors-field>` fields where ``FIELDNAME`` is the name of a
		:ref:`DATA </NXdata/DATA-field>` field or an :ref:`AXISNAME </NXdata/AXISNAME-field>` field.

		.. admonition:: An example of uncertainties on the signal, auxiliary signals and axis coordinates

			.. code-block::

				data:NXdata
				  @signal = "data1"
				  @auxiliary_signals = ["data2", "data3"]
				  @axes = ["x", ".", "z"]
				  data1: float[10,20,30]
				  data2: float[10,20,30]
				  data3: float[10,20,30]
				  x: float[10]
				  z: float[30]
				  data1_errors: float[10,20,30]
				  data2_errors: float[10,20,30]
				  data3_errors: float[10,20,30]
				  x_errors: float[10]
				  z_errors: float[30]

	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/transmission_correction/transmission_function@NX_class)
DEBUG - value: NXdata 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function
NXcalibration.nxdl.xml:/DATA
NXprocess.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/transmission_correction/transmission_function@axes)
DEBUG - value: ['kinetic_energy'] 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function
NXcalibration.nxdl.xml:/DATA
NXprocess.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function@axes - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function/axes):
DEBUG - -> ['kinetic_energy']
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function/axes):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@axes - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/axes):
DEBUG - 
			.. index:: plotting

			The ``axes`` attribute is a list of strings which are the names of the :ref:`AXISNAME </NXdata/AXISNAME-field>` fields
			to be used as the default axis along every :ref:`DATA </NXdata/DATA-field>` dimension. As a result the length must
			be equal to the rank of the :ref:`DATA </NXdata/DATA-field>` fields. The string "." can be used for
			dimensions without a default axis.

			.. note::  When ``axes`` contains multiple strings, it must be saved as an actual array
				of strings and not a single comma separated string.
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/transmission_correction/transmission_function@signal)
DEBUG - value: relative_intensity 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function
NXcalibration.nxdl.xml:/DATA
NXprocess.nxdl.xml:/DATA
NXobject.nxdl.xml:/DATA
NXdata.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function@signal - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function/signal):
DEBUG - -> relative_intensity
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/transmission_correction/transmission_function/signal):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@signal - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/signal):
DEBUG - 
			.. index:: find the default plottable data
			.. index:: plotting
			.. index:: signal attribute value
			
			The value is the :ref:`name <validItemName>` of the signal that contains
			the default plottable data. This field or link *must* exist and be a direct child
			of this NXdata group.
			
			It is recommended (as of NIAC2014) to use this attribute
			rather than adding a signal attribute to the field.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
		
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/transmission_correction/transmission_function/kinetic_energy): <HDF5 dataset "kinetic_energy": shape (1001,), type "<f8">
DEBUG - value: [1311.61 1311.71 1311.81 ... 1411.41 1411.51 1411.61] 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
			Coordinate values along one or more :ref:`DATA </NXdata/DATA-field>` dimensions.

			The shape of an ``AXISNAME`` field must correspond to the shape of the :ref:`DATA </NXdata/DATA-field>`
			dimensions it spans. This means that for each ``i`` in ``[0, AXISNAME.ndim)`` the number of data points
			``DATA.shape[AXISNAME_indices[i]]`` must be equal to the number of coordinates ``AXISNAME.shape[i]`` or the
			number of bin edges ``AXISNAME.shape[i]+1`` in case of histogram data.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely <validItemName>`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/transmission_correction/transmission_function/kinetic_energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata', 'NX_CHAR_OR_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - NXdata.nxdl.xml:/AXISNAME@units - [NX_CHAR]
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME/units):
DEBUG - 
				Unit in which the coordinate values are expressed.
				See the section :ref:`Design-Units` for more information.
			
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/transmission_correction/transmission_function/relative_intensity): <HDF5 dataset "relative_intensity": shape (1001,), type "<f8">
DEBUG - value: [2.39209681 2.39200534 2.39191387 ... 2.30571545 2.30563353 2.30555162] 
DEBUG - classpath: ['NXentry', 'NXcalibration', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/DATA
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - documentation (NXdata.nxdl.xml:/DATA):
DEBUG - 
			.. index:: plotting

			Data values to be used as the NeXus *plottable data*. As the upper case ``DATA``
			indicates, the names of the ``DATA`` fields can be chosen :ref:`freely <validItemName>`. The :ref:`signal attribute </NXdata@signal-attribute>`
			and :ref:`auxiliary_signals attribute</NXdata@auxiliary_signals-attribute>` can be used to find all datasets in the ``NXdata``
			that contain data values.

			The maximum rank is ``32`` for compatibility with backend file formats.
		
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/user [NXxps::/NXentry/NXuser]): <HDF5 group "/Au_in_vacuum__Au4f/user" (5 members)>
DEBUG - classpath: ['NXentry', 'NXuser']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/USER
NXentry.nxdl.xml:/USER
NXuser.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/USER):
DEBUG - 
                Contact information of at least the user of the instrument or the investigator
                who performed this experiment. Adding multiple users if relevant is recommended.
            
DEBUG - documentation (NXentry.nxdl.xml:/USER):
DEBUG - 
DEBUG - documentation (NXuser.nxdl.xml:):
DEBUG - 
		Contact information for a user.  
		
		The format allows more 
		than one user with the same affiliation and contact information, 
		but a second :ref:`NXuser` group should be used if they have different 
		affiliations, etc.
	
DEBUG - documentation (NXobject.nxdl.xml:):
DEBUG - 
        This is the base object of NeXus. The groups and fields contained 
        within this file are allowed to be present in any derived base class.

        If nameType="partial", the placeholders (e.g., FIELDNAME or GROUPNAME)
        can be replaced by the name of any object (field or group, 
        respectively) that exists within the same group.
	
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/user@NX_class)
DEBUG - value: NXuser 
DEBUG - classpath: ['NXentry', 'NXuser']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/USER
NXentry.nxdl.xml:/USER
NXuser.nxdl.xml:
NXobject.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/user/address): <HDF5 dataset "address": shape (), type "|O">
DEBUG - value: Muelheim an der Ruhr 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXuser.nxdl.xml:/address
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXuser.nxdl.xml:/address):
DEBUG - Address of user
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/user/affiliation): <HDF5 dataset "affiliation": shape (), type "|O">
DEBUG - value: Max Planck Institute for Chemical Energy Conversion 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/USER/affiliation
NXuser.nxdl.xml:/affiliation
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/USER/affiliation):
DEBUG - 
                    Name of the affiliation of the user at the time when the experiment was
                    performed.
                
DEBUG - documentation (NXuser.nxdl.xml:/affiliation):
DEBUG - Affiliation of user
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/user/email): <HDF5 dataset "email": shape (), type "|O">
DEBUG - value: lukas.pielsticker@cec.mpg.de 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXuser.nxdl.xml:/email
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXuser.nxdl.xml:/email):
DEBUG - Email of user
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/user/identifier_orcid): <HDF5 dataset "identifier_orcid": shape (), type "|O">
DEBUG - value: 0000-0001-9361-8333 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXobject.nxdl.xml:/identifierNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXobject.nxdl.xml:/identifierNAME):
DEBUG - 
			An identifier for a (persistent) resource.

			An identifier, provided by some authority, that has been assigned to an
			object described by this ``NXobject``. To be useful, the identifier
			must not be reassigned to a different real-world object. It is typical for
			there to be some mechanism to resolve an identifier, obtaining metadata
			about the object. Identifiers for which some guarantees exist regarding
			this resolution process are called persistent identifiers.
			Persistent identifiers are also known as PIDs.
		
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/user/identifier_orcid@type)
DEBUG - value: ORCID 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXobject.nxdl.xml:/identifierNAME
DEBUG - NXobject.nxdl.xml:/identifierNAME@type - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXobject.nxdl.xml:/identifierNAME/type):
DEBUG - -> ARK
DEBUG - -> DOI
DEBUG - -> Hdl
DEBUG - -> IGSN
DEBUG - -> ISNI
DEBUG - -> ISSN
DEBUG - -> ISSN-L
DEBUG - -> ORCID
DEBUG - -> PURL
DEBUG - -> ROR
DEBUG - -> URL
DEBUG - -> URN
DEBUG - documentation (NXobject.nxdl.xml:/identifierNAME/type):
DEBUG - 
				The type of identifier used.

				It is recommended to use the most specific type when describing the identifier.
				
				For example, all IGSNs (see below) are DOIs and all DOIs are Handles; however, an IGSN should have type IGSN (and not DOI or Hdl).
				Similarly, an ARK, Purl, ORCID and ROR identifiers should have their corresponding types and should not use the more generic URL identifier.
			
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/user/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: Lukas Pielsticker 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/USER/name
NXuser.nxdl.xml:/name
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/USER/name):
DEBUG - 
                    Name of the user.
                
DEBUG - documentation (NXuser.nxdl.xml:/name):
DEBUG - Name of user responsible for this entry
DEBUG - ========================
DEBUG - === Default Plotable ===
DEBUG - ========================
DEBUG - 
DEBUG - NXentry has been identified: /Au_in_vacuum__Au4f
DEBUG - 
DEBUG - NXdata group has been identified: /Au_in_vacuum__Au4f/data
DEBUG - ===== GROUP (//Au_in_vacuum__Au4f/data [NXxps::/NXentry/NXdata]): <HDF5 group "/Au_in_vacuum__Au4f/data" (7 members)>
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/data@NX_class)
DEBUG - value: NXdata 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/data@axes)
DEBUG - value: ['energy'] 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/data@energy_indices)
DEBUG - value: 0 
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/data@signal)
DEBUG - value: data 
DEBUG - 
DEBUG - Signal has been identified: /Au_in_vacuum__Au4f/data/data
DEBUG - ===== FIELD (//Au_in_vacuum__Au4f/data/data): <HDF5 dataset "data": shape (1001,), type "<f8">
DEBUG - value: [162.22838  190.581135 182.15917  ...  73.648323  76.441442  65.09356 ] 
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - ===== ATTRS (//Au_in_vacuum__Au4f/data/data@units)
DEBUG - value: counts_per_second 
DEBUG - 
DEBUG - For Axis #0, 1 axes have been identified: [<HDF5 dataset "energy": shape (1001,), type "<f8">]
