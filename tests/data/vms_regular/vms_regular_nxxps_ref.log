DEBUG - ===== GROUP (//1_as_loaded__Survey [NXxps::/NXentry]): <HDF5 group "/1_as_loaded__Survey" (12 members)>
DEBUG - classpath: ['NXentry']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY
NXmpes.nxdl.xml:/ENTRY
NXentry.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY):
DEBUG - 
DEBUG - documentation (NXentry.nxdl.xml:):
DEBUG - 
         (**required**) :ref:`NXentry` describes the measurement.
         
         The top-level NeXus group which contains all the data and associated
         information that comprise a single measurement.
         It is mandatory that there is at least one
         group of this type in the NeXus file.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey@NX_class)
DEBUG - value: NXentry 
DEBUG - classpath: ['NXentry']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY
NXmpes.nxdl.xml:/ENTRY
NXentry.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey@default)
DEBUG - value: data 
DEBUG - classpath: ['NXentry']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY
NXmpes.nxdl.xml:/ENTRY
NXentry.nxdl.xml:
DEBUG - NXxps.nxdl.xml:/ENTRY@default - [NX_CHAR]
DEBUG - NXmpes.nxdl.xml:/ENTRY@default - [NX_CHAR]
DEBUG - NXentry.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXentry.nxdl.xml:/default):
DEBUG - 
             .. index:: find the default plottable data
             .. index:: plotting
             .. index:: default attribute value
             
             Declares which :ref:`NXdata` group contains the data
             to be shown by default.
             It is used to resolve ambiguity when
             one :ref:`NXdata` group exists.
             The value :ref:`names <validItemName>` a child group.  If that group
             itself has a ``default`` attribute, continue this chain until an
             :ref:`NXdata` group is reached.
             
             For more information about how NeXus identifies the default
             plottable data, see the
             :ref:`Find Plottable Data, v3 <Find-Plottable-Data-v3>`
             section.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/data [NXxps::/NXentry/NXdata]): <HDF5 group "/1_as_loaded__Survey/data" (4 members)>
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/data
NXmpes.nxdl.xml:/ENTRY/data
NXentry.nxdl.xml:/DATA
NXdata.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/data):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/data):
DEBUG - 
                 The default NXdata field containing a view on the measured data.
                 This NXdata field contains a collection of the main relevant fields (axes).
                 If you want to provide additional views on your data, you can additionally use
                 the generic NXdata group of NXentry.
                 
                 In NXmpes, it is recommended to provide an energy axis.
                 
                 Fields should be named according to the following convention:
                 
                 - **energy**: Calibrated energy (kinetic or binding energy). Unit category: NX_ENERGY (e.g., eV).
                 - **kx**: Calibrated x axis in k-space. Unit category: NX_ANY (e.g., 1/Angström).
                 - **ky**: Calibrated y axis in k-space. Unit category: NX_ANY (1/Angström).
                 - **kz**: Calibrated z axis in k-space. Unit category: NX_ANY (1/Angström).
                 - **angular0**: Fast-axis angular coordinate (or second slow axis if angularly integrated).
                   Unit category: NX_ANGLE
                 - **angular1**: Slow-axis angular coordinate (or second fast axis if simultaneously dispersed in 2 dimensions)
                   Unit category: NX_ANGLE
                 - **spatial0**: Fast-axis spatial coordinate (or second slow axis if spatially integrated)
                   Unit category: NX_LENGTH
                 - **spatial1**: Slow-axis spatial coordinate (or second fast axis if simultaneously dispersed in 2 dimensions)
                   Unit category: NX_LENGTH
                 - **delay**: Calibrated delay time. Unit category: NX_TIME (s).
                 - **polarization_angle**: Linear polarization angle of the incoming or
                   outgoing beam. This could be a link to
                   /entry/instrument/beam/incident_polarization_angle or
                   /entry/instrument/beam/final_polarization_angle if they exist.
                   Unit category: NX_ANGLE (° or rad)
                 - **ellipticity**: Ellipticity of the incoming or outgoing beam.
                   Could be a link to /entry/instrument/beam/incident_ellipticity or
                   /entry/instrument/beam/final_ellipticity if they exist.
                   Unit category: NX_ANGLE (° or rad)
            
DEBUG - documentation (NXentry.nxdl.xml:/DATA):
DEBUG - 
             The data group
             
             .. note:: Before the NIAC2016 meeting [#]_, at least one
                :ref:`NXdata` group was required in each :ref:`NXentry` group.
                At the NIAC2016 meeting, it was decided to make :ref:`NXdata`
                an optional group in :ref:`NXentry` groups for data files that
                do not use an application definition.
                It is recommended strongly that all NeXus data files provide
                a NXdata group.
                It is permissable to omit the NXdata group only when
                defining the default plot is not practical or possible
                from the available data.
             
                For example, neutron event data may not have anything that
                makes a useful plot without extensive processing.
             
                Certain application definitions override this decision and
                require an :ref:`NXdata` group
                in the :ref:`NXentry` group.  The ``minOccurs=0`` attribute
                in the application definition will indicate the
                :ref:`NXdata` group
                is optional, otherwise, it is required.
             
                .. [#] NIAC2016:
             	  https://www.nexusformat.org/NIAC2016.html,
             	  https://github.com/nexusformat/NIAC/issues/16
        
DEBUG - documentation (NXdata.nxdl.xml:):
DEBUG - 
         :ref:`NXdata` describes the plottable data and related dimension scales.
         
         .. index:: plotting
         
         It is strongly recommended that there is at least one :ref:`NXdata`
         group in each :ref:`NXentry` group.
         Note that the fields named ``AXISNAME`` and ``DATA``
         can be defined with different names.
         (Upper case is used to indicate that the actual name is left to the user.)
         The ``signal`` and ``axes`` attributes of the
         ``data`` group define which items
         are plottable data and which are *dimension scales*, respectively.
         
         :ref:`NXdata` is used to implement one of the basic motivations in NeXus,
         to provide a default plot for the data of this :ref:`NXentry`.  The actual data
         might be stored in another group and (hard) linked to the :ref:`NXdata` group.
         
         * Each :ref:`NXdata` group will define one field as the default
           plottable data.  The value of the ``signal`` attribute names this field.
           Additional fields may be used to describe the dimension scales and
           uncertainities.
           The ``auxiliary_signals`` attribute is a list of the other fields
           to be plotted with the ``signal`` data.
         * The plottable data may be of arbitrary rank up to a maximum
           of ``NX_MAXRANK=32`` (for compatibility with backend file formats).
         * The plottable data will be named as the value of
           the group ``signal`` attribute, such as::
           
             data:NXdata
               @signal = "counts"
               @axes = "mr"
               @mr_indices = 0
               counts: float[100]  --> the default dependent data
               mr: float[100]  --> the default independent data
           
           The field named in the ``signal`` attribute **must** exist, either
           directly as a NeXus field or defined through a link.
         
         * The group ``axes`` attribute will name the
           *dimension scale* associated with the plottable data.
         
         If available, the standard deviations of the data are to be
         stored in a data set of the same rank and dimensions, with the name ``errors``.
         
         * For each data dimension, there should be a one-dimensional array
           of the same length.
         * These one-dimensional arrays are the *dimension scales* of the
           data,  *i.e*. the values of the independent variables at which the data
           is measured, such as scattering angle or energy transfer.
         
         .. index:: link
         .. index:: axes (attribute)
         
         The preferred method to associate each data dimension with
         its respective dimension scale is to specify the field name
         of each dimension scale in the group ``axes`` attribute as a string list.
         Here is an example for a 2-D data set *data* plotted
         against *time*, and *pressure*.  (An additional *temperature* data set
         is provided and could be selected as an alternate for the *pressure* axis.)::
         
           data_2d:NXdata
             @signal="data"
             @axes=["time", "pressure"]
             @pressure_indices=1
             @temperature_indices=1
             @time_indices=0
             data: float[1000,20]
             pressure: float[20]
             temperature: float[20]
             time: float[1000]
         
         .. rubric:: Old methods to identify the plottable data
         
         There are two older methods of associating
         each data dimension to its respective dimension scale.
         Both are now out of date and
         should not be used when writing new data files.
         However, client software should expect to see data files
         written with any of these methods.
         
           * One method uses the ``axes``
             attribute to specify the names of each *dimension scale*.
         
           * The oldest method uses the ``axis`` attribute on each
             *dimension scale* to identify
             with an integer the axis whose value is the number of the dimension.
         
         .. index: !plot; axis label
            plot, axis units
            units
            dimension scale
         
         Each axis of the plot may be labeled with information from the
         dimension scale for that axis.  The optional ``@long_name`` attribute
         is provided as the axis label default.  If ``@long_name`` is not
         defined, then use the name of the dimension scale.  A ``@units`` attribute,
         if available, may be added to the axis label for further description.
         See the section :ref:`Design-Units` for more information.
         
         .. index: !plot; axis title
         
         The optional ``title`` field, if available, provides a suggested
         title for the plot.  If no ``title`` field is found in the :ref:`NXdata`
         group, look for a ``title`` field in the parent :ref:`NXentry` group,
         with a fallback to displaying the path to the :ref:`NXdata` group.
         
         NeXus is about how to find and annotate the data to be plotted
         but not to describe how the data is to be plotted.
         (https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute)
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data@NX_class)
DEBUG - value: NXdata 
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/data
NXmpes.nxdl.xml:/ENTRY/data
NXentry.nxdl.xml:/DATA
NXdata.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data@axes)
DEBUG - value: ['energy'] 
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/data
NXmpes.nxdl.xml:/ENTRY/data
NXentry.nxdl.xml:/DATA
NXdata.nxdl.xml:
DEBUG - NXdata.nxdl.xml:@axes - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/axes):
DEBUG - 
             .. index:: plotting
             
             Array of strings holding the :ref:`names <validItemName>` of
             the independent data fields used in the default plot for all of
             the dimensions of the :ref:`signal </NXdata@signal-attribute>`
             as well as any :ref:`auxiliary signals </NXdata@auxiliary_signals-attribute>`.
             
             One name is provided for every dimension in the *signal* or *auxiliary signal* fields.
             
             The *axes* values are the names of fields or links that *must* exist and be direct
             children of this NXdata group.
             
             An axis slice is specified using a field named ``AXISNAME_indices``
             as described below (where the text shown here as ``AXISNAME`` is to be
             replaced by the actual field name).
             
             When no default axis is available for a particular dimension
             of the plottable data, use a "." in that position.
             Such as::
             
                 @axes=["time", ".", "."]
             
             Since there are three items in the list, the *signal* field
             must be a three-dimensional array (rank=3). The first dimension
             is described by the values of a one-dimensional array named ``time``
             while the other two dimensions have no fields to be used as dimension scales.
             
             See examples provided on the NeXus wiki:
             https://www.nexusformat.org/2014_axes_and_uncertainties.html
             
             If there are no axes at all (such as with a stack of images),
             the axes attribute can be omitted.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data@energy_indices)
DEBUG - value: 0 
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/data
NXmpes.nxdl.xml:/ENTRY/data
NXentry.nxdl.xml:/DATA
NXdata.nxdl.xml:
DEBUG - NXxps.nxdl.xml:/ENTRY/data@energy_indices - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/data/energy_indices):
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data@signal)
DEBUG - value: data 
DEBUG - classpath: ['NXentry', 'NXdata']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/data
NXmpes.nxdl.xml:/ENTRY/data
NXentry.nxdl.xml:/DATA
NXdata.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/data@signal - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/data/signal):
DEBUG - -> data
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/data/signal):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@signal - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/signal):
DEBUG - 
             .. index:: find the default plottable data
             .. index:: plotting
             .. index:: signal attribute value
             
             Declares which NeXus field is the default.
             The value is the :ref:`name <validItemName>` of the data field to be plotted.
             This field or link *must* exist and be a direct child of this NXdata group.
             
             It is recommended (as of NIAC2014) to use this attribute
             rather than adding a signal attribute to the field.
             See https://www.nexusformat.org/2014_How_to_find_default_data.html
             for a summary of the discussion.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/data/cycle0_scan0): <HDF5 dataset "cycle0_scan0": shape (1351,), type "<f8">
DEBUG - value: [15598.7  15867.9  15651.5  ...   749.55   520.2    181.53] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
             Dimension scale defining an axis of the data.
             Client is responsible for defining the dimensions of the data.
             The name of this field may be changed to fit the circumstances.
             Standard NeXus client tools will use the attributes to determine
             how to use this field.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data/cycle0_scan0@units)
DEBUG - value: d 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - NXdata.nxdl.xml:/AXISNAME@units - REQUIRED, but undefined unit category
DEBUG - ===== FIELD (//1_as_loaded__Survey/data/data): <HDF5 dataset "data": shape (1351,), type "<f8">
DEBUG - value: [15598.7  15867.9  15651.5  ...   749.55   520.2    181.53] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/data/data
NXdata.nxdl.xml:/DATA
DEBUG - <<REQUIRED>>
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/data/data):
DEBUG - 
                     Represents a measure of one- or more-dimensional photoemission counts, where the
                     varied axis may be for example energy, momentum, spatial coordinate, pump-probe
                     delay, spin index, temperature, etc. The axes traces should be linked to the
                     actual encoder position in NXinstrument or calibrated axes in NXprocess.
                
DEBUG - documentation (NXdata.nxdl.xml:/DATA):
DEBUG - 
             .. index:: plotting
             
             This field contains the data values to be used as the
             NeXus *plottable data*.
             Client is responsible for defining the dimensions of the data.
             The name of this field may be changed to fit the circumstances.
             Standard NeXus client tools will use the attributes to determine
             how to use this field.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data/data@long_name)
DEBUG - value: XPS intensity 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/data/data
NXdata.nxdl.xml:/DATA
DEBUG - NXdata.nxdl.xml:/DATA@long_name - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - documentation (NXdata.nxdl.xml:/DATA/long_name):
DEBUG - 
                 data label
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data/data@units)
DEBUG - value: d 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/data/data
NXdata.nxdl.xml:/DATA
DEBUG - NXmpes.nxdl.xml:/ENTRY/data/data@units [NX_ANY]
DEBUG - NXdata.nxdl.xml:/DATA@units - REQUIRED, but undefined unit category
DEBUG - ===== FIELD (//1_as_loaded__Survey/data/data_errors): <HDF5 dataset "data_errors": shape (1351,), type "<f8">
DEBUG - value: [0. 0. 0. ... 0. 0. 0.] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/FIELDNAME_errors
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/FIELDNAME_errors):
DEBUG - 
             "Errors" (meaning *uncertainties* or *standard deviations*)
             associated with any field named ``FIELDNAME`` in this ``NXdata``
             group (e.g. an axis, signal or auxiliary signal).
             
             The dimensions of the ``FIELDNAME_errors`` field must match
             the dimensions of the ``FIELDNAME`` field.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data/data_errors@units)
DEBUG - value: d 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/FIELDNAME_errors
DEBUG - NXdata.nxdl.xml:/FIELDNAME_errors@units - REQUIRED, but undefined unit category
DEBUG - ===== FIELD (//1_as_loaded__Survey/data/energy): <HDF5 dataset "energy": shape (1351,), type "<f8">
DEBUG - value: [ 136.61  137.61  138.61 ... 1484.61 1485.61 1486.61] 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/data/energy
NXmpes.nxdl.xml:/ENTRY/data/energy
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<REQUIRED>>
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/data/energy):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/data/energy):
DEBUG - 
                     Calibrated energy axis.
                     
                     This could be a link to either
                     /entry/process/energy_calibration/calibrated_axis or
                     /entry/process/energy_correction/calibrated_axis.
                
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
             Dimension scale defining an axis of the data.
             Client is responsible for defining the dimensions of the data.
             The name of this field may be changed to fit the circumstances.
             Standard NeXus client tools will use the attributes to determine
             how to use this field.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data/energy@long_name)
DEBUG - value: energy 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/data/energy
NXmpes.nxdl.xml:/ENTRY/data/energy
NXdata.nxdl.xml:/AXISNAME
DEBUG - NXdata.nxdl.xml:/AXISNAME@long_name - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME/long_name):
DEBUG - 
                 Axis label
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data/energy@type)
DEBUG - value: kinetic 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/data/energy
NXmpes.nxdl.xml:/ENTRY/data/energy
NXdata.nxdl.xml:/AXISNAME
DEBUG - NXmpes.nxdl.xml:/ENTRY/data/energy@type - [NX_CHAR]
DEBUG - <<RECOMMENDED>>
DEBUG - Dataset referenced as NXdata AXIS #0
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/data/energy/type):
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data/energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/data/energy
NXmpes.nxdl.xml:/ENTRY/data/energy
NXdata.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/data/energy@units - REQUIRED, but undefined unit category
DEBUG - NXmpes.nxdl.xml:/ENTRY/data/energy@units [NX_ENERGY]
DEBUG - NXdata.nxdl.xml:/AXISNAME@units - REQUIRED, but undefined unit category
DEBUG - ===== FIELD (//1_as_loaded__Survey/definition): <HDF5 dataset "definition": shape (), type "|O">
DEBUG - value: b'NXxps' 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/definition
NXmpes.nxdl.xml:/ENTRY/definition
NXentry.nxdl.xml:/definition
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/definition):
DEBUG - -> NXxps
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/definition):
DEBUG - -> NXmpes
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/definition):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/definition):
DEBUG - 
DEBUG - documentation (NXentry.nxdl.xml:/definition):
DEBUG - 
             (alternate use: see same field in :ref:`NXsubentry` for preferred)
             
             Official NeXus NXDL schema to which this entry conforms which must be
             the name of the NXDL file (case sensitive without the file extension)
             that the NXDL schema is defined in.
             
             For example the ``definition`` field for a file that conformed to the
             *NXarpes.nxdl.xml* definition must contain the string **NXarpes**.
             
             This field is provided so that :ref:`NXentry` can be the overlay position
             in a NeXus data file for an application definition and its
             set of groups, fields, and attributes.
             
             *It is advised* to use :ref:`NXsubentry`, instead, as the overlay position.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/definition@URL)
DEBUG - value: https://github.com/FAIRmat-NFDI/nexus_definitions/blob/9e8dc2f72 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/definition
NXmpes.nxdl.xml:/ENTRY/definition
NXentry.nxdl.xml:/definition
DEBUG - NXentry.nxdl.xml:/definition@URL - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/definition/URL):
DEBUG - 
                 URL of NXDL file
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/definition@version)
DEBUG - value: v2022.07.post1.dev1257+g9e8dc2f72 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/definition
NXmpes.nxdl.xml:/ENTRY/definition
NXentry.nxdl.xml:/definition
DEBUG - NXmpes.nxdl.xml:/ENTRY/definition@version - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/definition/version):
DEBUG - 
DEBUG - NXentry.nxdl.xml:/definition@version - [NX_CHAR]
DEBUG - documentation (NXentry.nxdl.xml:/definition/version):
DEBUG - 
                 NXDL version number
            
DEBUG - ===== FIELD (//1_as_loaded__Survey/end_time): <HDF5 dataset "end_time": shape (), type "|O">
DEBUG - value: b'2022-04-08T12:32:06.020000+00:00' 
DEBUG - classpath: ['NXentry', 'NX_DATE_TIME']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/end_time
NXentry.nxdl.xml:/end_time
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/end_time):
DEBUG - 
                 Datetime of the end of the measurement.
                 Should be a ISO8601 date/time stamp. It is recommended to add an explicit time zone,
                 otherwise the local time zone is assumed per ISO8601.
            
DEBUG - documentation (NXentry.nxdl.xml:/end_time):
DEBUG - 
             Ending time of measurement
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/geometries [NXxps::/NXentry/NXcoordinate_system_set]): <HDF5 group "/1_as_loaded__Survey/geometries" (1 members)>
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries
NXmpes.nxdl.xml:/ENTRY/geometries
NXcoordinate_system_set.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/geometries):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/geometries):
DEBUG - 
                 Description of one or more coordinate systems that are specific to the setup
                 and the measurement geometry.
            
DEBUG - documentation (NXcoordinate_system_set.nxdl.xml:):
DEBUG - 
         Base class to hold different coordinate systems and representation conversions.
         
         How many nodes of type :ref:`NXcoordinate_system_set` should be used in an application definition?
         
         * 0; if there is no instance of :ref:`NXcoordinate_system_set` and therein or elsewhere across
           the application definition, an instance of NXcoordinate_system is defined,
           the default NeXus `McStas <https://mailman2.mcstas.org/pipermail/mcstas-users/2021q2/001431.html>`_
           coordinate system is assumed. This makes :ref:`NXcoordinate_system_set` and
           NXcoordinate_system base classes backwards compatible to older
           NeXus conventions and classes.
         * 1; if only one :ref:`NXcoordinate_system_set` is defined, it should be placed
           as high up in the node hierarchy (ideally right below an instance of NXentry)
           of the application definition tree as possible.
           This :ref:`NXcoordinate_system_set` should define at least one NXcoordinate_system
           instance. This shall be named such that it is clear how this coordinate system is
           typically referred to in a community. For the NeXus `McStas coordinate system, it is
           advised to call it mcstas for the sake of improved clarity.
           Additional NXcoordinate_system instances should be specified if possible in that same
           :ref:`NXcoordinate_system_set` instead of cluttering them across the tree.
           
           If this is the case, it is assumed that the NXcoordinate_system_members
           overwrite the NeXus default McStas coordinate system, i.e. users can thereby
           conveniently and explicitly specify the coordinate system(s) that
           they wish to use.
           
           Users are encouraged to write also explicit and clean depends_on fields in
           all groups that encode information about where the interpretation of coordinate
           systems is relevant. If these depends_on hints are not provided, it is
           automatically assumed that all children (to arbitrary depth)
           of that branch and sub-branches below the one in which that
           :ref:`NXcoordinate_system_set` is defined use either the only NXcoordinate_system_set
           instance in that set or the application definition is considered
           underconstrained which should at all costs be avoided and in which case
           again McStas is assumed.
         * 2 and more; as soon as more than one :ref:`NXcoordinate_system_set` is specified
           somewhere in the tree, different interpretations are possible as to which
           of these coordinate system sets and instances apply or take preference.
           We realize that such ambiguities should at all costs be avoided.
           However, the opportunity for multiple sets and their instances enables to
           have branch-specific coordinate system conventions which could especially
           be useful for deep classes where multiple scientific methods are combined or
           cases where having a definition of global translation and conversion tables
           how to convert between representations in different coordinate systems
           is not desired or available for now.
           We argue that having 2 or more :ref:`NXcoordinate_system_set` instances and respective
           NXcoordinate_system instances makes the interpretation eventually unnecessary
           complicated. Instead, developers of application definitions should always try
           to work for clarity and thus use only one top-level coordinate system set.
         
         For these reasons we conclude that the option with one top-level
         :ref:`NXcoordinate_system_set` instance is the preferred choice.
         
         McStas is used if neither an instance of :ref:`NXcoordinate_system_set` nor an instance
         of NXcoordinate_system is specified. However, even in this case it is better
         to be explicit like for every other coordinate system definition to support
         users with interpreting the content and logic behind every instance of the tree.
         
         How to store coordinate systems inside :ref:`NXcoordinate_system_set`?
         Individual coordinate systems should be specified as members of the
         :ref:`NXcoordinate_system_set` instance using instances of NXcoordinate_system.
         
         How many individual instances of NXcoordinate_system to allow within one
         instance of :ref:`NXcoordinate_system_set`?
         
         * 0; This case should be avoided for the sake of clarity but this case could
           mean the authors of the definition meant that McStas is used. We conclude,
           McStas is used in this case.
         * 1; Like above-mentioned this case has the advantage that it is explicit
           and faces no ambiguities. However, in reality typically multiple
           coordinate systems have to be mastered especially for complex
           multi-signal modality experiments.
         * 2 or more; If this case is realized, the best practice is that in every
           case where a coordinate system should be referred to the respective class
           has a depends_on field which resolves the possible ambiguities which specific
           coordinate systems is referred to. The benefit of this explicit and clear
           specifying of the coordinate system used in every case is that especially
           in combination with having coordinate systems inside deeper branches
           makes up for a very versatile, backwards compatible, but powerful system
           to express different types of coordinate systems using NeXus. In the case
           of two or more instances of NXcoordinate_system in one :ref:`NXcoordinate_system_set`,
           it is also advised to specify the relationship between the two coordinate systems by
           using the (NXtransformations) group within NXcoordinate_system.
         
         In effect, 1 should be the preferred choice. However, if more than one coordinate
         system is defined for practical purposes, explicit depends_on fields should
         always guide the user for each group and field which of the coordinate system
         one refers to.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries@NX_class)
DEBUG - value: NXcoordinate_system_set 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries
NXmpes.nxdl.xml:/ENTRY/geometries
NXcoordinate_system_set.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//1_as_loaded__Survey/geometries/xps_coordinate_system [NXxps::/NXentry/NXcoordinate_system_set/NXcoordinate_system]): <HDF5 group "/1_as_loaded__Survey/geometries/xps_coordinate_system" (8 members)>
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system
NXcoordinate_system_set.nxdl.xml:/COORDINATE_SYSTEM
NXcoordinate_system.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system):
DEBUG - 
                     In traditional surface science, a left-handed coordinate system is used such that the positive z-axis
                     points along the normal of the sample stage, and the x- and y-axes lie in the plane of the sample stage.
                     However, in NeXus, a coordinate system that is the same as `McStas`_  is used. `xps_coordinate_system`
                     gives the user the opportunity to work in the traditional base coordinate system.
                     
                     .. _McStas: http://mcstas.org/
                     
                     .. image:: xps/xps_cs.png
                         :width: 40%
                
DEBUG - documentation (NXcoordinate_system_set.nxdl.xml:/COORDINATE_SYSTEM):
DEBUG - 
DEBUG - documentation (NXcoordinate_system.nxdl.xml:):
DEBUG - 
         Base class to detail a coordinate system (CS).
         
         Whenever possible, an instance of :ref:`NXcoordinate_system` should be used as
         a member in an :ref:`NXcoordinate_system_set` and the name of the instance
         should be this alias. This may support a process whereby jargon when talking
         about coordinate systems and conventions may become cleaner for users
         because it is not evident for people outside a lab that terms like e.g.
         tip space or specimen space refer to the same coordinate system.
         This is an example of jargon used in e.g. the field of atom
         probe tomography.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system@NX_class)
DEBUG - value: NXcoordinate_system 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system
NXcoordinate_system_set.nxdl.xml:/COORDINATE_SYSTEM
NXcoordinate_system.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations [NXxps::/NXentry/NXcoordinate_system_set/NXcoordinate_system/NXtransformations]): <HDF5 group "/1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations" (3 members)>
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations']
DEBUG - classes:
NXcoordinate_system.nxdl.xml:/TRANSFORMATIONS
NXtransformations.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXcoordinate_system.nxdl.xml:/TRANSFORMATIONS):
DEBUG - 
             Collection of axis-based translations and rotations to describe this coordinate system
             with respect to another coordinate system.
        
DEBUG - documentation (NXtransformations.nxdl.xml:):
DEBUG - 
         Collection of axis-based translations and rotations to describe a geometry.
         May also contain axes that do not move and therefore do not have a transformation
         type specified, but are useful in understanding coordinate frames within which
         transformations are done, or in documenting important directions, such as the
         direction of gravity.
         
         A nested sequence of transformations lists the translation and rotation steps
         needed to describe the position and orientation of any movable or fixed device.
         
         There will be one or more transformations (axes) defined by one or more fields
         for each transformation. Transformations can also be described by NXlog groups when
         the values change with time. The all-caps name ``AXISNAME`` designates the
         particular axis generating a transformation (e.g. a rotation axis or a translation
         axis or a general axis).   The attribute ``units="NX_TRANSFORMATION"`` designates the
         units will be appropriate to the ``transformation_type`` attribute:
         
         * ``NX_LENGTH`` for ``translation``
         * ``NX_ANGLE`` for ``rotation``
         * ``NX_UNITLESS`` for axes for which no transformation type is specified
         
         This class will usually contain all axes of a sample stage or goniometer or
         a detector. The NeXus default :ref:`McSTAS coordinate frame<Design-CoordinateSystem>`
         is assumed, but additional useful coordinate axes may be defined by using axes for which
         no transformation type has been specified.
         
         **Transformation chain**
         
         The entry point of a chain of transformations is a field called ``depends_on``
         will be outside of this class and points to a field in here. Following the chain may
         also require following ``depends_on`` links to transformations outside, for example
         to a common base table.  If a relative path is given, it is relative to the group
         enclosing the ``depends_on`` specification.
         
         For a chain of three transformations, where :math:`T_1` depends on :math:`T_2`
         which in turn depends on :math:`T_3`, the final *active* transformation
         matrix :math:`T_f` is
         
         .. math:: T_f = T_3 . T_2 . T_1
         
         For example when positioning a flat detector, its pixel positions in the laboratory
         reference frame (:ref:`McSTAS coordinate frame<Design-CoordinateSystem>` by default)
         can be calculated by
         
         .. math:: X_\text{lab} = T_f . X_\text{pixel} = T_3 . T_2 . T_1 . X_\text{pixel}
         
         Note that :math:`T_1` comes first in the *depends-on* chain and is also applied first
         to the pixel coordinates.
         
         When we say transformation :math:`A` *depends on* transformation :math:`B` we mean that
         the physical motor that realizes :math:`A` is *stacked on top of* the motor that realizes :math:`B`.
         So the activate coordinate transformation :math:`A` needs to be applied to a coordinate
         before applying :math:`B`. In other words :math:`X' = B . A . X`.
         
         **Transformation matrix**
         
         In explicit terms, the transformations are a subset of affine transformations expressed as
         4x4 active transformation matrices that act on homogeneous coordinates, :math:`X=[x,y,z,1]^T`.
         
         For rotation and translation,
         
         .. math:: T_r &= \begin{pmatrix} R & o \\ 0_3 & 1 \end{pmatrix} \\ T_t &= \begin{pmatrix} I_3  & t + o \\ 0_3 & 1 \end{pmatrix}
         
         where :math:`R` is the usual 3x3 rotation matrix, :math:`o` is an offset vector,
         :math:`0_3` is a row of 3 zeros, :math:`I_3` is the 3x3 identity matrix and
         :math:`t` is the translation vector.
         
         :math:`o` is given by the ``offset`` attribute, :math:`t` is given by the ``vector``
         attribute multiplied by the field value, and :math:`R` is defined as a rotation
         about an axis in the direction of ``vector``, of angle of the field value.
         
         **Usage**
         
         One possible use of ``NXtransformations`` is to define the motors and
         transformations for a diffractometer (goniometer).  Such use is mentioned
         in the ``NXinstrument`` base class.  Use one ``NXtransformations`` group
         for each diffractometer and name the group appropriate to the device.
         Collecting the motors of a sample table or xyz-stage in an NXtransformations
         group is equally possible.
         
         Following the section on the general description of axis in NXtransformations is a section which
         documents the fields commonly used within NeXus for positioning purposes and their meaning. Whenever
         there is a need for positioning a beam line component please use the existing names. Use as many fields
         as needed in order to position the component. Feel free to add more axis if required. In the description
         given below, only those atttributes which are defined through the name are spcified. Add the other attributes
         of the full set:
         
         * vector
         * offset
         * transformation_type
         * depends_on
         
         as needed.
         
         **Example 1: goniometer**
         
         Position a sample mounted on a goniometer in the :ref:`McSTAS coordinate frame<Design-CoordinateSystem>`.
         
         The sample is oriented as follows
         
         .. math:: X_\text{lab} = R(\vec{v}_\omega, \omega) .
                                  T(\vec{v}_z, \text{sam}_z) .
                                  T(\vec{v}_y, \text{sam}_y) .
                                  T(\vec{v}_x, \text{sam}_x) .
                                  R(\vec{v}_\chi, \chi) .
                                  R(\vec{v}_\varphi, \varphi) . X_s
         
         where
         
         * :math:`R(\vec{v},a)` is a rotation around vector :math:`\vec{v}` with angle :math:`a`
         * :math:`T(\vec{u},t)` is a translation along vector :math:`\vec{u}` over a distance :math:`t`
         * :math:`X_s` a coordinate in the sample reference frame.
         
         .. code-block::
         
           entry:NXentry
             sample:NXsample
               depends_on=transformations/phi
               transformations:NXtransformations
                 phi=0
                   @depends_on=chi
                   @transformation_type=rotation
                   @vector=[-1 -0.0037 -0.002]
                   @units=degrees
                 chi=0
                   @depends_on=sam_x
                   @transformation_type=rotation
                   @vector=[0.0046 0.0372 0.9993]
                   @units=degrees
                 sam_x=0
                   @depends_on=sam_y
                   @transformation_type=translation
                   @vector=[1 0 0]
                   @units=mm
                 sam_y=0
                   @depends_on=sam_z
                   @transformation_type=translation
                   @vector=[0 1 0]
                   @units=mm
                 sam_z=0
                   @depends_on=omega
                   @transformation_type=translation
                   @vector=[0 0 1]
                   @units=mm
                 omega=174
                   @depends_on=.
                   @transformation_type=rotation
                   @vector=[-1 0 0]
                   @units=degrees
         
         **Example 2: different coordinate system**
         
         Define a laboratory reference frame with the X-axis along the beam and the Z-axis opposite to the direction of gravity.
         Three point detectors are positioned in this reference:
         
         * *transmission*:
             * point detector in the beam
             * 20 cm downstream from the sample (the origin of the reference frame)
         * *vertical*:
             * point detector 10 cm downstream from the sample
             * making an angle of 5 degrees with the beam w.r.t. the sample
             * positioned in the XZ-plane above the XY-plane
         * *horizontal*:
             * point detector 11 cm downstream from the sample
             * making an angle of 6 degrees with the beam w.r.t. the sample
             * positioned in the XY-plane above the XZ-plane
         
         The coordinates of the point detectors in the laboratory reference frame are
         
         * *transmission*: :math:`X_\text{lab} = T_x(20) . X_d`
         * *vertical*: :math:`X_\text{lab} = R_y(-5) . T_x(10) . X_d`
         * *horizontal*: :math:`X_\text{lab} = R_x(-90) . R_y(-6) . T_x(11) . X_d`
         
         where
         
         * :math:`T_x`, :math:`T_y`, :math:`T_z`: active transformation matrices for translation along the X, Y and Z axes
         * :math:`R_x`, :math:`R_y`, :math:`R_z`: active transformation matrices for rotation around the X, Y and Z axes
         * :math:`X_d` is a coordinate in the detector reference frame.
         
         Note that as these are point detectors, we only have one coordinate :math:`X_d=[0,0,0,1]^T`.
         
         .. code-block::
         
           entry:NXentry
             instrument:NXinstrument
               vertical:NXdetector
                 depends_on=position/distance
                 position:NXtransformations
                   distance=10         # move downstream from the sample
                     @depends_on=polar
                     @units=cm
                     @vector=[1 0 0]
                   polar=5             # title above the horizontal plane
                     @depends_on=azimuth
                     @units=degrees
                     @vector=[0 -1 0]
                   azimuth=0         # stay in the vertical plane
                     @depends_on=/entry/coordinate_system/beam
                     @units=degrees
                     @vector=[-1 0 0]
               horizontal:NXdetector
                 depends_on=position/distance
                 position:NXtransformations
                   distance=11         # move downstream from the sample
                     @depends_on=polar
                     @units=cm
                     @vector=[1 0 0]
                   polar=6             # title above the horizontal plane
                     @depends_on=azimuth
                     @units=degrees
                     @vector=[0 -1 0]
                   azimuth=90           # rotate to the horizontal plane
                     @depends_on=/entry/coordinate_system/beam
                     @units=degrees
                     @vector=[-1 0 0]
               transmission:NXdetector
                 depends_on=position/distance
                 position:NXtransformations
                   distance=20         # move downstream from the sample
                     @depends_on=/entry/coordinate_system/beam
                     @units=cm
                     @vector=[1 0 0]
             coordinate_system:NXtransformations
               beam=NaN               # value is never used
                 @depends_on=gravity
                 @vector=[1 0 0]     # X-axis points in the beam direction
               gravity=NaN             # value is never used
                 @depends_on=.         # end of the chain
                 @vector=[0 0 -1]       # Z-axis points up
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations@NX_class)
DEBUG - value: NXtransformations 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations']
DEBUG - classes:
NXcoordinate_system.nxdl.xml:/TRANSFORMATIONS
NXtransformations.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/y_flip): <HDF5 dataset "y_flip": shape (), type "<i8">
DEBUG - value: 180 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME):
DEBUG - 
             Units need to be appropriate for translation or rotation
             
             The name of this field is not forced.  The user is free to use any name
             that does not cause confusion.  When using more than one ``AXISNAME`` field,
             make sure that each field name is unique in the same group, as required
             by HDF5.
             
             The values given should be the start points of exposures for the corresponding
             frames.  The end points should be given in ``AXISNAME_end``.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/y_flip@depends_on)
DEBUG - value: y_rotation 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@depends_on - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/depends_on):
DEBUG - 
                 Points to the path of a field defining the axis on which this instance of
                 NXtransformations depends or the string ".". It can also point to an instance of
                 ``NX_coordinate_system`` if this transformation depends on it.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/y_flip@transformation_type)
DEBUG - value: rotation 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@transformation_type - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - -> translation
DEBUG - -> rotation
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - 
                 The transformation_type may be ``translation``, in which case the
                 values are linear displacements along the axis, ``rotation``,
                 in which case the values are angular rotations around the axis.
                 
                 If this attribute is omitted, this is an axis for which there
                 is no motion to be specifies, such as the direction of gravity,
                 or the direction to the source, or a basis vector of a
                 coordinate frame.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/y_flip@units)
DEBUG - value: degree 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@units [NX_TRANSFORMATION]
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/y_flip@vector)
DEBUG - value: [0 1 0] 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@vector - [NX_NUMBER]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/vector):
DEBUG - 
                 Three values that define the axis for this transformation.
                 The axis should be normalized to unit length, making it
                 dimensionless.  For ``rotation`` axes, the direction should be
                 chosen for a right-handed rotation with increasing angle.
                 For ``translation`` axes the direction should be chosen for
                 increasing displacement. For general axes, an appropriate direction
                 should be chosen.
            
DEBUG - ===== FIELD (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/y_rotation): <HDF5 dataset "y_rotation": shape (), type "<f8">
DEBUG - value: 54.5 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME):
DEBUG - 
             Units need to be appropriate for translation or rotation
             
             The name of this field is not forced.  The user is free to use any name
             that does not cause confusion.  When using more than one ``AXISNAME`` field,
             make sure that each field name is unique in the same group, as required
             by HDF5.
             
             The values given should be the start points of exposures for the corresponding
             frames.  The end points should be given in ``AXISNAME_end``.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/y_rotation@depends_on)
DEBUG - value: . 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@depends_on - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/depends_on):
DEBUG - 
                 Points to the path of a field defining the axis on which this instance of
                 NXtransformations depends or the string ".". It can also point to an instance of
                 ``NX_coordinate_system`` if this transformation depends on it.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/y_rotation@transformation_type)
DEBUG - value: rotation 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@transformation_type - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - -> translation
DEBUG - -> rotation
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - 
                 The transformation_type may be ``translation``, in which case the
                 values are linear displacements along the axis, ``rotation``,
                 in which case the values are angular rotations around the axis.
                 
                 If this attribute is omitted, this is an axis for which there
                 is no motion to be specifies, such as the direction of gravity,
                 or the direction to the source, or a basis vector of a
                 coordinate frame.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/y_rotation@units)
DEBUG - value: degree 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@units [NX_TRANSFORMATION]
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/y_rotation@vector)
DEBUG - value: [ 0 -1  0] 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@vector - [NX_NUMBER]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/vector):
DEBUG - 
                 Three values that define the axis for this transformation.
                 The axis should be normalized to unit length, making it
                 dimensionless.  For ``rotation`` axes, the direction should be
                 chosen for a right-handed rotation with increasing angle.
                 For ``translation`` axes the direction should be chosen for
                 increasing displacement. For general axes, an appropriate direction
                 should be chosen.
            
DEBUG - ===== FIELD (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/z_rotation): <HDF5 dataset "z_rotation": shape (), type "<f8">
DEBUG - value: 180.0 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME):
DEBUG - 
             Units need to be appropriate for translation or rotation
             
             The name of this field is not forced.  The user is free to use any name
             that does not cause confusion.  When using more than one ``AXISNAME`` field,
             make sure that each field name is unique in the same group, as required
             by HDF5.
             
             The values given should be the start points of exposures for the corresponding
             frames.  The end points should be given in ``AXISNAME_end``.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/z_rotation@depends_on)
DEBUG - value: y_flip 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@depends_on - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/depends_on):
DEBUG - 
                 Points to the path of a field defining the axis on which this instance of
                 NXtransformations depends or the string ".". It can also point to an instance of
                 ``NX_coordinate_system`` if this transformation depends on it.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/z_rotation@transformation_type)
DEBUG - value: rotation 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@transformation_type - [NX_CHAR]
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - -> translation
DEBUG - -> rotation
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - 
                 The transformation_type may be ``translation``, in which case the
                 values are linear displacements along the axis, ``rotation``,
                 in which case the values are angular rotations around the axis.
                 
                 If this attribute is omitted, this is an axis for which there
                 is no motion to be specifies, such as the direction of gravity,
                 or the direction to the source, or a basis vector of a
                 coordinate frame.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/z_rotation@units)
DEBUG - value: degree 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@units [NX_TRANSFORMATION]
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/z_rotation@vector)
DEBUG - value: [0 0 1] 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@vector - [NX_NUMBER]
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/vector):
DEBUG - 
                 Three values that define the axis for this transformation.
                 The axis should be normalized to unit length, making it
                 dimensionless.  For ``rotation`` axes, the direction should be
                 chosen for a right-handed rotation with increasing angle.
                 For ``translation`` axes the direction should be chosen for
                 increasing displacement. For general axes, an appropriate direction
                 should be chosen.
            
DEBUG - ===== FIELD (//1_as_loaded__Survey/geometries/xps_coordinate_system/depends_on): <HDF5 dataset "depends_on": shape (), type "|O">
DEBUG - value: b'/1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/z_rotation' 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/depends_on
NXcoordinate_system.nxdl.xml:/depends_on
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/depends_on):
DEBUG - 
                         Link to transformations defining the XPS base coordinate system,
                         which is defined such that the positive z-axis points along the sample stage normal, and the
                         x- and y-axes lie in the plane of the sample stage.
                    
DEBUG - documentation (NXcoordinate_system.nxdl.xml:/depends_on):
DEBUG - 
             This specificies the relation to another coordinate system by pointing to the last
             transformation in the transformation chain in the NXtransformations group.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/geometries/xps_coordinate_system/handedness): <HDF5 dataset "handedness": shape (), type "|O">
DEBUG - value: b'left_handed' 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/handedness
NXcoordinate_system.nxdl.xml:/handedness
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/handedness):
DEBUG - -> left_handed
DEBUG - enumeration (NXcoordinate_system.nxdl.xml:/handedness):
DEBUG - -> right_handed
DEBUG - -> left_handed
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/handedness):
DEBUG - 
DEBUG - documentation (NXcoordinate_system.nxdl.xml:/handedness):
DEBUG - 
             Handedness of the coordinate system if it is a Cartesian.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/geometries/xps_coordinate_system/origin): <HDF5 dataset "origin": shape (), type "|O">
DEBUG - value: b'sample stage' 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/origin
NXcoordinate_system.nxdl.xml:/origin
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/origin):
DEBUG - -> sample stage
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/origin):
DEBUG - 
DEBUG - documentation (NXcoordinate_system.nxdl.xml:/origin):
DEBUG - 
             Human-readable field telling where the origin of this CS is.
             Exemplar values could be *left corner of the lab bench*, *door-handle*
             *pinhole through which the electron beam exists the pole piece*.
             *barycenter of the triangle*, *center of mass of the stone*.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/geometries/xps_coordinate_system/x): <HDF5 dataset "x": shape (3,), type "<i8">
DEBUG - value: [-1  0  0] 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/x
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/x):
DEBUG - -> [-1, 0, 0]
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/x):
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/x@units)
DEBUG - value: m 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/x
DEBUG - NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/x@units - REQUIRED, but undefined unit category
DEBUG - ===== FIELD (//1_as_loaded__Survey/geometries/xps_coordinate_system/y): <HDF5 dataset "y": shape (3,), type "<i8">
DEBUG - value: [0 1 0] 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/y
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/y):
DEBUG - -> [0, 1, 0]
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/y):
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/y@units)
DEBUG - value: m 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/y
DEBUG - NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/y@units - REQUIRED, but undefined unit category
DEBUG - ===== FIELD (//1_as_loaded__Survey/geometries/xps_coordinate_system/z): <HDF5 dataset "z": shape (3,), type "<i8">
DEBUG - value: [0 0 1] 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/z
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/z):
DEBUG - -> [0, 0, 1]
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/z):
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/geometries/xps_coordinate_system/z@units)
DEBUG - value: m 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/z
DEBUG - NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/z@units - REQUIRED, but undefined unit category
DEBUG - ===== FIELD (//1_as_loaded__Survey/geometries/xps_coordinate_system/z_direction): <HDF5 dataset "z_direction": shape (), type "|O">
DEBUG - value: b'sample stage normal' 
DEBUG - classpath: ['NXentry', 'NXcoordinate_system_set', 'NXcoordinate_system', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/z_direction
NXcoordinate_system.nxdl.xml:/z_direction
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/z_direction):
DEBUG - -> sample stage normal
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/geometries/xps_coordinate_system/z_direction):
DEBUG - 
DEBUG - documentation (NXcoordinate_system.nxdl.xml:/z_direction):
DEBUG - 
             Human-readable field telling in which direction the z-axis points if that
             instance of :ref:`NXcoordinate_system` has no reference to any parent and as such
             is the mighty world reference frame.
             
             See docstring of x_alias for further details.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument [NXxps::/NXentry/NXinstrument]): <HDF5 group "/1_as_loaded__Survey/instrument" (8 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT
NXentry.nxdl.xml:/INSTRUMENT
NXinstrument.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT):
DEBUG - 
                 Description of the XPS spectrometer and its individual parts.
                 
                 This concept is related to term `12.58`_ of the ISO 18115-1:2023 standard.
                 
                 .. _12.58: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.58
            
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT):
DEBUG - 
                 Description of the photoemission spectrometer and its individual parts.
                 
                 This concept is related to term `12.58`_ of the ISO 18115-1:2023 standard.
                 
                 .. _12.58: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.58
            
DEBUG - documentation (NXentry.nxdl.xml:/INSTRUMENT):
DEBUG - 
DEBUG - documentation (NXinstrument.nxdl.xml:):
DEBUG - 
         Collection of the components of the instrument or beamline.
         
         Template of instrument descriptions comprising various beamline components.
         Each component will also be a NeXus group defined by its distance from the
         sample. Negative distances represent beamline components that are before the
         sample while positive distances represent components that are after the sample.
         This device allows the unique identification of beamline components in a way
         that is valid for both reactor and pulsed instrumentation.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument@NX_class)
DEBUG - value: NXinstrument 
DEBUG - classpath: ['NXentry', 'NXinstrument']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT
NXentry.nxdl.xml:/INSTRUMENT
NXinstrument.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument@default)
DEBUG - value: electronanalyser 
DEBUG - classpath: ['NXentry', 'NXinstrument']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT
NXentry.nxdl.xml:/INSTRUMENT
NXinstrument.nxdl.xml:
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT@default - [NX_CHAR]
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT@default - [NX_CHAR]
DEBUG - NXentry.nxdl.xml:/INSTRUMENT@default - [NX_CHAR]
DEBUG - NXinstrument.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXinstrument.nxdl.xml:/default):
DEBUG - 
             .. index:: plotting
             
             Declares which child group contains a path leading
             to a :ref:`NXdata` group.
             
             It is recommended (as of NIAC2014) to use this attribute
             to help define the path to the default dataset to be plotted.
             See https://www.nexusformat.org/2014_How_to_find_default_data.html
             for a summary of the discussion.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/beam_xray [NXxps::/NXentry/NXinstrument/NXbeam]): <HDF5 group "/1_as_loaded__Survey/instrument/beam_xray" (6 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE
NXinstrument.nxdl.xml:/BEAM
NXbeam.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE):
DEBUG - 
                     Properties of the photon beam at a given location.
                     Should be named with the same appendix as sourceTYPE, e.g.,
                     for `source_probe` it should refer to `beam_probe`.
                
DEBUG - documentation (NXinstrument.nxdl.xml:/BEAM):
DEBUG - 
DEBUG - documentation (NXbeam.nxdl.xml:):
DEBUG - 
         Properties of the neutron or X-ray beam at a given location.
         
         This group is intended to be referenced
         by beamline component groups within the :ref:`NXinstrument` group or by the :ref:`NXsample` group. This group is
         especially valuable in storing the results of instrument simulations in which it is useful
         to specify the beam profile, time distribution etc. at each beamline component. Otherwise,
         its most likely use is in the :ref:`NXsample` group in which it defines the results of the neutron
         scattering by the sample, e.g., energy transfer, polarizations. Finally, There are cases where the beam is
         considered as a beamline component and this group may be defined as a subgroup directly inside
         :ref:`NXinstrument`, in which case it is recommended that the position of the beam is specified by an
         :ref:`NXtransformations` group, unless the beam is at the origin (which is the sample).
         
         Note that incident_wavelength and related fields can be a scalar values or arrays, depending on the use case.
         To support these use cases, the explicit dimensionality of these fields is not specified, but it can be inferred
         by the presense of and shape of accompanying fields, such as incident_wavelength_weights for a polychromatic beam.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray@NX_class)
DEBUG - value: NXbeam 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE
NXinstrument.nxdl.xml:/BEAM
NXbeam.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/beam_xray/associated_source): <HDF5 dataset "associated_source": shape (), type "|O">
DEBUG - value: b'/1_as_loaded__Survey/instrument/source_xray' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/associated_source
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/associated_source):
DEBUG - 
                         The source that emitted this beam.
                         Should be named with the same appendix, e.g.,
                         for `beam_probe` it should refer to `source_probe`.
                         This should be specified if an associated source exists.
                         
                         Example:
                           * /entry/instrument/beam_probe = /entry/instrument/source_probe
                    
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/beam_xray/depends_on): <HDF5 dataset "depends_on": shape (), type "|O">
DEBUG - value: b'/1_as_loaded__Survey/instrument/beam_xray/transformations/beam_polar_angle_of_incidence' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/depends_on
NXbeam.nxdl.xml:/depends_on
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/depends_on):
DEBUG - 
                         Reference to the transformation describing the orientation of the beam
                         relative to a defined coordinate system.
                    
DEBUG - documentation (NXbeam.nxdl.xml:/depends_on):
DEBUG - 
             The NeXus coordinate system defines the Z axis to be along the nominal beam
             direction. This is the same as the McStas coordinate system (see :ref:`Design-CoordinateSystem`).
             However, the additional transformations needed to represent an altered beam
             direction can be provided using this depends_on field that contains the path
             to a NXtransformations group. This could represent redirection of the beam,
             or a refined beam direction.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/beam_xray/distance): <HDF5 dataset "distance": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_NUMBER']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/distance
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/distance):
DEBUG - 
                         Distance between the point where the current NXbeam instance is evaluating
                         the beam properties and the point where the beam interacts with the sample.
                         For photoemission, the latter is the point where the the centre of the beam
                         touches the sample surface.
                    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray/distance@units)
DEBUG - value: mm 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_NUMBER']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/distance
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/distance@units [NX_LENGTH]
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/beam_xray/extent): <HDF5 dataset "extent": shape (2,), type "<f8">
DEBUG - value: [0. 0.] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/extent
NXbeam.nxdl.xml:/extent
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/extent):
DEBUG - 
DEBUG - documentation (NXbeam.nxdl.xml:/extent):
DEBUG - 
             Size of the beam entering this component. Note this represents
             a rectangular beam aperture, and values represent FWHM
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray/extent@units)
DEBUG - value: um 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/extent
NXbeam.nxdl.xml:/extent
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/extent@units - REQUIRED, but undefined unit category
DEBUG - NXbeam.nxdl.xml:/extent@units [NX_LENGTH]
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/beam_xray/incident_energy): <HDF5 dataset "incident_energy": shape (), type "<f8">
DEBUG - value: 1486.61 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/incident_energy
NXbeam.nxdl.xml:/incident_energy
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/incident_energy):
DEBUG - 
DEBUG - documentation (NXbeam.nxdl.xml:/incident_energy):
DEBUG - 
             Energy carried by each particle of the beam on entering the beamline component.
             
             In the case of a monochromatic beam this is the scalar energy.
             Several other use cases are permitted, depending on the
             presence of other incident_energy_X fields.
             
             * In the case of a polychromatic beam this is an array of length m of energies, with the relative weights in incident_energy_weights.
             * In the case of a monochromatic beam that varies shot-to-shot, this is an array of energies, one for each recorded shot.
               Here, incident_energy_weights and incident_energy_spread are not set.
             * In the case of a polychromatic beam that varies shot-to-shot,
               this is an array of length m with the relative weights in incident_energy_weights as a 2D array.
             * In the case of a polychromatic beam that varies shot-to-shot and where the channels also vary,
               this is a 2D array of dimensions nP by m (slow to fast) with the relative weights in incident_energy_weights as a 2D array.
             
             Note, variants are a good way to represent several of these use cases in a single dataset,
             e.g. if a calibrated, single-value energy value is available along with the original spectrum from which it was calibrated.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray/incident_energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/incident_energy
NXbeam.nxdl.xml:/incident_energy
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/incident_energy@units [NX_ENERGY]
DEBUG - NXbeam.nxdl.xml:/incident_energy@units [NX_ENERGY]
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/beam_xray/transformations [NXxps::/NXentry/NXinstrument/NXbeam/NXtransformations]): <HDF5 group "/1_as_loaded__Survey/instrument/beam_xray/transformations" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NXtransformations']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations
NXbeam.nxdl.xml:/TRANSFORMATIONS
NXtransformations.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations):
DEBUG - 
DEBUG - documentation (NXbeam.nxdl.xml:/TRANSFORMATIONS):
DEBUG - 
             Direction (and location) for the beam. The location of the beam can be given by
             any point which it passes through as its offset attribute.
        
DEBUG - documentation (NXtransformations.nxdl.xml:):
DEBUG - 
         Collection of axis-based translations and rotations to describe a geometry.
         May also contain axes that do not move and therefore do not have a transformation
         type specified, but are useful in understanding coordinate frames within which
         transformations are done, or in documenting important directions, such as the
         direction of gravity.
         
         A nested sequence of transformations lists the translation and rotation steps
         needed to describe the position and orientation of any movable or fixed device.
         
         There will be one or more transformations (axes) defined by one or more fields
         for each transformation. Transformations can also be described by NXlog groups when
         the values change with time. The all-caps name ``AXISNAME`` designates the
         particular axis generating a transformation (e.g. a rotation axis or a translation
         axis or a general axis).   The attribute ``units="NX_TRANSFORMATION"`` designates the
         units will be appropriate to the ``transformation_type`` attribute:
         
         * ``NX_LENGTH`` for ``translation``
         * ``NX_ANGLE`` for ``rotation``
         * ``NX_UNITLESS`` for axes for which no transformation type is specified
         
         This class will usually contain all axes of a sample stage or goniometer or
         a detector. The NeXus default :ref:`McSTAS coordinate frame<Design-CoordinateSystem>`
         is assumed, but additional useful coordinate axes may be defined by using axes for which
         no transformation type has been specified.
         
         **Transformation chain**
         
         The entry point of a chain of transformations is a field called ``depends_on``
         will be outside of this class and points to a field in here. Following the chain may
         also require following ``depends_on`` links to transformations outside, for example
         to a common base table.  If a relative path is given, it is relative to the group
         enclosing the ``depends_on`` specification.
         
         For a chain of three transformations, where :math:`T_1` depends on :math:`T_2`
         which in turn depends on :math:`T_3`, the final *active* transformation
         matrix :math:`T_f` is
         
         .. math:: T_f = T_3 . T_2 . T_1
         
         For example when positioning a flat detector, its pixel positions in the laboratory
         reference frame (:ref:`McSTAS coordinate frame<Design-CoordinateSystem>` by default)
         can be calculated by
         
         .. math:: X_\text{lab} = T_f . X_\text{pixel} = T_3 . T_2 . T_1 . X_\text{pixel}
         
         Note that :math:`T_1` comes first in the *depends-on* chain and is also applied first
         to the pixel coordinates.
         
         When we say transformation :math:`A` *depends on* transformation :math:`B` we mean that
         the physical motor that realizes :math:`A` is *stacked on top of* the motor that realizes :math:`B`.
         So the activate coordinate transformation :math:`A` needs to be applied to a coordinate
         before applying :math:`B`. In other words :math:`X' = B . A . X`.
         
         **Transformation matrix**
         
         In explicit terms, the transformations are a subset of affine transformations expressed as
         4x4 active transformation matrices that act on homogeneous coordinates, :math:`X=[x,y,z,1]^T`.
         
         For rotation and translation,
         
         .. math:: T_r &= \begin{pmatrix} R & o \\ 0_3 & 1 \end{pmatrix} \\ T_t &= \begin{pmatrix} I_3  & t + o \\ 0_3 & 1 \end{pmatrix}
         
         where :math:`R` is the usual 3x3 rotation matrix, :math:`o` is an offset vector,
         :math:`0_3` is a row of 3 zeros, :math:`I_3` is the 3x3 identity matrix and
         :math:`t` is the translation vector.
         
         :math:`o` is given by the ``offset`` attribute, :math:`t` is given by the ``vector``
         attribute multiplied by the field value, and :math:`R` is defined as a rotation
         about an axis in the direction of ``vector``, of angle of the field value.
         
         **Usage**
         
         One possible use of ``NXtransformations`` is to define the motors and
         transformations for a diffractometer (goniometer).  Such use is mentioned
         in the ``NXinstrument`` base class.  Use one ``NXtransformations`` group
         for each diffractometer and name the group appropriate to the device.
         Collecting the motors of a sample table or xyz-stage in an NXtransformations
         group is equally possible.
         
         Following the section on the general description of axis in NXtransformations is a section which
         documents the fields commonly used within NeXus for positioning purposes and their meaning. Whenever
         there is a need for positioning a beam line component please use the existing names. Use as many fields
         as needed in order to position the component. Feel free to add more axis if required. In the description
         given below, only those atttributes which are defined through the name are spcified. Add the other attributes
         of the full set:
         
         * vector
         * offset
         * transformation_type
         * depends_on
         
         as needed.
         
         **Example 1: goniometer**
         
         Position a sample mounted on a goniometer in the :ref:`McSTAS coordinate frame<Design-CoordinateSystem>`.
         
         The sample is oriented as follows
         
         .. math:: X_\text{lab} = R(\vec{v}_\omega, \omega) .
                                  T(\vec{v}_z, \text{sam}_z) .
                                  T(\vec{v}_y, \text{sam}_y) .
                                  T(\vec{v}_x, \text{sam}_x) .
                                  R(\vec{v}_\chi, \chi) .
                                  R(\vec{v}_\varphi, \varphi) . X_s
         
         where
         
         * :math:`R(\vec{v},a)` is a rotation around vector :math:`\vec{v}` with angle :math:`a`
         * :math:`T(\vec{u},t)` is a translation along vector :math:`\vec{u}` over a distance :math:`t`
         * :math:`X_s` a coordinate in the sample reference frame.
         
         .. code-block::
         
           entry:NXentry
             sample:NXsample
               depends_on=transformations/phi
               transformations:NXtransformations
                 phi=0
                   @depends_on=chi
                   @transformation_type=rotation
                   @vector=[-1 -0.0037 -0.002]
                   @units=degrees
                 chi=0
                   @depends_on=sam_x
                   @transformation_type=rotation
                   @vector=[0.0046 0.0372 0.9993]
                   @units=degrees
                 sam_x=0
                   @depends_on=sam_y
                   @transformation_type=translation
                   @vector=[1 0 0]
                   @units=mm
                 sam_y=0
                   @depends_on=sam_z
                   @transformation_type=translation
                   @vector=[0 1 0]
                   @units=mm
                 sam_z=0
                   @depends_on=omega
                   @transformation_type=translation
                   @vector=[0 0 1]
                   @units=mm
                 omega=174
                   @depends_on=.
                   @transformation_type=rotation
                   @vector=[-1 0 0]
                   @units=degrees
         
         **Example 2: different coordinate system**
         
         Define a laboratory reference frame with the X-axis along the beam and the Z-axis opposite to the direction of gravity.
         Three point detectors are positioned in this reference:
         
         * *transmission*:
             * point detector in the beam
             * 20 cm downstream from the sample (the origin of the reference frame)
         * *vertical*:
             * point detector 10 cm downstream from the sample
             * making an angle of 5 degrees with the beam w.r.t. the sample
             * positioned in the XZ-plane above the XY-plane
         * *horizontal*:
             * point detector 11 cm downstream from the sample
             * making an angle of 6 degrees with the beam w.r.t. the sample
             * positioned in the XY-plane above the XZ-plane
         
         The coordinates of the point detectors in the laboratory reference frame are
         
         * *transmission*: :math:`X_\text{lab} = T_x(20) . X_d`
         * *vertical*: :math:`X_\text{lab} = R_y(-5) . T_x(10) . X_d`
         * *horizontal*: :math:`X_\text{lab} = R_x(-90) . R_y(-6) . T_x(11) . X_d`
         
         where
         
         * :math:`T_x`, :math:`T_y`, :math:`T_z`: active transformation matrices for translation along the X, Y and Z axes
         * :math:`R_x`, :math:`R_y`, :math:`R_z`: active transformation matrices for rotation around the X, Y and Z axes
         * :math:`X_d` is a coordinate in the detector reference frame.
         
         Note that as these are point detectors, we only have one coordinate :math:`X_d=[0,0,0,1]^T`.
         
         .. code-block::
         
           entry:NXentry
             instrument:NXinstrument
               vertical:NXdetector
                 depends_on=position/distance
                 position:NXtransformations
                   distance=10         # move downstream from the sample
                     @depends_on=polar
                     @units=cm
                     @vector=[1 0 0]
                   polar=5             # title above the horizontal plane
                     @depends_on=azimuth
                     @units=degrees
                     @vector=[0 -1 0]
                   azimuth=0         # stay in the vertical plane
                     @depends_on=/entry/coordinate_system/beam
                     @units=degrees
                     @vector=[-1 0 0]
               horizontal:NXdetector
                 depends_on=position/distance
                 position:NXtransformations
                   distance=11         # move downstream from the sample
                     @depends_on=polar
                     @units=cm
                     @vector=[1 0 0]
                   polar=6             # title above the horizontal plane
                     @depends_on=azimuth
                     @units=degrees
                     @vector=[0 -1 0]
                   azimuth=90           # rotate to the horizontal plane
                     @depends_on=/entry/coordinate_system/beam
                     @units=degrees
                     @vector=[-1 0 0]
               transmission:NXdetector
                 depends_on=position/distance
                 position:NXtransformations
                   distance=20         # move downstream from the sample
                     @depends_on=/entry/coordinate_system/beam
                     @units=cm
                     @vector=[1 0 0]
             coordinate_system:NXtransformations
               beam=NaN               # value is never used
                 @depends_on=gravity
                 @vector=[1 0 0]     # X-axis points in the beam direction
               gravity=NaN             # value is never used
                 @depends_on=.         # end of the chain
                 @vector=[0 0 -1]       # Z-axis points up
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray/transformations@NX_class)
DEBUG - value: NXtransformations 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NXtransformations']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations
NXbeam.nxdl.xml:/TRANSFORMATIONS
NXtransformations.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/beam_xray/transformations/beam_azimuth_angle): <HDF5 dataset "beam_azimuth_angle": shape (), type "<f8">
DEBUG - value: 180.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle
NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle):
DEBUG - 
                             Azimuthal rotation of the beam from the y-direction towards the operator, defined
                             by the sample stage.
                        
DEBUG - documentation (NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION):
DEBUG - 
                 Direction of beam vector, its value is ignored. If missing, then the beam direction is defined as [0,0,1]
                 and passes through the origin
            
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME):
DEBUG - 
             Units need to be appropriate for translation or rotation
             
             The name of this field is not forced.  The user is free to use any name
             that does not cause confusion.  When using more than one ``AXISNAME`` field,
             make sure that each field name is unique in the same group, as required
             by HDF5.
             
             The values given should be the start points of exposures for the corresponding
             frames.  The end points should be given in ``AXISNAME_end``.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray/transformations/beam_azimuth_angle@depends_on)
DEBUG - value: /1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/z_rotation 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle
NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle@depends_on - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle/depends_on):
DEBUG - 
                                 This should point to the last element of the coordinate system transformations defined in
                                 /entry/geometries/xps_coordinate_system/coordinate_system_transformations.
                            
DEBUG - NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION@depends_on - [NX_CHAR]
DEBUG - documentation (NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION/depends_on):
DEBUG - 
                     Points to the path to a field defining the location on which this
                     depends or the string "." for origin.
                
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@depends_on - [NX_CHAR]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/depends_on):
DEBUG - 
                 Points to the path of a field defining the axis on which this instance of
                 NXtransformations depends or the string ".". It can also point to an instance of
                 ``NX_coordinate_system`` if this transformation depends on it.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray/transformations/beam_azimuth_angle@transformation_type)
DEBUG - value: rotation 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle
NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle@transformation_type - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle/transformation_type):
DEBUG - -> rotation
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle/transformation_type):
DEBUG - 
DEBUG - NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION@transformation_type - [NX_CHAR]
DEBUG - enumeration (NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION/transformation_type):
DEBUG - -> translation
DEBUG - documentation (NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION/transformation_type):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@transformation_type - [NX_CHAR]
DEBUG - enumeration (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - -> translation
DEBUG - -> rotation
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - 
                 The transformation_type may be ``translation``, in which case the
                 values are linear displacements along the axis, ``rotation``,
                 in which case the values are angular rotations around the axis.
                 
                 If this attribute is omitted, this is an axis for which there
                 is no motion to be specifies, such as the direction of gravity,
                 or the direction to the source, or a basis vector of a
                 coordinate frame.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray/transformations/beam_azimuth_angle@units)
DEBUG - value: degree 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle
NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle@units [NX_ANGLE]
DEBUG - NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION@units [NX_TRANSFORMATION]
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@units [NX_TRANSFORMATION]
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray/transformations/beam_azimuth_angle@vector)
DEBUG - value: [ 0  0 -1] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle
NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle@vector - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle/vector):
DEBUG - -> [0, 0, -1]
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_azimuth_angle/vector):
DEBUG - 
DEBUG - NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION@vector - [NX_NUMBER]
DEBUG - documentation (NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION/vector):
DEBUG - 
                     Three values that define the direction of beam vector
                
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@vector - [NX_NUMBER]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/vector):
DEBUG - 
                 Three values that define the axis for this transformation.
                 The axis should be normalized to unit length, making it
                 dimensionless.  For ``rotation`` axes, the direction should be
                 chosen for a right-handed rotation with increasing angle.
                 For ``translation`` axes the direction should be chosen for
                 increasing displacement. For general axes, an appropriate direction
                 should be chosen.
            
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/beam_xray/transformations/beam_polar_angle_of_incidence): <HDF5 dataset "beam_polar_angle_of_incidence": shape (), type "<f8">
DEBUG - value: 54.5 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence
NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence):
DEBUG - 
                             Incidence angle of the beam with respect to the upward z-direction, defined by
                             the sample stage.
                        
DEBUG - documentation (NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION):
DEBUG - 
                 Direction of beam vector, its value is ignored. If missing, then the beam direction is defined as [0,0,1]
                 and passes through the origin
            
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME):
DEBUG - 
             Units need to be appropriate for translation or rotation
             
             The name of this field is not forced.  The user is free to use any name
             that does not cause confusion.  When using more than one ``AXISNAME`` field,
             make sure that each field name is unique in the same group, as required
             by HDF5.
             
             The values given should be the start points of exposures for the corresponding
             frames.  The end points should be given in ``AXISNAME_end``.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray/transformations/beam_polar_angle_of_incidence@depends_on)
DEBUG - value: beam_azimuth_angle 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence
NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence@depends_on - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence/depends_on):
DEBUG - -> beam_azimuth_angle
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence/depends_on):
DEBUG - 
DEBUG - NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION@depends_on - [NX_CHAR]
DEBUG - documentation (NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION/depends_on):
DEBUG - 
                     Points to the path to a field defining the location on which this
                     depends or the string "." for origin.
                
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@depends_on - [NX_CHAR]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/depends_on):
DEBUG - 
                 Points to the path of a field defining the axis on which this instance of
                 NXtransformations depends or the string ".". It can also point to an instance of
                 ``NX_coordinate_system`` if this transformation depends on it.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray/transformations/beam_polar_angle_of_incidence@transformation_type)
DEBUG - value: rotation 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence
NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence@transformation_type - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence/transformation_type):
DEBUG - -> rotation
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence/transformation_type):
DEBUG - 
DEBUG - NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION@transformation_type - [NX_CHAR]
DEBUG - enumeration (NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION/transformation_type):
DEBUG - -> translation
DEBUG - documentation (NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION/transformation_type):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@transformation_type - [NX_CHAR]
DEBUG - enumeration (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - -> translation
DEBUG - -> rotation
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - 
                 The transformation_type may be ``translation``, in which case the
                 values are linear displacements along the axis, ``rotation``,
                 in which case the values are angular rotations around the axis.
                 
                 If this attribute is omitted, this is an axis for which there
                 is no motion to be specifies, such as the direction of gravity,
                 or the direction to the source, or a basis vector of a
                 coordinate frame.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray/transformations/beam_polar_angle_of_incidence@units)
DEBUG - value: degree 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence
NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence@units [NX_ANGLE]
DEBUG - NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION@units [NX_TRANSFORMATION]
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@units [NX_TRANSFORMATION]
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/beam_xray/transformations/beam_polar_angle_of_incidence@vector)
DEBUG - value: [ 0 -1  0] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXbeam', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence
NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence@vector - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence/vector):
DEBUG - -> [0, -1, 0]
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/beamTYPE/transformations/beam_polar_angle_of_incidence/vector):
DEBUG - 
DEBUG - NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION@vector - [NX_NUMBER]
DEBUG - documentation (NXbeam.nxdl.xml:/TRANSFORMATIONS/DIRECTION/vector):
DEBUG - 
                     Three values that define the direction of beam vector
                
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@vector - [NX_NUMBER]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/vector):
DEBUG - 
                 Three values that define the axis for this transformation.
                 The axis should be normalized to unit length, making it
                 dimensionless.  For ``rotation`` axes, the direction should be
                 chosen for a right-handed rotation with increasing angle.
                 For ``translation`` axes the direction should be chosen for
                 increasing displacement. For general axes, an appropriate direction
                 should be chosen.
            
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/device_information [NXxps::/NXentry/NXinstrument/NXfabrication]): <HDF5 group "/1_as_loaded__Survey/instrument/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information
NXinstrument.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information):
DEBUG - 
DEBUG - documentation (NXinstrument.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information
NXinstrument.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: b'XPS setup' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: b'SPECS GmbH' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/electronanalyser [NXxps::/NXentry/NXinstrument/NXelectronanalyser]): <HDF5 group "/1_as_loaded__Survey/instrument/electronanalyser" (12 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER
NXelectronanalyser.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER):
DEBUG - 
DEBUG - documentation (NXelectronanalyser.nxdl.xml:):
DEBUG - 
         Basic class for describing a electron analyzer.
         
         This concept is related to term `12.59`_ of the ISO 18115-1:2023 standard.
         
         .. _12.59: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.59
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser@NX_class)
DEBUG - value: NXelectronanalyser 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER
NXelectronanalyser.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser@default)
DEBUG - value: detector0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER
NXelectronanalyser.nxdl.xml:
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER@default - [NX_CHAR]
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER@default - [NX_CHAR]
DEBUG - NXelectronanalyser.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/default):
DEBUG - 
             .. index:: plotting
             
             Declares which child group contains a path leading
             to a :ref:`NXdata` group.
             
             It is recommended (as of NIAC2014) to use this attribute
             to help define the path to the default dataset to be plotted.
             See https://www.nexusformat.org/2014_How_to_find_default_data.html
             for a summary of the discussion.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/electronanalyser/collectioncolumn [NXxps::/NXentry/NXinstrument/NXelectronanalyser/NXcollectioncolumn]): <HDF5 group "/1_as_loaded__Survey/instrument/electronanalyser/collectioncolumn" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXcollectioncolumn']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN
NXelectronanalyser.nxdl.xml:/COLLECTIONCOLUMN
NXcollectioncolumn.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN):
DEBUG - 
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/COLLECTIONCOLUMN):
DEBUG - 
             Describes the electron collection (spatial and momentum imaging) column
        
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:):
DEBUG - 
         Subclass of NXelectronanalyser to describe the electron collection
         column of a photoelectron analyser.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/collectioncolumn@NX_class)
DEBUG - value: NXcollectioncolumn 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXcollectioncolumn']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN
NXelectronanalyser.nxdl.xml:/COLLECTIONCOLUMN
NXcollectioncolumn.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/collectioncolumn/scheme): <HDF5 dataset "scheme": shape (), type "|O">
DEBUG - value: b'angular dispersive' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXcollectioncolumn', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN/scheme
NXcollectioncolumn.nxdl.xml:/scheme
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN/scheme):
DEBUG - -> angular dispersive
DEBUG - -> spatial dispersive
DEBUG - -> momentum dispersive
DEBUG - -> non-dispersive
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN/scheme):
DEBUG - 
                             Scheme of the electron collection column.
                        
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/scheme):
DEBUG - 
             Scheme of the electron collection lens, i.e. standard, deflector, PEEM, momentum
             microscope, etc.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/collectioncolumn/spatial_acceptance): <HDF5 dataset "spatial_acceptance": shape (2,), type "<f8">
DEBUG - value: [0. 0.] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXcollectioncolumn', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN/spatial_acceptance
NXcollectioncolumn.nxdl.xml:/spatial_acceptance
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN/spatial_acceptance):
DEBUG - 
DEBUG - documentation (NXcollectioncolumn.nxdl.xml:/spatial_acceptance):
DEBUG - 
             Acceptance length or area of the collection column.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/collectioncolumn/spatial_acceptance@units)
DEBUG - value: um 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXcollectioncolumn', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN/spatial_acceptance
NXcollectioncolumn.nxdl.xml:/spatial_acceptance
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/COLLECTIONCOLUMN/spatial_acceptance@units - REQUIRED, but undefined unit category
DEBUG - NXcollectioncolumn.nxdl.xml:/spatial_acceptance@units [NX_LENGTH]
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/depends_on): <HDF5 dataset "depends_on": shape (), type "|O">
DEBUG - value: b'/1_as_loaded__Survey/instrument/electronanalyser/transformations/analyser_take_off_polar_angle' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/depends_on
NXelectronanalyser.nxdl.xml:/depends_on
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/depends_on):
DEBUG - 
                         Reference to the transformation describing the orientation of the analyzer
                         relative to a defined coordinate system.
                    
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/depends_on):
DEBUG - 
             Refers to the last transformation specifying the position of the electron analyser
             in the NXtransformations chain.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/description): <HDF5 dataset "description": shape (), type "|O">
DEBUG - value: b'hemispherical' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/description
NXelectronanalyser.nxdl.xml:/description
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/description):
DEBUG - 
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/description):
DEBUG - 
             Free text description of the type of the detector
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/electronanalyser/detector0 [NXxps::/NXentry/NXinstrument/NXelectronanalyser/NXdetector]): <HDF5 group "/1_as_loaded__Survey/instrument/electronanalyser/detector0" (5 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR
NXelectronanalyser.nxdl.xml:/DETECTOR
NXdetector.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR):
DEBUG - 
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/DETECTOR):
DEBUG - 
             Describes the electron detector
        
DEBUG - documentation (NXdetector.nxdl.xml:):
DEBUG - 
         A detector, detector bank, or multidetector.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/detector0@NX_class)
DEBUG - value: NXdetector 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR
NXelectronanalyser.nxdl.xml:/DETECTOR
NXdetector.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/detector0@default)
DEBUG - value: raw_data 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR
NXelectronanalyser.nxdl.xml:/DETECTOR
NXdetector.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR@default - [NX_CHAR]
DEBUG - NXelectronanalyser.nxdl.xml:/DETECTOR@default - [NX_CHAR]
DEBUG - NXdetector.nxdl.xml:@default - [NX_CHAR]
DEBUG - documentation (NXdetector.nxdl.xml:/default):
DEBUG - 
             .. index:: plotting
             
             Declares which child group contains a path leading
             to a :ref:`NXdata` group.
             
             It is recommended (as of NIAC2014) to use this attribute
             to help define the path to the default dataset to be plotted.
             See https://www.nexusformat.org/2014_How_to_find_default_data.html
             for a summary of the discussion.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/detector0/acquisition_mode): <HDF5 dataset "acquisition_mode": shape (), type "|O">
DEBUG - value: b'pulse counting' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector', 'NX_CHAR']
DEBUG - classes:
NXdetector.nxdl.xml:/acquisition_mode
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXdetector.nxdl.xml:/acquisition_mode):
DEBUG - -> gated
DEBUG - -> triggered
DEBUG - -> summed
DEBUG - -> event
DEBUG - -> histogrammed
DEBUG - -> decimated
DEBUG - -> pulse counting
DEBUG - documentation (NXdetector.nxdl.xml:/acquisition_mode):
DEBUG - 
             The acquisition mode of the detector.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/detector0/amplifier_type): <HDF5 dataset "amplifier_type": shape (), type "|O">
DEBUG - value: b'channeltron' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/amplifier_type
NXdetector.nxdl.xml:/amplifier_type
DEBUG - <<RECOMMENDED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/amplifier_type):
DEBUG - -> MCP
DEBUG - -> channeltron
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/amplifier_type):
DEBUG - 
                             Type of electron amplifier in the first amplification step.
                        
DEBUG - documentation (NXdetector.nxdl.xml:/amplifier_type):
DEBUG - 
             Type of electron amplifier, MCP, channeltron, etc.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/detector0/count_time): <HDF5 dataset "count_time": shape (), type "<f8">
DEBUG - value: 0.1 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector', 'NX_NUMBER']
DEBUG - classes:
NXdetector.nxdl.xml:/count_time
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdetector.nxdl.xml:/count_time):
DEBUG - 
             Elapsed actual counting time
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/detector0/count_time@units)
DEBUG - value: s 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector', 'NX_NUMBER']
DEBUG - classes:
NXdetector.nxdl.xml:/count_time
DEBUG - NXdetector.nxdl.xml:/count_time@units [NX_TIME]
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/detector0/detector_type): <HDF5 dataset "detector_type": shape (), type "|O">
DEBUG - value: b'Multi-anode' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/detector_type
NXdetector.nxdl.xml:/detector_type
DEBUG - <<RECOMMENDED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/detector_type):
DEBUG - -> DLD
DEBUG - -> Phosphor+CCD
DEBUG - -> Phosphor+CMOS
DEBUG - -> ECMOS
DEBUG - -> Anode
DEBUG - -> Multi-anode
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/detector_type):
DEBUG - 
                             Description of the detector type.
                        
DEBUG - documentation (NXdetector.nxdl.xml:/detector_type):
DEBUG - 
             Description of the detector type, DLD, Phosphor+CCD, CMOS.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/electronanalyser/detector0/raw_data [NXxps::/NXentry/NXinstrument/NXelectronanalyser/NXdetector/NXdata]): <HDF5 group "/1_as_loaded__Survey/instrument/electronanalyser/detector0/raw_data" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/raw_data
NXdetector.nxdl.xml:/DATA
NXdata.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/raw_data):
DEBUG - 
                             Contains the raw data collected by the detector before calibration.
                             The data which is considered raw might change from experiment to experiment
                             due to hardware pre-processing of the data.
                             This field ideally collects the data with the lowest level of processing
                             possible.
                             
                             Fields should be named according to new following convention:
                             
                             - **pixel_x**: Detector pixel in x direction.
                             - **pixel_y**: Detector pixel in y direction.
                             - **energy**: (Un)calibrated energy (kinetic or binding energy). Unit category: NX_ENERGY (e.g., eV).
                             - **kx**: (Un)calibrated x axis in k-space. Unit category: NX_ANY (e.g., 1/Angström).
                             - **ky**: (Un)calibrated y axis in k-space. Unit category: NX_ANY (1/Angström).
                             - **kz**: (Un)calibrated z axis in k-space. Unit category: NX_ANY (1/Angström).
                             - **angular0**: Fast-axis angular coordinate (or second slow axis if angularly integrated).
                               Unit category: NX_ANGLE
                             - **angular1**: Slow-axis angular coordinate (or second fast axis if simultaneously dispersed in 2 dimensions)
                               Unit category: NX_ANGLE
                             - **spatial0**: Fast-axis spatial coordinate (or second slow axis if spatially integrated)
                               Unit category: NX_LENGTH
                             - **spatial1**: Slow-axis spatial coordinate (or second fast axis if simultaneously dispersed in 2 dimensions)
                               Unit category: NX_LENGTH
                             - **delay**: Calibrated delay time. Unit category: NX_TIME (s).
                             - **polarization_angle**: Linear polarization angle of the incoming or
                               outgoing beam.
                               Unit category: NX_ANGLE (° or rad)
                             - **ellipticity**: Ellipticity of the incoming or outgoing beam.
                               Unit category: NX_ANGLE (° or rad)
                             - **time_of_flight**: Total time of flight. Unit category: NX_TIME_OF_FLIGHT
                             - **time_of_flight_adc**: Time-of-flight values, analog-to-digital converted.
                             - **external_AXIS**: Describes an axis which is coming from outside the detectors scope.
                        
DEBUG - documentation (NXdetector.nxdl.xml:/DATA):
DEBUG - 
             raw data output from the detector
        
DEBUG - documentation (NXdata.nxdl.xml:):
DEBUG - 
         :ref:`NXdata` describes the plottable data and related dimension scales.
         
         .. index:: plotting
         
         It is strongly recommended that there is at least one :ref:`NXdata`
         group in each :ref:`NXentry` group.
         Note that the fields named ``AXISNAME`` and ``DATA``
         can be defined with different names.
         (Upper case is used to indicate that the actual name is left to the user.)
         The ``signal`` and ``axes`` attributes of the
         ``data`` group define which items
         are plottable data and which are *dimension scales*, respectively.
         
         :ref:`NXdata` is used to implement one of the basic motivations in NeXus,
         to provide a default plot for the data of this :ref:`NXentry`.  The actual data
         might be stored in another group and (hard) linked to the :ref:`NXdata` group.
         
         * Each :ref:`NXdata` group will define one field as the default
           plottable data.  The value of the ``signal`` attribute names this field.
           Additional fields may be used to describe the dimension scales and
           uncertainities.
           The ``auxiliary_signals`` attribute is a list of the other fields
           to be plotted with the ``signal`` data.
         * The plottable data may be of arbitrary rank up to a maximum
           of ``NX_MAXRANK=32`` (for compatibility with backend file formats).
         * The plottable data will be named as the value of
           the group ``signal`` attribute, such as::
           
             data:NXdata
               @signal = "counts"
               @axes = "mr"
               @mr_indices = 0
               counts: float[100]  --> the default dependent data
               mr: float[100]  --> the default independent data
           
           The field named in the ``signal`` attribute **must** exist, either
           directly as a NeXus field or defined through a link.
         
         * The group ``axes`` attribute will name the
           *dimension scale* associated with the plottable data.
         
         If available, the standard deviations of the data are to be
         stored in a data set of the same rank and dimensions, with the name ``errors``.
         
         * For each data dimension, there should be a one-dimensional array
           of the same length.
         * These one-dimensional arrays are the *dimension scales* of the
           data,  *i.e*. the values of the independent variables at which the data
           is measured, such as scattering angle or energy transfer.
         
         .. index:: link
         .. index:: axes (attribute)
         
         The preferred method to associate each data dimension with
         its respective dimension scale is to specify the field name
         of each dimension scale in the group ``axes`` attribute as a string list.
         Here is an example for a 2-D data set *data* plotted
         against *time*, and *pressure*.  (An additional *temperature* data set
         is provided and could be selected as an alternate for the *pressure* axis.)::
         
           data_2d:NXdata
             @signal="data"
             @axes=["time", "pressure"]
             @pressure_indices=1
             @temperature_indices=1
             @time_indices=0
             data: float[1000,20]
             pressure: float[20]
             temperature: float[20]
             time: float[1000]
         
         .. rubric:: Old methods to identify the plottable data
         
         There are two older methods of associating
         each data dimension to its respective dimension scale.
         Both are now out of date and
         should not be used when writing new data files.
         However, client software should expect to see data files
         written with any of these methods.
         
           * One method uses the ``axes``
             attribute to specify the names of each *dimension scale*.
         
           * The oldest method uses the ``axis`` attribute on each
             *dimension scale* to identify
             with an integer the axis whose value is the number of the dimension.
         
         .. index: !plot; axis label
            plot, axis units
            units
            dimension scale
         
         Each axis of the plot may be labeled with information from the
         dimension scale for that axis.  The optional ``@long_name`` attribute
         is provided as the axis label default.  If ``@long_name`` is not
         defined, then use the name of the dimension scale.  A ``@units`` attribute,
         if available, may be added to the axis label for further description.
         See the section :ref:`Design-Units` for more information.
         
         .. index: !plot; axis title
         
         The optional ``title`` field, if available, provides a suggested
         title for the plot.  If no ``title`` field is found in the :ref:`NXdata`
         group, look for a ``title`` field in the parent :ref:`NXentry` group,
         with a fallback to displaying the path to the :ref:`NXdata` group.
         
         NeXus is about how to find and annotate the data to be plotted
         but not to describe how the data is to be plotted.
         (https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute)
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/detector0/raw_data@NX_class)
DEBUG - value: NXdata 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/raw_data
NXdetector.nxdl.xml:/DATA
NXdata.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/detector0/raw_data@signal)
DEBUG - value: raw 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector', 'NXdata']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/raw_data
NXdetector.nxdl.xml:/DATA
NXdata.nxdl.xml:
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/raw_data@signal - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/raw_data/signal):
DEBUG - -> raw
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/raw_data/signal):
DEBUG - 
DEBUG - NXdata.nxdl.xml:@signal - [NX_CHAR]
DEBUG - documentation (NXdata.nxdl.xml:/signal):
DEBUG - 
             .. index:: find the default plottable data
             .. index:: plotting
             .. index:: signal attribute value
             
             Declares which NeXus field is the default.
             The value is the :ref:`name <validItemName>` of the data field to be plotted.
             This field or link *must* exist and be a direct child of this NXdata group.
             
             It is recommended (as of NIAC2014) to use this attribute
             rather than adding a signal attribute to the field.
             See https://www.nexusformat.org/2014_How_to_find_default_data.html
             for a summary of the discussion.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/detector0/raw_data/cycle0_scan0): <HDF5 dataset "cycle0_scan0": shape (1351,), type "<f8">
DEBUG - value: [15598.7  15867.9  15651.5  ...   749.55   520.2    181.53] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXdata.nxdl.xml:/AXISNAME):
DEBUG - 
             Dimension scale defining an axis of the data.
             Client is responsible for defining the dimensions of the data.
             The name of this field may be changed to fit the circumstances.
             Standard NeXus client tools will use the attributes to determine
             how to use this field.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/detector0/raw_data/cycle0_scan0@units)
DEBUG - value: counts 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXdata.nxdl.xml:/AXISNAME
DEBUG - NXdata.nxdl.xml:/AXISNAME@units - REQUIRED, but undefined unit category
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/detector0/raw_data/raw): <HDF5 dataset "raw": shape (1, 1351), type "<f8">
DEBUG - value: [15598.7  15867.9  15651.5  ...   749.55   520.2    181.53] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/raw_data/raw
NXdata.nxdl.xml:/DATA
DEBUG - <<REQUIRED>>
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/raw_data/raw):
DEBUG - 
                                 Raw data before calibration.
                            
DEBUG - documentation (NXdata.nxdl.xml:/DATA):
DEBUG - 
             .. index:: plotting
             
             This field contains the data values to be used as the
             NeXus *plottable data*.
             Client is responsible for defining the dimensions of the data.
             The name of this field may be changed to fit the circumstances.
             Standard NeXus client tools will use the attributes to determine
             how to use this field.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/detector0/raw_data/raw@units)
DEBUG - value: counts 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXdetector', 'NXdata', 'NX_NUMBER']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/raw_data/raw
NXdata.nxdl.xml:/DATA
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/DETECTOR/raw_data/raw@units - REQUIRED, but undefined unit category
DEBUG - NXdata.nxdl.xml:/DATA@units - REQUIRED, but undefined unit category
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/electronanalyser/device_information [NXxps::/NXentry/NXinstrument/NXelectronanalyser/NXfabrication]): <HDF5 group "/1_as_loaded__Survey/instrument/electronanalyser/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/device_information
NXelectronanalyser.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/device_information):
DEBUG - 
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/device_information
NXelectronanalyser.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: b'PHOIBOS 150' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: b'SPECS GmbH' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/electronanalyser/energy_resolution [NXxps::/NXentry/NXinstrument/NXelectronanalyser/NXresolution]): <HDF5 group "/1_as_loaded__Survey/instrument/electronanalyser/energy_resolution" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXresolution']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/energy_resolution
NXelectronanalyser.nxdl.xml:/energy_resolution
NXresolution.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/energy_resolution):
DEBUG - 
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/energy_resolution):
DEBUG - 
             Energy resolution of the analyser with the current setting. May be linked from an
             NXcalibration.
        
DEBUG - documentation (NXresolution.nxdl.xml:):
DEBUG - 
         Describes the resolution of a physical quantity.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/energy_resolution@NX_class)
DEBUG - value: NXresolution 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXresolution']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/energy_resolution
NXelectronanalyser.nxdl.xml:/energy_resolution
NXresolution.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/energy_resolution/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: b'energy' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXresolution', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/energy_resolution/physical_quantity
NXelectronanalyser.nxdl.xml:/energy_resolution/physical_quantity
NXresolution.nxdl.xml:/physical_quantity
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/energy_resolution/physical_quantity):
DEBUG - -> energy
DEBUG - enumeration (NXelectronanalyser.nxdl.xml:/energy_resolution/physical_quantity):
DEBUG - -> energy
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/energy_resolution/physical_quantity):
DEBUG - 
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/energy_resolution/physical_quantity):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:/physical_quantity):
DEBUG - 
             The physical quantity of the resolution, e.g.,
             energy, momentum, time, etc.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/energy_resolution/resolution): <HDF5 dataset "resolution": shape (), type "<f8">
DEBUG - value: 1.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXresolution', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/energy_resolution/resolution
NXelectronanalyser.nxdl.xml:/energy_resolution/resolution
NXresolution.nxdl.xml:/resolution
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/energy_resolution/resolution):
DEBUG - 
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/energy_resolution/resolution):
DEBUG - 
                 Minimum distinguishable energy separation in the energy spectra.
                 
                 This concept is related to term `10.24`_ of the ISO 18115-1:2023 standard.
                 
                 .. _10.24: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:10.24
            
DEBUG - documentation (NXresolution.nxdl.xml:/resolution):
DEBUG - 
             The resolution of the physical quantity.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/energy_resolution/resolution@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXresolution', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/energy_resolution/resolution
NXelectronanalyser.nxdl.xml:/energy_resolution/resolution
NXresolution.nxdl.xml:/resolution
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/energy_resolution/resolution@units - REQUIRED, but undefined unit category
DEBUG - NXelectronanalyser.nxdl.xml:/energy_resolution/resolution@units [NX_ENERGY]
DEBUG - NXresolution.nxdl.xml:/resolution@units [NX_ANY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/energy_resolution/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'estimated' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXresolution', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/energy_resolution/type
NXresolution.nxdl.xml:/type
DEBUG - <<RECOMMENDED>>
DEBUG - enumeration (NXresolution.nxdl.xml:/type):
DEBUG - -> estimated
DEBUG - -> derived
DEBUG - -> calibrated
DEBUG - -> other
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/energy_resolution/type):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:/type):
DEBUG - 
             The process by which the resolution was determined.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/electronanalyser/energydispersion [NXxps::/NXentry/NXinstrument/NXelectronanalyser/NXenergydispersion]): <HDF5 group "/1_as_loaded__Survey/instrument/electronanalyser/energydispersion" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXenergydispersion']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION
NXelectronanalyser.nxdl.xml:/ENERGYDISPERSION
NXenergydispersion.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION):
DEBUG - 
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/ENERGYDISPERSION):
DEBUG - 
             Describes the energy dispersion section
        
DEBUG - documentation (NXenergydispersion.nxdl.xml:):
DEBUG - 
         Subclass of NXelectronanalyser to describe the energy dispersion section of a
         photoelectron analyser.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/energydispersion@NX_class)
DEBUG - value: NXenergydispersion 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXenergydispersion']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION
NXelectronanalyser.nxdl.xml:/ENERGYDISPERSION
NXenergydispersion.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/energydispersion/energy_scan_mode): <HDF5 dataset "energy_scan_mode": shape (), type "|O">
DEBUG - value: b'fixed_analyser_transmission' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXenergydispersion', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION/energy_scan_mode
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION/energy_scan_mode
NXenergydispersion.nxdl.xml:/energy_scan_mode
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXenergydispersion.nxdl.xml:/energy_scan_mode):
DEBUG - -> fixed_analyser_transmission
DEBUG - -> fixed_retardation_ratio
DEBUG - -> fixed_energy
DEBUG - -> snapshot
DEBUG - -> dither
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION/energy_scan_mode):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION/energy_scan_mode):
DEBUG - 
DEBUG - documentation (NXenergydispersion.nxdl.xml:/energy_scan_mode):
DEBUG - 
             Way of scanning the energy axis
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/energydispersion/pass_energy): <HDF5 dataset "pass_energy": shape (), type "<f8">
DEBUG - value: 100.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXenergydispersion', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION/pass_energy
NXenergydispersion.nxdl.xml:/pass_energy
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION/pass_energy):
DEBUG - 
                             Either `pass_energy` or `drift_energy` must be supplied. `pass_energy` should be used when working
                             with hemispherical analysers.
                        
DEBUG - documentation (NXenergydispersion.nxdl.xml:/pass_energy):
DEBUG - 
             Mean kinetic energy of the electrons in the energy-dispersive portion of the analyser.
             This term should be used for hemispherical analysers.
             
             This concept is related to term `12.63`_ of the ISO 18115-1:2023 standard.
             
             .. _12.63: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:12.63
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/energydispersion/pass_energy@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXenergydispersion', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION/pass_energy
NXenergydispersion.nxdl.xml:/pass_energy
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION/pass_energy@units [NX_ENERGY]
DEBUG - NXenergydispersion.nxdl.xml:/pass_energy@units [NX_ENERGY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/energydispersion/scheme): <HDF5 dataset "scheme": shape (), type "|O">
DEBUG - value: b'hemispherical' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXenergydispersion', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION/scheme
NXenergydispersion.nxdl.xml:/scheme
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION/scheme):
DEBUG - -> tof
DEBUG - -> hemispherical
DEBUG - -> double hemispherical
DEBUG - -> cylindrical mirror
DEBUG - -> display mirror
DEBUG - -> retarding grid
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/ENERGYDISPERSION/scheme):
DEBUG - 
DEBUG - documentation (NXenergydispersion.nxdl.xml:/scheme):
DEBUG - 
             Energy dispersion scheme employed, for example: tof, hemispherical, cylindrical,
             mirror, retarding grid, etc.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'PHOIBOS 150' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NX_CHAR']
DEBUG - classes:
NXelectronanalyser.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/name):
DEBUG - 
             Name or model of the equipment
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/slow_axes): <HDF5 dataset "slow_axes": shape (), type "|O">
DEBUG - value: b'energy' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/slow_axes
NXelectronanalyser.nxdl.xml:/slow_axes
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/slow_axes):
DEBUG - 
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/slow_axes):
DEBUG - 
             List of the axes that are acquired by scanning a physical parameter, listed in
             order of decreasing speed. See fast_axes for examples.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/target_bias): <HDF5 dataset "target_bias": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser']
DEBUG - NOT IN SCHEMA
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/target_bias@units)
DEBUG - value: V 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser']
DEBUG - NOT IN SCHEMA
DEBUG - 
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/electronanalyser/transformations [NXxps::/NXentry/NXinstrument/NXelectronanalyser/NXtransformations]): <HDF5 group "/1_as_loaded__Survey/instrument/electronanalyser/transformations" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXtransformations']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations
NXelectronanalyser.nxdl.xml:/TRANSFORMATIONS
NXtransformations.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations):
DEBUG - 
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/TRANSFORMATIONS):
DEBUG - 
             Collection of axis-based translations and rotations to describe the location and
             geometry of the electron analyser as a component in the instrument. Conventions
             from the NXtransformations base class are used. In principle, the McStas
             coordinate system is used. The first transformation has to point either to
             another component of the system or "." (for pointing to the reference frame) to
             relate it relative to the experimental setup. Typically, the components of a
             system should all be related relative to each other and only one component
             should relate to the reference coordinate system.
        
DEBUG - documentation (NXtransformations.nxdl.xml:):
DEBUG - 
         Collection of axis-based translations and rotations to describe a geometry.
         May also contain axes that do not move and therefore do not have a transformation
         type specified, but are useful in understanding coordinate frames within which
         transformations are done, or in documenting important directions, such as the
         direction of gravity.
         
         A nested sequence of transformations lists the translation and rotation steps
         needed to describe the position and orientation of any movable or fixed device.
         
         There will be one or more transformations (axes) defined by one or more fields
         for each transformation. Transformations can also be described by NXlog groups when
         the values change with time. The all-caps name ``AXISNAME`` designates the
         particular axis generating a transformation (e.g. a rotation axis or a translation
         axis or a general axis).   The attribute ``units="NX_TRANSFORMATION"`` designates the
         units will be appropriate to the ``transformation_type`` attribute:
         
         * ``NX_LENGTH`` for ``translation``
         * ``NX_ANGLE`` for ``rotation``
         * ``NX_UNITLESS`` for axes for which no transformation type is specified
         
         This class will usually contain all axes of a sample stage or goniometer or
         a detector. The NeXus default :ref:`McSTAS coordinate frame<Design-CoordinateSystem>`
         is assumed, but additional useful coordinate axes may be defined by using axes for which
         no transformation type has been specified.
         
         **Transformation chain**
         
         The entry point of a chain of transformations is a field called ``depends_on``
         will be outside of this class and points to a field in here. Following the chain may
         also require following ``depends_on`` links to transformations outside, for example
         to a common base table.  If a relative path is given, it is relative to the group
         enclosing the ``depends_on`` specification.
         
         For a chain of three transformations, where :math:`T_1` depends on :math:`T_2`
         which in turn depends on :math:`T_3`, the final *active* transformation
         matrix :math:`T_f` is
         
         .. math:: T_f = T_3 . T_2 . T_1
         
         For example when positioning a flat detector, its pixel positions in the laboratory
         reference frame (:ref:`McSTAS coordinate frame<Design-CoordinateSystem>` by default)
         can be calculated by
         
         .. math:: X_\text{lab} = T_f . X_\text{pixel} = T_3 . T_2 . T_1 . X_\text{pixel}
         
         Note that :math:`T_1` comes first in the *depends-on* chain and is also applied first
         to the pixel coordinates.
         
         When we say transformation :math:`A` *depends on* transformation :math:`B` we mean that
         the physical motor that realizes :math:`A` is *stacked on top of* the motor that realizes :math:`B`.
         So the activate coordinate transformation :math:`A` needs to be applied to a coordinate
         before applying :math:`B`. In other words :math:`X' = B . A . X`.
         
         **Transformation matrix**
         
         In explicit terms, the transformations are a subset of affine transformations expressed as
         4x4 active transformation matrices that act on homogeneous coordinates, :math:`X=[x,y,z,1]^T`.
         
         For rotation and translation,
         
         .. math:: T_r &= \begin{pmatrix} R & o \\ 0_3 & 1 \end{pmatrix} \\ T_t &= \begin{pmatrix} I_3  & t + o \\ 0_3 & 1 \end{pmatrix}
         
         where :math:`R` is the usual 3x3 rotation matrix, :math:`o` is an offset vector,
         :math:`0_3` is a row of 3 zeros, :math:`I_3` is the 3x3 identity matrix and
         :math:`t` is the translation vector.
         
         :math:`o` is given by the ``offset`` attribute, :math:`t` is given by the ``vector``
         attribute multiplied by the field value, and :math:`R` is defined as a rotation
         about an axis in the direction of ``vector``, of angle of the field value.
         
         **Usage**
         
         One possible use of ``NXtransformations`` is to define the motors and
         transformations for a diffractometer (goniometer).  Such use is mentioned
         in the ``NXinstrument`` base class.  Use one ``NXtransformations`` group
         for each diffractometer and name the group appropriate to the device.
         Collecting the motors of a sample table or xyz-stage in an NXtransformations
         group is equally possible.
         
         Following the section on the general description of axis in NXtransformations is a section which
         documents the fields commonly used within NeXus for positioning purposes and their meaning. Whenever
         there is a need for positioning a beam line component please use the existing names. Use as many fields
         as needed in order to position the component. Feel free to add more axis if required. In the description
         given below, only those atttributes which are defined through the name are spcified. Add the other attributes
         of the full set:
         
         * vector
         * offset
         * transformation_type
         * depends_on
         
         as needed.
         
         **Example 1: goniometer**
         
         Position a sample mounted on a goniometer in the :ref:`McSTAS coordinate frame<Design-CoordinateSystem>`.
         
         The sample is oriented as follows
         
         .. math:: X_\text{lab} = R(\vec{v}_\omega, \omega) .
                                  T(\vec{v}_z, \text{sam}_z) .
                                  T(\vec{v}_y, \text{sam}_y) .
                                  T(\vec{v}_x, \text{sam}_x) .
                                  R(\vec{v}_\chi, \chi) .
                                  R(\vec{v}_\varphi, \varphi) . X_s
         
         where
         
         * :math:`R(\vec{v},a)` is a rotation around vector :math:`\vec{v}` with angle :math:`a`
         * :math:`T(\vec{u},t)` is a translation along vector :math:`\vec{u}` over a distance :math:`t`
         * :math:`X_s` a coordinate in the sample reference frame.
         
         .. code-block::
         
           entry:NXentry
             sample:NXsample
               depends_on=transformations/phi
               transformations:NXtransformations
                 phi=0
                   @depends_on=chi
                   @transformation_type=rotation
                   @vector=[-1 -0.0037 -0.002]
                   @units=degrees
                 chi=0
                   @depends_on=sam_x
                   @transformation_type=rotation
                   @vector=[0.0046 0.0372 0.9993]
                   @units=degrees
                 sam_x=0
                   @depends_on=sam_y
                   @transformation_type=translation
                   @vector=[1 0 0]
                   @units=mm
                 sam_y=0
                   @depends_on=sam_z
                   @transformation_type=translation
                   @vector=[0 1 0]
                   @units=mm
                 sam_z=0
                   @depends_on=omega
                   @transformation_type=translation
                   @vector=[0 0 1]
                   @units=mm
                 omega=174
                   @depends_on=.
                   @transformation_type=rotation
                   @vector=[-1 0 0]
                   @units=degrees
         
         **Example 2: different coordinate system**
         
         Define a laboratory reference frame with the X-axis along the beam and the Z-axis opposite to the direction of gravity.
         Three point detectors are positioned in this reference:
         
         * *transmission*:
             * point detector in the beam
             * 20 cm downstream from the sample (the origin of the reference frame)
         * *vertical*:
             * point detector 10 cm downstream from the sample
             * making an angle of 5 degrees with the beam w.r.t. the sample
             * positioned in the XZ-plane above the XY-plane
         * *horizontal*:
             * point detector 11 cm downstream from the sample
             * making an angle of 6 degrees with the beam w.r.t. the sample
             * positioned in the XY-plane above the XZ-plane
         
         The coordinates of the point detectors in the laboratory reference frame are
         
         * *transmission*: :math:`X_\text{lab} = T_x(20) . X_d`
         * *vertical*: :math:`X_\text{lab} = R_y(-5) . T_x(10) . X_d`
         * *horizontal*: :math:`X_\text{lab} = R_x(-90) . R_y(-6) . T_x(11) . X_d`
         
         where
         
         * :math:`T_x`, :math:`T_y`, :math:`T_z`: active transformation matrices for translation along the X, Y and Z axes
         * :math:`R_x`, :math:`R_y`, :math:`R_z`: active transformation matrices for rotation around the X, Y and Z axes
         * :math:`X_d` is a coordinate in the detector reference frame.
         
         Note that as these are point detectors, we only have one coordinate :math:`X_d=[0,0,0,1]^T`.
         
         .. code-block::
         
           entry:NXentry
             instrument:NXinstrument
               vertical:NXdetector
                 depends_on=position/distance
                 position:NXtransformations
                   distance=10         # move downstream from the sample
                     @depends_on=polar
                     @units=cm
                     @vector=[1 0 0]
                   polar=5             # title above the horizontal plane
                     @depends_on=azimuth
                     @units=degrees
                     @vector=[0 -1 0]
                   azimuth=0         # stay in the vertical plane
                     @depends_on=/entry/coordinate_system/beam
                     @units=degrees
                     @vector=[-1 0 0]
               horizontal:NXdetector
                 depends_on=position/distance
                 position:NXtransformations
                   distance=11         # move downstream from the sample
                     @depends_on=polar
                     @units=cm
                     @vector=[1 0 0]
                   polar=6             # title above the horizontal plane
                     @depends_on=azimuth
                     @units=degrees
                     @vector=[0 -1 0]
                   azimuth=90           # rotate to the horizontal plane
                     @depends_on=/entry/coordinate_system/beam
                     @units=degrees
                     @vector=[-1 0 0]
               transmission:NXdetector
                 depends_on=position/distance
                 position:NXtransformations
                   distance=20         # move downstream from the sample
                     @depends_on=/entry/coordinate_system/beam
                     @units=cm
                     @vector=[1 0 0]
             coordinate_system:NXtransformations
               beam=NaN               # value is never used
                 @depends_on=gravity
                 @vector=[1 0 0]     # X-axis points in the beam direction
               gravity=NaN             # value is never used
                 @depends_on=.         # end of the chain
                 @vector=[0 0 -1]       # Z-axis points up
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/transformations@NX_class)
DEBUG - value: NXtransformations 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXtransformations']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations
NXelectronanalyser.nxdl.xml:/TRANSFORMATIONS
NXtransformations.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/transformations/analyser_take_off_azimuth_angle): <HDF5 dataset "analyser_take_off_azimuth_angle": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle):
DEBUG - 
                             Azimuthal rotation of the analyser from the y-direction towards the operator,
                             defined by the sample stage.
                        
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME):
DEBUG - 
             Units need to be appropriate for translation or rotation
             
             The name of this field is not forced.  The user is free to use any name
             that does not cause confusion.  When using more than one ``AXISNAME`` field,
             make sure that each field name is unique in the same group, as required
             by HDF5.
             
             The values given should be the start points of exposures for the corresponding
             frames.  The end points should be given in ``AXISNAME_end``.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/transformations/analyser_take_off_azimuth_angle@depends_on)
DEBUG - value: /1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/z_rotation 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle@depends_on - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle/depends_on):
DEBUG - 
                                 This should point to the last element of the coordinate system transformations defined in
                                 /entry/geometries/xps_coordinate_system/coordinate_system_transformations.
                            
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@depends_on - [NX_CHAR]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/depends_on):
DEBUG - 
                 Points to the path of a field defining the axis on which this instance of
                 NXtransformations depends or the string ".". It can also point to an instance of
                 ``NX_coordinate_system`` if this transformation depends on it.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/transformations/analyser_take_off_azimuth_angle@transformation_type)
DEBUG - value: rotation 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle@transformation_type - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle/transformation_type):
DEBUG - -> rotation
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle/transformation_type):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@transformation_type - [NX_CHAR]
DEBUG - enumeration (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - -> translation
DEBUG - -> rotation
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - 
                 The transformation_type may be ``translation``, in which case the
                 values are linear displacements along the axis, ``rotation``,
                 in which case the values are angular rotations around the axis.
                 
                 If this attribute is omitted, this is an axis for which there
                 is no motion to be specifies, such as the direction of gravity,
                 or the direction to the source, or a basis vector of a
                 coordinate frame.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/transformations/analyser_take_off_azimuth_angle@units)
DEBUG - value: degree 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle@units [NX_ANGLE]
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@units [NX_TRANSFORMATION]
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/transformations/analyser_take_off_azimuth_angle@vector)
DEBUG - value: [ 0  0 -1] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle@vector - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle/vector):
DEBUG - -> [0, 0, -1]
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_azimuth_angle/vector):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@vector - [NX_NUMBER]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/vector):
DEBUG - 
                 Three values that define the axis for this transformation.
                 The axis should be normalized to unit length, making it
                 dimensionless.  For ``rotation`` axes, the direction should be
                 chosen for a right-handed rotation with increasing angle.
                 For ``translation`` axes the direction should be chosen for
                 increasing displacement. For general axes, an appropriate direction
                 should be chosen.
            
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/transformations/analyser_take_off_polar_angle): <HDF5 dataset "analyser_take_off_polar_angle": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle):
DEBUG - 
                             Polar tilt of the analyser with respect to the upward z-direction, defined by
                             the sample stage.
                             
                             The angle between the incoming beam and the analyser is given by
                             beam_analyser_angle = beam_polar_angle_of_incidence + analyser_take_off_polar_angle.
                             In practice, the analyser axis is often set as the z axis (analyser_take_off_polar_angle = 0),
                             so that beam_analyser_angle = beam_polar_angle_of_incidence. For magic angle configurations,
                             this angle is 54.5°.
                        
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME):
DEBUG - 
             Units need to be appropriate for translation or rotation
             
             The name of this field is not forced.  The user is free to use any name
             that does not cause confusion.  When using more than one ``AXISNAME`` field,
             make sure that each field name is unique in the same group, as required
             by HDF5.
             
             The values given should be the start points of exposures for the corresponding
             frames.  The end points should be given in ``AXISNAME_end``.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/transformations/analyser_take_off_polar_angle@depends_on)
DEBUG - value: analyser_take_off_azimuth_angle 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle@depends_on - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle/depends_on):
DEBUG - -> analyser_take_off_azimuth_angle
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle/depends_on):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@depends_on - [NX_CHAR]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/depends_on):
DEBUG - 
                 Points to the path of a field defining the axis on which this instance of
                 NXtransformations depends or the string ".". It can also point to an instance of
                 ``NX_coordinate_system`` if this transformation depends on it.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/transformations/analyser_take_off_polar_angle@transformation_type)
DEBUG - value: rotation 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle@transformation_type - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle/transformation_type):
DEBUG - -> rotation
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle/transformation_type):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@transformation_type - [NX_CHAR]
DEBUG - enumeration (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - -> translation
DEBUG - -> rotation
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - 
                 The transformation_type may be ``translation``, in which case the
                 values are linear displacements along the axis, ``rotation``,
                 in which case the values are angular rotations around the axis.
                 
                 If this attribute is omitted, this is an axis for which there
                 is no motion to be specifies, such as the direction of gravity,
                 or the direction to the source, or a basis vector of a
                 coordinate frame.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/transformations/analyser_take_off_polar_angle@units)
DEBUG - value: degree 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle@units [NX_ANGLE]
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@units [NX_TRANSFORMATION]
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/transformations/analyser_take_off_polar_angle@vector)
DEBUG - value: [ 0 -1  0] 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle@vector - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle/vector):
DEBUG - -> [0, -1, 0]
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/transformations/analyser_take_off_polar_angle/vector):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@vector - [NX_NUMBER]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/vector):
DEBUG - 
                 Three values that define the axis for this transformation.
                 The axis should be normalized to unit length, making it
                 dimensionless.  For ``rotation`` axes, the direction should be
                 chosen for a right-handed rotation with increasing angle.
                 For ``translation`` axes the direction should be chosen for
                 increasing displacement. For general axes, an appropriate direction
                 should be chosen.
            
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/electronanalyser/work_function): <HDF5 dataset "work_function": shape (), type "<f8">
DEBUG - value: 4.1082 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NX_FLOAT']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/work_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/work_function
NXelectronanalyser.nxdl.xml:/work_function
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/work_function):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/work_function):
DEBUG - 
DEBUG - documentation (NXelectronanalyser.nxdl.xml:/work_function):
DEBUG - 
             Work function of the electron analyser.
             
             The work function of a uniform surface of a conductor is the minimum energy required to remove
             an electron from the interior of the solid to a vacuum level immediately outside the solid surface.
             
             The kinetic energy :math:`E_K` of a photoelectron emitted from an energy-level with binding energy
             :math:`E_B` below the Fermi level is given by :math:`E_K = h\nu - E_B - W = h\nu - E_B - e \phi_{\mathrm{sample}}`.
             Here, :math:`W = e \phi_{\mathrm{sample}}` is the work function of the sample surface (with the potential difference :math:`\phi_{\mathrm{sample}}`
             between the electrochemical potential of electrons in the bulk and the electrostatic potential of an electron in the vacuum just outside the surface).
             
             In PES measurements, the sample and the spectrometer (with work function :math:`\phi_{\mathrm{spectr.}}`)
             are electrically connected and therefore their Fermi levels are aligned. Due to the difference in local
             vacuum level between the sample and spectrometer, there exists an electric potential difference (contact potential)
             :math:`\Delta\phi = \phi_{\mathrm{sample}} - \phi_{\mathrm{spectr.}}`. The measured kinetic energy of
             a photoelectron in PES is therefore given by
             :math:`E_K^{\mathrm{meas.}} = h\nu - E_B + \Delta \phi = h\nu - E_B - e \phi_{\mathrm{spectr.}}`.
             As a result, the measured kinetic energy :math:`E_K^{\mathrm{meas.}}` of a photoelectron is `independent`
             of the sample work function. Nonetheless, the work function :math:`\phi_s` needs to be known to
             accurately determine the binding energy scale.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/electronanalyser/work_function@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXelectronanalyser', 'NX_FLOAT']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/work_function
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/work_function
NXelectronanalyser.nxdl.xml:/work_function
DEBUG - NXxps.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/work_function@units - REQUIRED, but undefined unit category
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/ELECTRONANALYSER/work_function@units [NX_ENERGY]
DEBUG - NXelectronanalyser.nxdl.xml:/work_function@units [NX_ENERGY]
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/energy_resolution [NXxps::/NXentry/NXinstrument/NXresolution]): <HDF5 group "/1_as_loaded__Survey/instrument/energy_resolution" (3 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution
NXinstrument.nxdl.xml:/RESOLUTION
NXresolution.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution):
DEBUG - 
                     Overall energy resolution of the photoemission instrument.
                
DEBUG - documentation (NXinstrument.nxdl.xml:/RESOLUTION):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:):
DEBUG - 
         Describes the resolution of a physical quantity.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/energy_resolution@NX_class)
DEBUG - value: NXresolution 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution
NXinstrument.nxdl.xml:/RESOLUTION
NXresolution.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/energy_resolution/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: b'energy' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/physical_quantity
NXresolution.nxdl.xml:/physical_quantity
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/physical_quantity):
DEBUG - -> energy
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/physical_quantity):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:/physical_quantity):
DEBUG - 
             The physical quantity of the resolution, e.g.,
             energy, momentum, time, etc.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/energy_resolution/resolution): <HDF5 dataset "resolution": shape (), type "<f8">
DEBUG - value: 0.2 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/resolution
NXresolution.nxdl.xml:/resolution
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/resolution):
DEBUG - 
                         Minimum distinguishable energy separation in the energy spectra.
                         
                         This concept is related to term `10.24`_ of the ISO 18115-1:2023 standard.
                         
                         .. _10.24: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:10.24
                    
DEBUG - documentation (NXresolution.nxdl.xml:/resolution):
DEBUG - 
             The resolution of the physical quantity.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/energy_resolution/resolution@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/resolution
NXresolution.nxdl.xml:/resolution
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/resolution@units [NX_ENERGY]
DEBUG - NXresolution.nxdl.xml:/resolution@units [NX_ANY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/energy_resolution/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'calibrated' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXresolution', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/type
NXresolution.nxdl.xml:/type
DEBUG - <<RECOMMENDED>>
DEBUG - enumeration (NXresolution.nxdl.xml:/type):
DEBUG - -> estimated
DEBUG - -> derived
DEBUG - -> calibrated
DEBUG - -> other
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/energy_resolution/type):
DEBUG - 
DEBUG - documentation (NXresolution.nxdl.xml:/type):
DEBUG - 
             The process by which the resolution was determined.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/flood_gun [NXxps::/NXentry/NXinstrument/NXactuator]): <HDF5 group "/1_as_loaded__Survey/instrument/flood_gun" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun
NXinstrument.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun):
DEBUG - 
                     Device to bring low-energy electrons to the sample for charge neutralization
                
DEBUG - documentation (NXinstrument.nxdl.xml:/ACTUATOR):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/flood_gun@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun
NXinstrument.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/flood_gun/current): <HDF5 dataset "current": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/current
NXactuator.nxdl.xml:/OUTPUT
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/current):
DEBUG - 
                         In case of a fixed or averaged electron current, this is the scalar current.
                         It can also be an 1D array of output current (without time stamps).
                    
DEBUG - documentation (NXactuator.nxdl.xml:/OUTPUT):
DEBUG - 
             Any output that the actuator produces.
             For example, a heater can have the field heater_power(NX_FLOAT).
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/flood_gun/current@units)
DEBUG - value: A 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/current
NXactuator.nxdl.xml:/OUTPUT
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/current@units [NX_CURRENT]
DEBUG - NXactuator.nxdl.xml:/OUTPUT@units [NX_ANY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/flood_gun/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'FG 22/35' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/name
NXactuator.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/name):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/flood_gun/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: b'current' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/physical_quantity
NXactuator.nxdl.xml:/physical_quantity
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/physical_quantity):
DEBUG - -> current
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/physical_quantity):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/physical_quantity):
DEBUG - 
             Name for the physical quantity effected by the actuation
             
             Examples:
             temperature | pH | magnetic_field | electric_field | current | conductivity | resistance | voltage |
             pressure | flow | stress | strain | shear | surface_pressure
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/flood_gun/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'low energy electron source' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/type
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/flood_gun/type):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/manipulator [NXxps::/NXentry/NXinstrument/NXmanipulator]): <HDF5 group "/1_as_loaded__Survey/instrument/manipulator" (6 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR
NXmanipulator.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR):
DEBUG - 
                     Manipulator for positioning of the sample.
                
DEBUG - documentation (NXmanipulator.nxdl.xml:):
DEBUG - 
         Extension of NXpositioner to include fields to describe the use of manipulators
         in photoemission experiments.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator@NX_class)
DEBUG - value: NXmanipulator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR
NXmanipulator.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/manipulator/device_information [NXxps::/NXentry/NXinstrument/NXmanipulator/NXfabrication]): <HDF5 group "/1_as_loaded__Survey/instrument/manipulator/device_information" (2 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information
NXmanipulator.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/FABRICATION):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:):
DEBUG - 
         Details about a component as it is defined by its manufacturer.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/device_information@NX_class)
DEBUG - value: NXfabrication 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information
NXmanipulator.nxdl.xml:/FABRICATION
NXfabrication.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/device_information/model): <HDF5 dataset "model": shape (), type "|O">
DEBUG - value: b'5-axis manipulator' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/model
NXfabrication.nxdl.xml:/model
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/model):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/model):
DEBUG - 
             Version or model of the component named by the manufacturer.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/device_information/vendor): <HDF5 dataset "vendor": shape (), type "|O">
DEBUG - value: b'SPECS GmbH' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXfabrication', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/vendor
NXfabrication.nxdl.xml:/vendor
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/device_information/vendor):
DEBUG - 
DEBUG - documentation (NXfabrication.nxdl.xml:/vendor):
DEBUG - 
             Company name of the manufacturer.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/manipulator/drain_current_amperemeter [NXxps::/NXentry/NXinstrument/NXmanipulator/NXsensor]): <HDF5 group "/1_as_loaded__Survey/instrument/manipulator/drain_current_amperemeter" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter
NXmanipulator.nxdl.xml:/drain_current_amperemeter
NXsensor.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/drain_current_amperemeter):
DEBUG - 
             Amperemeter measuring the drain current of the sample and sample holder.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
         A sensor used to monitor an external condition
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/drain_current_amperemeter@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter
NXmanipulator.nxdl.xml:/drain_current_amperemeter
NXsensor.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/drain_current_amperemeter/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: b'current' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter/measurement
NXmanipulator.nxdl.xml:/drain_current_amperemeter/measurement
NXsensor.nxdl.xml:/measurement
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter/measurement):
DEBUG - -> current
DEBUG - enumeration (NXmanipulator.nxdl.xml:/drain_current_amperemeter/measurement):
DEBUG - -> current
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter/measurement):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/drain_current_amperemeter/measurement):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - 
             name for measured signal
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/drain_current_amperemeter/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'Amperemeter 1.0' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter/name
NXsensor.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter/name):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - 
             Name for the sensor
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/drain_current_amperemeter/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'wire' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter/type
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter/type):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the measurement.
             Examples (suggestions but not restrictions):
             
             :Temperature:
               J | K | T | E | R | S | Pt100 | Rh/Fe
             :pH:
               Hg/Hg2Cl2 | Ag/AgCl | ISFET
             :Ion selective electrode:
               specify species; e.g. Ca2+
             :Magnetic field:
               Hall
             :Surface pressure:
               wilhelmy plate
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/drain_current_amperemeter/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter/value
NXmanipulator.nxdl.xml:/drain_current_amperemeter/value
NXsensor.nxdl.xml:/value
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter/value):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/drain_current_amperemeter/value):
DEBUG - 
                 In case of a single or averaged drain current measurement, this is the scalar drain current measured between
                 the sample and sample holder. It can also be an 1D array of measured currents (without time stamps).
            
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
             nominal setpoint or average value
             - need [n] as may be a vector
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/drain_current_amperemeter/value@units)
DEBUG - value: A 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter/value
NXmanipulator.nxdl.xml:/drain_current_amperemeter/value
NXsensor.nxdl.xml:/value
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/drain_current_amperemeter/value@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/drain_current_amperemeter/value@units [NX_CURRENT]
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/manipulator/sample_bias_potentiostat [NXxps::/NXentry/NXinstrument/NXmanipulator/NXactuator]): <HDF5 group "/1_as_loaded__Survey/instrument/manipulator/sample_bias_potentiostat" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat
NXmanipulator.nxdl.xml:/sample_bias_potentiostat
NXactuator.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_potentiostat):
DEBUG - 
             Actuator applying a voltage to sample and sample holder.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/sample_bias_potentiostat@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat
NXmanipulator.nxdl.xml:/sample_bias_potentiostat
NXactuator.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_bias_potentiostat/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'XPS sample potentiostat' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/name
NXactuator.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/name):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_bias_potentiostat/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: b'voltage' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/physical_quantity
NXmanipulator.nxdl.xml:/sample_bias_potentiostat/physical_quantity
NXactuator.nxdl.xml:/physical_quantity
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/physical_quantity):
DEBUG - -> voltage
DEBUG - enumeration (NXmanipulator.nxdl.xml:/sample_bias_potentiostat/physical_quantity):
DEBUG - -> voltage
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/physical_quantity):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_potentiostat/physical_quantity):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/physical_quantity):
DEBUG - 
             Name for the physical quantity effected by the actuation
             
             Examples:
             temperature | pH | magnetic_field | electric_field | current | conductivity | resistance | voltage |
             pressure | flow | stress | strain | shear | surface_pressure
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/manipulator/sample_bias_potentiostat/pid [NXxps::/NXentry/NXinstrument/NXmanipulator/NXactuator/NXpid]): <HDF5 group "/1_as_loaded__Survey/instrument/manipulator/sample_bias_potentiostat/pid" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NXpid']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/PID
NXmanipulator.nxdl.xml:/sample_bias_potentiostat/PID
NXactuator.nxdl.xml:/PID
NXpid.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/PID):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_potentiostat/PID):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/PID):
DEBUG - 
             If the actuator is PID-controlled, the settings of the PID controller can be
             stored here.
        
DEBUG - documentation (NXpid.nxdl.xml:):
DEBUG - 
         Contains the settings of a PID controller.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/sample_bias_potentiostat/pid@NX_class)
DEBUG - value: NXpid 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NXpid']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/PID
NXmanipulator.nxdl.xml:/sample_bias_potentiostat/PID
NXactuator.nxdl.xml:/PID
NXpid.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_bias_potentiostat/pid/setpoint): <HDF5 dataset "setpoint": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NXpid', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/PID/setpoint
NXmanipulator.nxdl.xml:/sample_bias_potentiostat/PID/setpoint
NXactuator.nxdl.xml:/PID/setpoint
NXpid.nxdl.xml:/setpoint
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/PID/setpoint):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_potentiostat/PID/setpoint):
DEBUG - 
                     In case of a fixed or averaged applied bias, this is the scalar voltage applied between
                     sample and sample holder. It can also be an 1D array of voltage setpoints (without time stamps).
                
DEBUG - documentation (NXactuator.nxdl.xml:/PID/setpoint):
DEBUG - 
                 Nominal actuator setpoint.
                 Can be a scalar or a vector (of [n] actuations).
            
DEBUG - documentation (NXpid.nxdl.xml:/setpoint):
DEBUG - 
             The Setpoint(s) used as an input for the PID controller.
             
             It can also be a link to an NXsensor.value field.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/sample_bias_potentiostat/pid/setpoint@units)
DEBUG - value: V 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NXpid', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/PID/setpoint
NXmanipulator.nxdl.xml:/sample_bias_potentiostat/PID/setpoint
NXactuator.nxdl.xml:/PID/setpoint
NXpid.nxdl.xml:/setpoint
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/PID/setpoint@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/sample_bias_potentiostat/PID/setpoint@units [NX_VOLTAGE]
DEBUG - NXactuator.nxdl.xml:/PID/setpoint@units [NX_ANY]
DEBUG - NXpid.nxdl.xml:/setpoint@units [NX_ANY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_bias_potentiostat/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'potentiostat' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/type
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_potentiostat/type):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/manipulator/sample_bias_voltmeter [NXxps::/NXentry/NXinstrument/NXmanipulator/NXsensor]): <HDF5 group "/1_as_loaded__Survey/instrument/manipulator/sample_bias_voltmeter" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter
NXmanipulator.nxdl.xml:/sample_bias_voltmeter
NXsensor.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_voltmeter):
DEBUG - 
             Sensor measuring the voltage applied to sample and sample holder.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
         A sensor used to monitor an external condition
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/sample_bias_voltmeter@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter
NXmanipulator.nxdl.xml:/sample_bias_voltmeter
NXsensor.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_bias_voltmeter/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: b'voltage' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/measurement
NXmanipulator.nxdl.xml:/sample_bias_voltmeter/measurement
NXsensor.nxdl.xml:/measurement
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/measurement):
DEBUG - -> voltage
DEBUG - enumeration (NXmanipulator.nxdl.xml:/sample_bias_voltmeter/measurement):
DEBUG - -> voltage
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/measurement):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_voltmeter/measurement):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - 
             name for measured signal
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_bias_voltmeter/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'XPS sample voltmeter' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/name
NXsensor.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/name):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - 
             Name for the sensor
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_bias_voltmeter/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'oscilloscope' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/type
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/type):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the measurement.
             Examples (suggestions but not restrictions):
             
             :Temperature:
               J | K | T | E | R | S | Pt100 | Rh/Fe
             :pH:
               Hg/Hg2Cl2 | Ag/AgCl | ISFET
             :Ion selective electrode:
               specify species; e.g. Ca2+
             :Magnetic field:
               Hall
             :Surface pressure:
               wilhelmy plate
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_bias_voltmeter/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/value
NXmanipulator.nxdl.xml:/sample_bias_voltmeter/value
NXsensor.nxdl.xml:/value
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/value):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_bias_voltmeter/value):
DEBUG - 
                 In case of a single or averaged bias measurement, this is the scalar voltage measured between
                 sample and sample holder. It can also be an 1D array of measured voltages (without time stamps).
            
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
             nominal setpoint or average value
             - need [n] as may be a vector
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/sample_bias_voltmeter/value@units)
DEBUG - value: V 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/value
NXmanipulator.nxdl.xml:/sample_bias_voltmeter/value
NXsensor.nxdl.xml:/value
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_bias_voltmeter/value@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/sample_bias_voltmeter/value@units [NX_VOLTAGE]
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/manipulator/sample_heater [NXxps::/NXentry/NXinstrument/NXmanipulator/NXactuator]): <HDF5 group "/1_as_loaded__Survey/instrument/manipulator/sample_heater" (5 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater
NXmanipulator.nxdl.xml:/sample_heater
NXactuator.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_heater):
DEBUG - 
             Device to heat the sample.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/sample_heater@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater
NXmanipulator.nxdl.xml:/sample_heater
NXactuator.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_heater/heater_power): <HDF5 dataset "heater_power": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/heater_power
NXmanipulator.nxdl.xml:/sample_heater/heater_power
NXactuator.nxdl.xml:/OUTPUT
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/heater_power):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_heater/heater_power):
DEBUG - 
                 In case of a fixed or averaged heating power, this is the scalar heater power.
                 It can also be a 1D array of heater powers (without time stamps).
            
DEBUG - documentation (NXactuator.nxdl.xml:/OUTPUT):
DEBUG - 
             Any output that the actuator produces.
             For example, a heater can have the field heater_power(NX_FLOAT).
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/sample_heater/heater_power@units)
DEBUG - value: W 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/heater_power
NXmanipulator.nxdl.xml:/sample_heater/heater_power
NXactuator.nxdl.xml:/OUTPUT
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/heater_power@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/sample_heater/heater_power@units [NX_POWER]
DEBUG - NXactuator.nxdl.xml:/OUTPUT@units [NX_ANY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_heater/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'Coherent Compact Evolution IR Diode LASER (DILAS)' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/name
NXactuator.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/name):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_heater/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: b'temperature' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/physical_quantity
NXmanipulator.nxdl.xml:/sample_heater/physical_quantity
NXactuator.nxdl.xml:/physical_quantity
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/physical_quantity):
DEBUG - -> temperature
DEBUG - enumeration (NXmanipulator.nxdl.xml:/sample_heater/physical_quantity):
DEBUG - -> temperature
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/physical_quantity):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_heater/physical_quantity):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/physical_quantity):
DEBUG - 
             Name for the physical quantity effected by the actuation
             
             Examples:
             temperature | pH | magnetic_field | electric_field | current | conductivity | resistance | voltage |
             pressure | flow | stress | strain | shear | surface_pressure
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/manipulator/sample_heater/pid [NXxps::/NXentry/NXinstrument/NXmanipulator/NXactuator/NXpid]): <HDF5 group "/1_as_loaded__Survey/instrument/manipulator/sample_heater/pid" (1 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NXpid']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/PID
NXmanipulator.nxdl.xml:/sample_heater/PID
NXactuator.nxdl.xml:/PID
NXpid.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/PID):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_heater/PID):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/PID):
DEBUG - 
             If the actuator is PID-controlled, the settings of the PID controller can be
             stored here.
        
DEBUG - documentation (NXpid.nxdl.xml:):
DEBUG - 
         Contains the settings of a PID controller.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/sample_heater/pid@NX_class)
DEBUG - value: NXpid 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NXpid']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/PID
NXmanipulator.nxdl.xml:/sample_heater/PID
NXactuator.nxdl.xml:/PID
NXpid.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_heater/pid/setpoint): <HDF5 dataset "setpoint": shape (), type "<f8">
DEBUG - value: 298.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NXpid', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/PID/setpoint
NXmanipulator.nxdl.xml:/sample_heater/PID/setpoint
NXactuator.nxdl.xml:/PID/setpoint
NXpid.nxdl.xml:/setpoint
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/PID/setpoint):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/sample_heater/PID/setpoint):
DEBUG - 
                     In case of a fixed or averaged temperature, this is the scalar temperature setpoint.
                     It can also be a 1D array of temperature setpoints (without time stamps).
                
DEBUG - documentation (NXactuator.nxdl.xml:/PID/setpoint):
DEBUG - 
                 Nominal actuator setpoint.
                 Can be a scalar or a vector (of [n] actuations).
            
DEBUG - documentation (NXpid.nxdl.xml:/setpoint):
DEBUG - 
             The Setpoint(s) used as an input for the PID controller.
             
             It can also be a link to an NXsensor.value field.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/sample_heater/pid/setpoint@units)
DEBUG - value: K 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NXpid', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/PID/setpoint
NXmanipulator.nxdl.xml:/sample_heater/PID/setpoint
NXactuator.nxdl.xml:/PID/setpoint
NXpid.nxdl.xml:/setpoint
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/PID/setpoint@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/sample_heater/PID/setpoint@units [NX_TEMPERATURE]
DEBUG - NXactuator.nxdl.xml:/PID/setpoint@units [NX_ANY]
DEBUG - NXpid.nxdl.xml:/setpoint@units [NX_ANY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/sample_heater/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'IR diode laser' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/type
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/sample_heater/type):
DEBUG - 
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/manipulator/temperature_sensor [NXxps::/NXentry/NXinstrument/NXmanipulator/NXsensor]): <HDF5 group "/1_as_loaded__Survey/instrument/manipulator/temperature_sensor" (5 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor
NXmanipulator.nxdl.xml:/temperature_sensor
NXsensor.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/temperature_sensor):
DEBUG - 
             Temperature sensor measuring the sample temperature.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
         A sensor used to monitor an external condition
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/temperature_sensor@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor
NXmanipulator.nxdl.xml:/temperature_sensor
NXsensor.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/temperature_sensor/attached_to): <HDF5 dataset "attached_to": shape (), type "|O">
DEBUG - value: b'sample' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/attached_to
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/attached_to):
DEBUG - 
             where sensor is attached to ("sample" | "can")
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/temperature_sensor/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: b'temperature' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/measurement
NXmanipulator.nxdl.xml:/temperature_sensor/measurement
NXsensor.nxdl.xml:/measurement
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/measurement):
DEBUG - -> temperature
DEBUG - enumeration (NXmanipulator.nxdl.xml:/temperature_sensor/measurement):
DEBUG - -> temperature
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/measurement):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/temperature_sensor/measurement):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - 
             name for measured signal
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/temperature_sensor/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'type K thermocouple' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/name
NXsensor.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/name):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - 
             Name for the sensor
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/temperature_sensor/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'type K thermocouple' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/type
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/type):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the measurement.
             Examples (suggestions but not restrictions):
             
             :Temperature:
               J | K | T | E | R | S | Pt100 | Rh/Fe
             :pH:
               Hg/Hg2Cl2 | Ag/AgCl | ISFET
             :Ion selective electrode:
               specify species; e.g. Ca2+
             :Magnetic field:
               Hall
             :Surface pressure:
               wilhelmy plate
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/manipulator/temperature_sensor/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 298.0 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/value
NXmanipulator.nxdl.xml:/temperature_sensor/value
NXsensor.nxdl.xml:/value
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/value):
DEBUG - 
DEBUG - documentation (NXmanipulator.nxdl.xml:/temperature_sensor/value):
DEBUG - 
                 In case of a single or averaged temperature measurement, this is the scalar temperature measured
                 by the sample temperature sensor. It can also be a 1D array of measured temperatures
                 (without time stamps).
            
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
             nominal setpoint or average value
             - need [n] as may be a vector
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/manipulator/temperature_sensor/value@units)
DEBUG - value: K 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXmanipulator', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/value
NXmanipulator.nxdl.xml:/temperature_sensor/value
NXsensor.nxdl.xml:/value
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/MANIPULATOR/temperature_sensor/value@units - REQUIRED, but undefined unit category
DEBUG - NXmanipulator.nxdl.xml:/temperature_sensor/value@units [NX_TEMPERATURE]
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/pressure_gauge [NXxps::/NXentry/NXinstrument/NXsensor]): <HDF5 group "/1_as_loaded__Survey/instrument/pressure_gauge" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge
NXinstrument.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge):
DEBUG - 
                     Device to measure the gas pressure around the sample.
                
DEBUG - documentation (NXinstrument.nxdl.xml:/SENSOR):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
         A sensor used to monitor an external condition
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/pressure_gauge@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge
NXinstrument.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/pressure_gauge/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: b'pressure' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/measurement
NXsensor.nxdl.xml:/measurement
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/measurement):
DEBUG - -> pressure
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/measurement):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - 
             name for measured signal
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/pressure_gauge/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'Atmion' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/name
NXsensor.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/name):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - 
             Name for the sensor
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/pressure_gauge/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'hot-filament ionization gauge' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/type
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/type):
DEBUG - 
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the measurement.
             Examples (suggestions but not restrictions):
             
             :Temperature:
               J | K | T | E | R | S | Pt100 | Rh/Fe
             :pH:
               Hg/Hg2Cl2 | Ag/AgCl | ISFET
             :Ion selective electrode:
               specify species; e.g. Ca2+
             :Magnetic field:
               Hall
             :Surface pressure:
               wilhelmy plate
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/pressure_gauge/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 1e-09 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/value
NXsensor.nxdl.xml:/value
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/value):
DEBUG - 
                         In case of a single or averaged gas pressure measurement, this is the scalar gas pressure around
                         the sample. It can also be an 1D array of measured pressures (without time stamps).
                    
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
             nominal setpoint or average value
             - need [n] as may be a vector
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/pressure_gauge/value@units)
DEBUG - value: mbar 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/value
NXsensor.nxdl.xml:/value
DEBUG - NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/pressure_gauge/value@units [NX_PRESSURE]
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//1_as_loaded__Survey/instrument/source_xray [NXxps::/NXentry/NXinstrument/NXsource]): <HDF5 group "/1_as_loaded__Survey/instrument/source_xray" (4 members)>
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE
NXinstrument.nxdl.xml:/SOURCE
NXsource.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE):
DEBUG - 
                     A source used to generate a beam. Properties refer strictly to parameters of the
                     source, not of the output beam. For example, the energy of the source is not the
                     optical power of the beam, but the energy of the electron beam in a synchrotron
                     or similar.
                     
                     Note that the uppercase notation in sourceTYPE means that multiple sources can
                     be provided. The uppercase part can be substituted with any string that consists
                     of alphanumeric characters, including both uppercase and lowercase letters from A to Z
                     and numerical digits from 0 to 9. For example, in pump-probe experiments, it is possible
                     to have both a `source_probe` and a `source_pump`.
                
DEBUG - documentation (NXinstrument.nxdl.xml:/SOURCE):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:):
DEBUG - 
         Radiation source emitting a beam.
         
         Examples include particle sources (electrons, neutrons, protons) or sources for electromagnetic radiation (photons).
         This base class can also be used to describe neutron or x-ray storage ring/facilities.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/instrument/source_xray@NX_class)
DEBUG - value: NXsource 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE
NXinstrument.nxdl.xml:/SOURCE
NXsource.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/source_xray/associated_beam): <HDF5 dataset "associated_beam": shape (), type "|O">
DEBUG - value: b'/1_as_loaded__Survey/instrument/beam_xray' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE/associated_beam
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE/associated_beam):
DEBUG - 
                         A reference to a beam emitted by this source.
                         Should be named with the same appendix, e.g.,
                         for `source_probe` it should refer to `beam_probe`.
                         
                         Example:
                           * /entry/instrument/source_probe = /entry/instrument/beam_probe
                    
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/source_xray/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'Al' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE/name
NXsource.nxdl.xml:/name
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE/name):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:/name):
DEBUG - 
             Name of source
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/source_xray/probe): <HDF5 dataset "probe": shape (), type "|O">
DEBUG - value: b'x-ray' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE/probe
NXsource.nxdl.xml:/probe
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsource.nxdl.xml:/probe):
DEBUG - -> neutron
DEBUG - -> photon
DEBUG - -> x-ray
DEBUG - -> muon
DEBUG - -> electron
DEBUG - -> ultraviolet
DEBUG - -> visible light
DEBUG - -> positron
DEBUG - -> proton
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE/probe):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:/probe):
DEBUG - 
             type of radiation probe (pick one from the enumerated list and spell exactly)
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/instrument/source_xray/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'Synchrotron X-ray Source' 
DEBUG - classpath: ['NXentry', 'NXinstrument', 'NXsource', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE/type
NXsource.nxdl.xml:/type
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE/type):
DEBUG - -> Synchrotron X-ray Source
DEBUG - -> Rotating Anode X-ray
DEBUG - -> Fixed Tube X-ray
DEBUG - -> UV Laser
DEBUG - -> Free-Electron Laser
DEBUG - -> Optical Laser
DEBUG - -> UV Plasma Source
DEBUG - -> Metal Jet X-ray
DEBUG - -> HHG laser
DEBUG - -> UV lamp
DEBUG - -> Monochromatized electron source
DEBUG - -> other
DEBUG - enumeration (NXsource.nxdl.xml:/type):
DEBUG - -> Spallation Neutron Source
DEBUG - -> Pulsed Reactor Neutron Source
DEBUG - -> Reactor Neutron Source
DEBUG - -> Synchrotron X-ray Source
DEBUG - -> Pulsed Muon Source
DEBUG - -> Rotating Anode X-ray
DEBUG - -> Fixed Tube X-ray
DEBUG - -> UV Laser
DEBUG - -> Free-Electron Laser
DEBUG - -> Optical Laser
DEBUG - -> Ion Source
DEBUG - -> UV Plasma Source
DEBUG - -> Metal Jet X-ray
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/INSTRUMENT/sourceTYPE/type):
DEBUG - 
DEBUG - documentation (NXsource.nxdl.xml:/type):
DEBUG - 
             type of radiation source (pick one from the enumerated list and spell exactly)
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/method): <HDF5 dataset "method": shape (), type "|O">
DEBUG - value: b'X-ray photoelectron spectroscopy (XPS)' 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/method
NXmpes.nxdl.xml:/ENTRY/method
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/method):
DEBUG - 
                 A name of the experimental method according to `Clause 11`_ of
                 the `ISO 18115-1:2023`_ specification.
                 
                 Examples for XPS-related experiments include:
                     * X-ray photoelectron spectroscopy (XPS)
                     * angle-resolved X-ray photoelectron spectroscopy (ARXPS)
                     * ultraviolet photoelectron spectroscopy (UPS)
                     * hard X-ray photoemission spectroscopy (HAXPES)
                     * near ambient pressure X-ray photoelectron spectroscopy (NAPXPS)
                     * electron spectroscopy for chemical analysis (ESCA)
                 
                 .. _ISO 18115-1:2023: https://www.iso.org/standard/74811.html
                 .. _Clause 11: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:sec:11
            
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/method):
DEBUG - 
                 Name of the experimental method.
                 
                 If applicable, this name should match the terms given by `Clause 11`_ of
                 the `ISO 18115-1:2023`_ specification.
                 
                 Examples include:
                     * X-ray photoelectron spectroscopy (XPS)
                     * angle-resolved X-ray photoelectron spectroscopy (ARXPS)
                     * ultraviolet photoelectron spectroscopy (UPS)
                     * angle-resolved photoelectron spectroscopy (ARPES)
                     * hard X-ray photoemission spectroscopy (HAXPES)
                     * near ambient pressure X-ray photoelectron spectroscopy (NAPXPS)
                     * photoelectron emission microscopy (PEEM)
                     * electron spectroscopy for chemical analysis (ESCA)
                     * time-resolved angle-resolved X-ray photoelectron spectroscopy (trARPES)
                     * spin-resolved angle-resolved X-ray photoelectron spectroscopy (spin-ARPES)
                     * momentum microscopy
                 
                 .. _ISO 18115-1:2023: https://www.iso.org/standard/74811.html
                 .. _Clause 11: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:sec:11
            
DEBUG - ===== GROUP (//1_as_loaded__Survey/process [NXxps::/NXentry/NXprocess_mpes]): <HDF5 group "/1_as_loaded__Survey/process" (1 members)>
DEBUG - classpath: ['NXentry', 'NXprocess_mpes']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/PROCESS_MPES
NXmpes.nxdl.xml:/ENTRY/PROCESS_MPES
NXprocess_mpes.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/PROCESS_MPES):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/PROCESS_MPES):
DEBUG - 
                 Document an event of data processing, reconstruction, or analysis for this data.
                 The appropriate axis calibrations for a given experiment should be described using
                 one or more of the following NXcalibrations. The individual calibrations for a given
                 `AXISNAME` in `data` should be called `AXISNAME_calibration`.
            
DEBUG - documentation (NXprocess_mpes.nxdl.xml:):
DEBUG - 
         :ref:`NXprocess_mpes` describes events of data processing, reconstruction,
         or analysis for photoemission-related data.
          
         It extends the NXprocess class and provides a glossary of explicitly named processes
         and their metadata which are typical for photoemission data.
         
         For now, the extension of NXprocess is performed by simply copying all existing groups, fields,
         and attibute from NXprocess. In the future, it is envisioned that this extension can be solved by
         base class inheritance.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/process@NX_class)
DEBUG - value: NXprocess_mpes 
DEBUG - classpath: ['NXentry', 'NXprocess_mpes']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/PROCESS_MPES
NXmpes.nxdl.xml:/ENTRY/PROCESS_MPES
NXprocess_mpes.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//1_as_loaded__Survey/process/energy_calibration [NXxps::/NXentry/NXprocess_mpes/NXcalibration]): <HDF5 group "/1_as_loaded__Survey/process/energy_calibration" (1 members)>
DEBUG - classpath: ['NXentry', 'NXprocess_mpes', 'NXcalibration']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/PROCESS_MPES/energy_calibration
NXprocess_mpes.nxdl.xml:/energy_calibration
NXcalibration.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/PROCESS_MPES/energy_calibration):
DEBUG - 
DEBUG - documentation (NXprocess_mpes.nxdl.xml:/energy_calibration):
DEBUG - 
             Calibration event on the energy axis.
             
             For XPS, the calibration should ideally be performed according to
             `ISO 15472:2010`_ specification.
             
             .. _ISO 15472:2010: https://www.iso.org/standard/74811.html
        
DEBUG - documentation (NXcalibration.nxdl.xml:):
DEBUG - 
         Subclass of NXprocess to describe post-processing calibrations.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/process/energy_calibration@NX_class)
DEBUG - value: NXcalibration 
DEBUG - classpath: ['NXentry', 'NXprocess_mpes', 'NXcalibration']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/PROCESS_MPES/energy_calibration
NXprocess_mpes.nxdl.xml:/energy_calibration
NXcalibration.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/process/energy_calibration/calibrated_axis): <HDF5 dataset "calibrated_axis": shape (1351,), type "<f8">
DEBUG - value: [ 136.61  137.61  138.61 ... 1484.61 1485.61 1486.61] 
DEBUG - classpath: ['NXentry', 'NXprocess_mpes', 'NXcalibration', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/PROCESS_MPES/energy_calibration/calibrated_axis
NXprocess_mpes.nxdl.xml:/energy_calibration/calibrated_axis
NXcalibration.nxdl.xml:/calibrated_axis
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/PROCESS_MPES/energy_calibration/calibrated_axis):
DEBUG - 
DEBUG - documentation (NXprocess_mpes.nxdl.xml:/energy_calibration/calibrated_axis):
DEBUG - 
                 This is the calibrated energy axis to be used for data plotting.
            
DEBUG - documentation (NXcalibration.nxdl.xml:/calibrated_axis):
DEBUG - 
             A vector representing the axis after calibration, matching the data length
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/process/energy_calibration/calibrated_axis@long_name)
DEBUG - value: energy 
DEBUG - classpath: ['NXentry', 'NXprocess_mpes', 'NXcalibration', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/PROCESS_MPES/energy_calibration/calibrated_axis
NXprocess_mpes.nxdl.xml:/energy_calibration/calibrated_axis
NXcalibration.nxdl.xml:/calibrated_axis
DEBUG - @long_name - IS NOT IN SCHEMA
DEBUG - 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/process/energy_calibration/calibrated_axis@units)
DEBUG - value: eV 
DEBUG - classpath: ['NXentry', 'NXprocess_mpes', 'NXcalibration', 'NX_FLOAT']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/PROCESS_MPES/energy_calibration/calibrated_axis
NXprocess_mpes.nxdl.xml:/energy_calibration/calibrated_axis
NXcalibration.nxdl.xml:/calibrated_axis
DEBUG - NXmpes.nxdl.xml:/ENTRY/PROCESS_MPES/energy_calibration/calibrated_axis@units - REQUIRED, but undefined unit category
DEBUG - NXprocess_mpes.nxdl.xml:/energy_calibration/calibrated_axis@units [NX_ENERGY]
DEBUG - NXcalibration.nxdl.xml:/calibrated_axis@units [NX_ANY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/program_name): <HDF5 dataset "program_name": shape (), type "|O">
DEBUG - value: b'SpecsLab 2' 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXentry.nxdl.xml:/program_name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXentry.nxdl.xml:/program_name):
DEBUG - 
             Name of program used to generate this file
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample [NXxps::/NXentry/NXsample]): <HDF5 group "/1_as_loaded__Survey/sample" (11 members)>
DEBUG - classpath: ['NXentry', 'NXsample']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE
NXmpes.nxdl.xml:/ENTRY/SAMPLE
NXentry.nxdl.xml:/SAMPLE
NXsample.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE):
DEBUG - 
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE):
DEBUG - 
DEBUG - documentation (NXentry.nxdl.xml:/SAMPLE):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:):
DEBUG - 
         Any information on the sample.
         
         This could include scanned variables that
         are associated with one of the data dimensions, e.g. the magnetic field, or
         logged data, e.g. monitored temperature vs elapsed time.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample@NX_class)
DEBUG - value: NXsample 
DEBUG - classpath: ['NXentry', 'NXsample']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE
NXmpes.nxdl.xml:/ENTRY/SAMPLE
NXentry.nxdl.xml:/SAMPLE
NXsample.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/bias [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/1_as_loaded__Survey/sample/bias" (2 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias):
DEBUG - 
                     Bias of the sample with respect to analyser ground.
                     
                     This concept is related to term `8.41`_ of the ISO 18115-1:2023 standard.
                     
                     .. _8.41: https://www.iso.org/obp/ui/en/#iso:std:iso:18115:-1:ed-3:v1:en:term:8.41
                
DEBUG - documentation (NXsample.nxdl.xml:/ENVIRONMENT):
DEBUG - 
             Any environmental or external stimuli/measurements.
             These can include, among others:
             applied pressure, surrounding gas phase and gas pressure,
             external electric/magnetic/mechanical fields, temperature, ...
        
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - 
         Parameters for controlling external conditions
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/bias@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/bias/potentiostat [NXxps::/NXentry/NXsample/NXenvironment/NXactuator]): <HDF5 group "/1_as_loaded__Survey/sample/bias/potentiostat" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias/potentiostat
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias/potentiostat):
DEBUG - 
                         Actuator applying a voltage to sample and sample holder.
                         
                         This should be a link to /entry/instrument/manipulator/sample_bias_potentiostat.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/ACTUATOR):
DEBUG - 
             Any actuator used to control the environment. This can be linked to an actuator
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/bias/potentiostat@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias/potentiostat
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/bias/potentiostat/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'XPS sample potentiostat' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/bias/potentiostat/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: b'voltage' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/physical_quantity
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/physical_quantity):
DEBUG - 
             Name for the physical quantity effected by the actuation
             
             Examples:
             temperature | pH | magnetic_field | electric_field | current | conductivity | resistance | voltage |
             pressure | flow | stress | strain | shear | surface_pressure
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/bias/potentiostat/pid [NXxps::/NXentry/NXsample/NXenvironment/NXactuator/NXpid]): <HDF5 group "/1_as_loaded__Survey/sample/bias/potentiostat/pid" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NXpid']
DEBUG - classes:
NXactuator.nxdl.xml:/PID
NXpid.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/PID):
DEBUG - 
             If the actuator is PID-controlled, the settings of the PID controller can be
             stored here.
        
DEBUG - documentation (NXpid.nxdl.xml:):
DEBUG - 
         Contains the settings of a PID controller.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/bias/potentiostat/pid@NX_class)
DEBUG - value: NXpid 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NXpid']
DEBUG - classes:
NXactuator.nxdl.xml:/PID
NXpid.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/bias/potentiostat/pid/setpoint): <HDF5 dataset "setpoint": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NXpid', 'NX_FLOAT']
DEBUG - classes:
NXactuator.nxdl.xml:/PID/setpoint
NXpid.nxdl.xml:/setpoint
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/PID/setpoint):
DEBUG - 
                 Nominal actuator setpoint.
                 Can be a scalar or a vector (of [n] actuations).
            
DEBUG - documentation (NXpid.nxdl.xml:/setpoint):
DEBUG - 
             The Setpoint(s) used as an input for the PID controller.
             
             It can also be a link to an NXsensor.value field.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/bias/potentiostat/pid/setpoint@units)
DEBUG - value: V 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NXpid', 'NX_FLOAT']
DEBUG - classes:
NXactuator.nxdl.xml:/PID/setpoint
NXpid.nxdl.xml:/setpoint
DEBUG - NXactuator.nxdl.xml:/PID/setpoint@units [NX_ANY]
DEBUG - NXpid.nxdl.xml:/setpoint@units [NX_ANY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/bias/potentiostat/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'potentiostat' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/bias/voltmeter [NXxps::/NXentry/NXsample/NXenvironment/NXsensor]): <HDF5 group "/1_as_loaded__Survey/sample/bias/voltmeter" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias/voltmeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias/voltmeter):
DEBUG - 
                         Sensor measuring the applied voltage.
                         
                         This should be a link to /entry/instrument/manipulator/sample_bias_voltmeter.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/SENSOR):
DEBUG - 
             Any sensor used to monitor the environment. This can be linked to a sensor
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
         A sensor used to monitor an external condition
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/bias/voltmeter@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/bias/voltmeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/bias/voltmeter/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: b'voltage' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/measurement
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - 
             name for measured signal
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/bias/voltmeter/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'XPS sample voltmeter' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - 
             Name for the sensor
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/bias/voltmeter/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'oscilloscope' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the measurement.
             Examples (suggestions but not restrictions):
             
             :Temperature:
               J | K | T | E | R | S | Pt100 | Rh/Fe
             :pH:
               Hg/Hg2Cl2 | Ag/AgCl | ISFET
             :Ion selective electrode:
               specify species; e.g. Ca2+
             :Magnetic field:
               Hall
             :Surface pressure:
               wilhelmy plate
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/bias/voltmeter/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
             nominal setpoint or average value
             - need [n] as may be a vector
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/bias/voltmeter/value@units)
DEBUG - value: V 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/depends_on): <HDF5 dataset "depends_on": shape (), type "|O">
DEBUG - value: b'/1_as_loaded__Survey/sample/transformations/sample_rotation_angle' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/depends_on
NXsample.nxdl.xml:/depends_on
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/depends_on):
DEBUG - 
                     Reference to the transformation describing the orientation of the sample
                     relative to a defined coordinate system.
                
DEBUG - documentation (NXsample.nxdl.xml:/depends_on):
DEBUG - 
             NeXus positions components by applying a set of translations and rotations
             to apply to the component starting from 0, 0, 0. The order of these operations
             is critical and forms what NeXus calls a dependency chain. The depends_on
             field defines the path to the top most operation of the dependency chain or the
             string "." if located in the origin. Usually these operations are stored in a
             NXtransformations group. But NeXus allows them to be stored anywhere.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/drain_current [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/1_as_loaded__Survey/sample/drain_current" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current):
DEBUG - 
                     Drain current of the sample and sample holder.
                
DEBUG - documentation (NXsample.nxdl.xml:/ENVIRONMENT):
DEBUG - 
             Any environmental or external stimuli/measurements.
             These can include, among others:
             applied pressure, surrounding gas phase and gas pressure,
             external electric/magnetic/mechanical fields, temperature, ...
        
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - 
         Parameters for controlling external conditions
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/drain_current@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/drain_current/amperemeter [NXxps::/NXentry/NXsample/NXenvironment/NXsensor]): <HDF5 group "/1_as_loaded__Survey/sample/drain_current/amperemeter" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current/amperemeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current/amperemeter):
DEBUG - 
                         Amperemeter measuring the drain current of the sample and sample holder.
                         
                         This should be a link to /entry/instrument/manipulator/drain_current_amperemeter.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/SENSOR):
DEBUG - 
             Any sensor used to monitor the environment. This can be linked to a sensor
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
         A sensor used to monitor an external condition
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/drain_current/amperemeter@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/drain_current/amperemeter
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/drain_current/amperemeter/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: b'current' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/measurement
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - 
             name for measured signal
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/drain_current/amperemeter/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'Amperemeter 1.0' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - 
             Name for the sensor
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/drain_current/amperemeter/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'wire' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the measurement.
             Examples (suggestions but not restrictions):
             
             :Temperature:
               J | K | T | E | R | S | Pt100 | Rh/Fe
             :pH:
               Hg/Hg2Cl2 | Ag/AgCl | ISFET
             :Ion selective electrode:
               specify species; e.g. Ca2+
             :Magnetic field:
               Hall
             :Surface pressure:
               wilhelmy plate
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/drain_current/amperemeter/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
             nominal setpoint or average value
             - need [n] as may be a vector
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/drain_current/amperemeter/value@units)
DEBUG - value: A 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/flood_gun_current [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/1_as_loaded__Survey/sample/flood_gun_current" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current):
DEBUG - 
                     Current of low-energy electrons to the sample for charge neutralization.
                
DEBUG - documentation (NXsample.nxdl.xml:/ENVIRONMENT):
DEBUG - 
             Any environmental or external stimuli/measurements.
             These can include, among others:
             applied pressure, surrounding gas phase and gas pressure,
             external electric/magnetic/mechanical fields, temperature, ...
        
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - 
         Parameters for controlling external conditions
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/flood_gun_current@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/flood_gun_current/flood_gun [NXxps::/NXentry/NXsample/NXenvironment/NXactuator]): <HDF5 group "/1_as_loaded__Survey/sample/flood_gun_current/flood_gun" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current/flood_gun
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current/flood_gun):
DEBUG - 
                         Flood gun creating a current of low-energy electrons.
                         
                         This should be a link to /entry/instrument/flood_gun.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/ACTUATOR):
DEBUG - 
             Any actuator used to control the environment. This can be linked to an actuator
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/flood_gun_current/flood_gun@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/flood_gun_current/flood_gun
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/flood_gun_current/flood_gun/current): <HDF5 dataset "current": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXactuator.nxdl.xml:/OUTPUT
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/OUTPUT):
DEBUG - 
             Any output that the actuator produces.
             For example, a heater can have the field heater_power(NX_FLOAT).
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/flood_gun_current/flood_gun/current@units)
DEBUG - value: A 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXactuator.nxdl.xml:/OUTPUT
DEBUG - NXactuator.nxdl.xml:/OUTPUT@units [NX_ANY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/flood_gun_current/flood_gun/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'FG 22/35' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/flood_gun_current/flood_gun/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: b'current' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/physical_quantity
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/physical_quantity):
DEBUG - 
             Name for the physical quantity effected by the actuation
             
             Examples:
             temperature | pH | magnetic_field | electric_field | current | conductivity | resistance | voltage |
             pressure | flow | stress | strain | shear | surface_pressure
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/flood_gun_current/flood_gun/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'low energy electron source' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/gas_pressure [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/1_as_loaded__Survey/sample/gas_pressure" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure):
DEBUG - 
                     Gas pressure surrounding the sample.
                
DEBUG - documentation (NXsample.nxdl.xml:/ENVIRONMENT):
DEBUG - 
             Any environmental or external stimuli/measurements.
             These can include, among others:
             applied pressure, surrounding gas phase and gas pressure,
             external electric/magnetic/mechanical fields, temperature, ...
        
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - 
         Parameters for controlling external conditions
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/gas_pressure@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure
NXsample.nxdl.xml:/ENVIRONMENT
NXenvironment.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/gas_pressure/pressure_gauge [NXxps::/NXentry/NXsample/NXenvironment/NXsensor]): <HDF5 group "/1_as_loaded__Survey/sample/gas_pressure/pressure_gauge" (4 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure/pressure_gauge
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure/pressure_gauge):
DEBUG - 
                         Gauge measuring the gas pressure.
                         
                         This should be a link to /entry/instrument/pressure_gauge.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/SENSOR):
DEBUG - 
             Any sensor used to monitor the environment. This can be linked to a sensor
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
         A sensor used to monitor an external condition
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/gas_pressure/pressure_gauge@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/gas_pressure/pressure_gauge
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/gas_pressure/pressure_gauge/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: b'pressure' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/measurement
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - 
             name for measured signal
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/gas_pressure/pressure_gauge/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'Atmion' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - 
             Name for the sensor
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/gas_pressure/pressure_gauge/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'hot-filament ionization gauge' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the measurement.
             Examples (suggestions but not restrictions):
             
             :Temperature:
               J | K | T | E | R | S | Pt100 | Rh/Fe
             :pH:
               Hg/Hg2Cl2 | Ag/AgCl | ISFET
             :Ion selective electrode:
               specify species; e.g. Ca2+
             :Magnetic field:
               Hall
             :Surface pressure:
               wilhelmy plate
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/gas_pressure/pressure_gauge/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 1e-09 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
             nominal setpoint or average value
             - need [n] as may be a vector
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/gas_pressure/pressure_gauge/value@units)
DEBUG - value: mbar 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/history [NXxps::/NXentry/NXsample/NXhistory]): <HDF5 group "/1_as_loaded__Survey/sample/history" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history
NXsample.nxdl.xml:/history
NXhistory.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history):
DEBUG - 
                     A set of activities that occurred to the sample prior to/during photoemission
                     experiment.
                
DEBUG - documentation (NXsample.nxdl.xml:/history):
DEBUG - 
             A set of physical processes that occurred to the sample prior/during experiment.
        
DEBUG - documentation (NXhistory.nxdl.xml:):
DEBUG - 
         A set of activities that occurred to a physical entity prior/during experiment.
         
         Ideally, a full report of the previous operations (or links to a chain of operations).
         Alternatively, notes allow for additional descriptors in any format.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/history@NX_class)
DEBUG - value: NXhistory 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history
NXsample.nxdl.xml:/history
NXhistory.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/history/sample_preparation [NXxps::/NXentry/NXsample/NXhistory/NXphysical_process]): <HDF5 group "/1_as_loaded__Survey/sample/history/sample_preparation" (3 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXphysical_process']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation
NXhistory.nxdl.xml:/PHYSICAL_PROCESS
NXphysical_process.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation):
DEBUG - 
                         Details about the sample preparation for the photoemission experiment (e.g. UHV cleaving,
                         in-situ growth, sputtering/annealing, etc.).
                    
DEBUG - documentation (NXhistory.nxdl.xml:/PHYSICAL_PROCESS):
DEBUG - 
             Any physical process that was performed on the physical entity prior or during the
             experiment.
        
DEBUG - documentation (NXphysical_process.nxdl.xml:):
DEBUG - 
         A planned or unplanned process which results in physical changes in a specified material.
         
         A physical change involve changes only in intermolecular forces, not in the chemical bonds.
         Examples include sample preparation, material transformation, or (partially) destructive measurements.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/history/sample_preparation@NX_class)
DEBUG - value: NXphysical_process 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXphysical_process']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation
NXhistory.nxdl.xml:/PHYSICAL_PROCESS
NXphysical_process.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/history/sample_preparation/description): <HDF5 dataset "description": shape (), type "|O">
DEBUG - value: b'From third party' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXphysical_process', 'NX_CHAR']
DEBUG - classes:
NXphysical_process.nxdl.xml:/description
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXphysical_process.nxdl.xml:/description):
DEBUG - 
             Short description of the activity.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/history/sample_preparation/end_time): <HDF5 dataset "end_time": shape (), type "|O">
DEBUG - value: b'2022-04-08T11:06:42.200000+00:00' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXphysical_process', 'NX_DATE_TIME']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/end_time
NXphysical_process.nxdl.xml:/end_time
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/end_time):
DEBUG - 
DEBUG - documentation (NXphysical_process.nxdl.xml:/end_time):
DEBUG - 
             ISO 8601 formatted time code (with local time zone offset to UTC information
             included) when this process ended.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/history/sample_preparation/start_time): <HDF5 dataset "start_time": shape (), type "|O">
DEBUG - value: b'2022-04-08T11:02:38.020000+00:00' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXhistory', 'NXphysical_process', 'NX_DATE_TIME']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/start_time
NXphysical_process.nxdl.xml:/start_time
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/history/sample_preparation/start_time):
DEBUG - 
DEBUG - documentation (NXphysical_process.nxdl.xml:/start_time):
DEBUG - 
             ISO 8601 formatted time code (with local time zone offset to UTC information
             included) when this process started.
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'1 as-loaded' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/name
NXsample.nxdl.xml:/name
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/name):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:/name):
DEBUG - 
             Descriptive name of sample
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/situation): <HDF5 dataset "situation": shape (), type "|O">
DEBUG - value: b'vacuum' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/situation
NXsample.nxdl.xml:/situation
DEBUG - <<RECOMMENDED>>
DEBUG - enumeration (NXmpes.nxdl.xml:/ENTRY/SAMPLE/situation):
DEBUG - -> vacuum
DEBUG - -> inert atmosphere
DEBUG - -> oxidising atmosphere
DEBUG - -> reducing atmosphere
DEBUG - enumeration (NXsample.nxdl.xml:/situation):
DEBUG - -> air
DEBUG - -> vacuum
DEBUG - -> inert atmosphere
DEBUG - -> oxidising atmosphere
DEBUG - -> reducing atmosphere
DEBUG - -> sealed can
DEBUG - -> other
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/situation):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:/situation):
DEBUG - 
             The atmosphere will be one of the components, which is where
             its details will be stored; the relevant components will be
             indicated by the entry in the sample_component member.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/substance [NXxps::/NXentry/NXsample/NXsubstance]): <HDF5 group "/1_as_loaded__Survey/sample/substance" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXsubstance']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/SUBSTANCE
NXsample.nxdl.xml:/SUBSTANCE
NXsubstance.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/SUBSTANCE):
DEBUG - 
                     For samples containing a single pure substance. For mixtures use the
                     NXsample_component_set and NXsample_component group in NXsample instead.
                
DEBUG - documentation (NXsample.nxdl.xml:/SUBSTANCE):
DEBUG - 
             If the sample is made from a pure substance and cannot be further divided using
             NXsample_component.
        
DEBUG - documentation (NXsubstance.nxdl.xml:):
DEBUG - 
         A form of matter with a constant, definite chemical composition.
         
         Examples can be single chemical elements, chemical compunds, or alloys.
         For further information, see https://en.wikipedia.org/wiki/Chemical_substance.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/substance@NX_class)
DEBUG - value: NXsubstance 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXsubstance']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/SUBSTANCE
NXsample.nxdl.xml:/SUBSTANCE
NXsubstance.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/substance/molecular_formula_hill): <HDF5 dataset "molecular_formula_hill": shape (), type "|O">
DEBUG - value: b'CoO' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXsubstance', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/SUBSTANCE/molecular_formula_hill
NXsubstance.nxdl.xml:/molecular_formula_hill
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/SUBSTANCE/molecular_formula_hill):
DEBUG - 
                         The chemical formula of the sample (using CIF conventions).
                    
DEBUG - documentation (NXsubstance.nxdl.xml:/molecular_formula_hill):
DEBUG - 
             The chemical formula specified using CIF conventions.
             Abbreviated version of CIF standard:107
             This is the *Hill* system used by Chemical Abstracts.
             
             * Only recognized element symbols may be used.
             * Each element symbol is followed by a 'count' number. A count of '1' may be omitted.
             * A space or parenthesis must separate each cluster of (element symbol + count).
             * Where a group of elements is enclosed in parentheses, the multiplier for the
               group must follow the closing parentheses. That is, all element and group
               multipliers are assumed to be printed as subscripted numbers.
             * Unless the elements are ordered in a manner that corresponds to their chemical
               structure, the order of the elements within any group or moiety depends on
               whether or not carbon is present.
             * If carbon is present, the order should be:
               - C, then H, then the other elements in alphabetical order of their symbol.
               - If carbon is not present, the elements are listed purely in alphabetic order of their symbol.
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/temperature [NXxps::/NXentry/NXsample/NXenvironment]): <HDF5 group "/1_as_loaded__Survey/sample/temperature" (2 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature
NXenvironment.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature):
DEBUG - 
                     Sample temperature (either controlled or just measured).
                
DEBUG - documentation (NXenvironment.nxdl.xml:):
DEBUG - 
         Parameters for controlling external conditions
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/temperature@NX_class)
DEBUG - value: NXenvironment 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature
NXenvironment.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/temperature/sample_heater [NXxps::/NXentry/NXsample/NXenvironment/NXactuator]): <HDF5 group "/1_as_loaded__Survey/sample/temperature/sample_heater" (5 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature/sample_heater
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature/sample_heater):
DEBUG - 
                         Device to heat the sample.
                         This should be a link to /entry/instrument/manipulator/sample_heater.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/ACTUATOR):
DEBUG - 
             Any actuator used to control the environment. This can be linked to an actuator
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXactuator.nxdl.xml:):
DEBUG - 
         An actuator used to control an external condition.
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/temperature/sample_heater@NX_class)
DEBUG - value: NXactuator 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature/sample_heater
NXenvironment.nxdl.xml:/ACTUATOR
NXactuator.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/temperature/sample_heater/heater_power): <HDF5 dataset "heater_power": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXactuator.nxdl.xml:/OUTPUT
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/OUTPUT):
DEBUG - 
             Any output that the actuator produces.
             For example, a heater can have the field heater_power(NX_FLOAT).
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/temperature/sample_heater/heater_power@units)
DEBUG - value: W 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_FLOAT']
DEBUG - classes:
NXactuator.nxdl.xml:/OUTPUT
DEBUG - NXactuator.nxdl.xml:/OUTPUT@units [NX_ANY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/temperature/sample_heater/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'Coherent Compact Evolution IR Diode LASER (DILAS)' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/name):
DEBUG - 
             Name of the actuator
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/temperature/sample_heater/physical_quantity): <HDF5 dataset "physical_quantity": shape (), type "|O">
DEBUG - value: b'temperature' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/physical_quantity
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/physical_quantity):
DEBUG - 
             Name for the physical quantity effected by the actuation
             
             Examples:
             temperature | pH | magnetic_field | electric_field | current | conductivity | resistance | voltage |
             pressure | flow | stress | strain | shear | surface_pressure
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/temperature/sample_heater/pid [NXxps::/NXentry/NXsample/NXenvironment/NXactuator/NXpid]): <HDF5 group "/1_as_loaded__Survey/sample/temperature/sample_heater/pid" (1 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NXpid']
DEBUG - classes:
NXactuator.nxdl.xml:/PID
NXpid.nxdl.xml:
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/PID):
DEBUG - 
             If the actuator is PID-controlled, the settings of the PID controller can be
             stored here.
        
DEBUG - documentation (NXpid.nxdl.xml:):
DEBUG - 
         Contains the settings of a PID controller.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/temperature/sample_heater/pid@NX_class)
DEBUG - value: NXpid 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NXpid']
DEBUG - classes:
NXactuator.nxdl.xml:/PID
NXpid.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/temperature/sample_heater/pid/setpoint): <HDF5 dataset "setpoint": shape (), type "<f8">
DEBUG - value: 298.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NXpid', 'NX_FLOAT']
DEBUG - classes:
NXactuator.nxdl.xml:/PID/setpoint
NXpid.nxdl.xml:/setpoint
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/PID/setpoint):
DEBUG - 
                 Nominal actuator setpoint.
                 Can be a scalar or a vector (of [n] actuations).
            
DEBUG - documentation (NXpid.nxdl.xml:/setpoint):
DEBUG - 
             The Setpoint(s) used as an input for the PID controller.
             
             It can also be a link to an NXsensor.value field.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/temperature/sample_heater/pid/setpoint@units)
DEBUG - value: K 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NXpid', 'NX_FLOAT']
DEBUG - classes:
NXactuator.nxdl.xml:/PID/setpoint
NXpid.nxdl.xml:/setpoint
DEBUG - NXactuator.nxdl.xml:/PID/setpoint@units [NX_ANY]
DEBUG - NXpid.nxdl.xml:/setpoint@units [NX_ANY]
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/temperature/sample_heater/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'IR diode laser' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXactuator', 'NX_CHAR']
DEBUG - classes:
NXactuator.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXactuator.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the actuation.
             
             Examples (suggestions, but not restrictions):
             
             :Temperature: laser | gas lamp | filament | resistive
             :Pressure: anvil cell
             :Voltage: potentiostat
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/temperature/temperature_sensor [NXxps::/NXentry/NXsample/NXenvironment/NXsensor]): <HDF5 group "/1_as_loaded__Survey/sample/temperature/temperature_sensor" (5 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature/temperature_sensor
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature/temperature_sensor):
DEBUG - 
                         Temperature sensor measuring the sample temperature.
                         This should be a link to /entry/instrument/manipulator/temperature_sensor.
                    
DEBUG - documentation (NXenvironment.nxdl.xml:/SENSOR):
DEBUG - 
             Any sensor used to monitor the environment. This can be linked to a sensor
             defined in an NXinstrument instance.
        
DEBUG - documentation (NXsensor.nxdl.xml:):
DEBUG - 
         A sensor used to monitor an external condition
         
         The condition itself is described in :ref:`NXenvironment`.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/temperature/temperature_sensor@NX_class)
DEBUG - value: NXsensor 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/SAMPLE/temperature/temperature_sensor
NXenvironment.nxdl.xml:/SENSOR
NXsensor.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/temperature/temperature_sensor/attached_to): <HDF5 dataset "attached_to": shape (), type "|O">
DEBUG - value: b'sample' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/attached_to
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/attached_to):
DEBUG - 
             where sensor is attached to ("sample" | "can")
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/temperature/temperature_sensor/measurement): <HDF5 dataset "measurement": shape (), type "|O">
DEBUG - value: b'temperature' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/measurement
DEBUG - <<OPTIONAL>>
DEBUG - enumeration (NXsensor.nxdl.xml:/measurement):
DEBUG - -> temperature
DEBUG - -> pH
DEBUG - -> magnetic_field
DEBUG - -> electric_field
DEBUG - -> current
DEBUG - -> conductivity
DEBUG - -> resistance
DEBUG - -> voltage
DEBUG - -> pressure
DEBUG - -> flow
DEBUG - -> stress
DEBUG - -> strain
DEBUG - -> shear
DEBUG - -> surface_pressure
DEBUG - documentation (NXsensor.nxdl.xml:/measurement):
DEBUG - 
             name for measured signal
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/temperature/temperature_sensor/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'type K thermocouple' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/name
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/name):
DEBUG - 
             Name for the sensor
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/temperature/temperature_sensor/type): <HDF5 dataset "type": shape (), type "|O">
DEBUG - value: b'type K thermocouple' 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_CHAR']
DEBUG - classes:
NXsensor.nxdl.xml:/type
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/type):
DEBUG - 
             The type of hardware used for the measurement.
             Examples (suggestions but not restrictions):
             
             :Temperature:
               J | K | T | E | R | S | Pt100 | Rh/Fe
             :pH:
               Hg/Hg2Cl2 | Ag/AgCl | ISFET
             :Ion selective electrode:
               specify species; e.g. Ca2+
             :Magnetic field:
               Hall
             :Surface pressure:
               wilhelmy plate
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/temperature/temperature_sensor/value): <HDF5 dataset "value": shape (), type "<f8">
DEBUG - value: 298.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXsensor.nxdl.xml:/value):
DEBUG - 
             nominal setpoint or average value
             - need [n] as may be a vector
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/temperature/temperature_sensor/value@units)
DEBUG - value: K 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXenvironment', 'NXsensor', 'NX_FLOAT']
DEBUG - classes:
NXsensor.nxdl.xml:/value
DEBUG - NXsensor.nxdl.xml:/value@units [NX_ANY]
DEBUG - ===== GROUP (//1_as_loaded__Survey/sample/transformations [NXxps::/NXentry/NXsample/NXtransformations]): <HDF5 group "/1_as_loaded__Survey/sample/transformations" (3 members)>
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations
NXsample.nxdl.xml:/TRANSFORMATIONS
NXtransformations.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations):
DEBUG - 
DEBUG - documentation (NXsample.nxdl.xml:/TRANSFORMATIONS):
DEBUG - 
             This is the group recommended for holding the chain of translation
             and rotation operations necessary to position the component within
             the instrument. The dependency chain may however traverse similar groups in
             other component groups.
        
DEBUG - documentation (NXtransformations.nxdl.xml:):
DEBUG - 
         Collection of axis-based translations and rotations to describe a geometry.
         May also contain axes that do not move and therefore do not have a transformation
         type specified, but are useful in understanding coordinate frames within which
         transformations are done, or in documenting important directions, such as the
         direction of gravity.
         
         A nested sequence of transformations lists the translation and rotation steps
         needed to describe the position and orientation of any movable or fixed device.
         
         There will be one or more transformations (axes) defined by one or more fields
         for each transformation. Transformations can also be described by NXlog groups when
         the values change with time. The all-caps name ``AXISNAME`` designates the
         particular axis generating a transformation (e.g. a rotation axis or a translation
         axis or a general axis).   The attribute ``units="NX_TRANSFORMATION"`` designates the
         units will be appropriate to the ``transformation_type`` attribute:
         
         * ``NX_LENGTH`` for ``translation``
         * ``NX_ANGLE`` for ``rotation``
         * ``NX_UNITLESS`` for axes for which no transformation type is specified
         
         This class will usually contain all axes of a sample stage or goniometer or
         a detector. The NeXus default :ref:`McSTAS coordinate frame<Design-CoordinateSystem>`
         is assumed, but additional useful coordinate axes may be defined by using axes for which
         no transformation type has been specified.
         
         **Transformation chain**
         
         The entry point of a chain of transformations is a field called ``depends_on``
         will be outside of this class and points to a field in here. Following the chain may
         also require following ``depends_on`` links to transformations outside, for example
         to a common base table.  If a relative path is given, it is relative to the group
         enclosing the ``depends_on`` specification.
         
         For a chain of three transformations, where :math:`T_1` depends on :math:`T_2`
         which in turn depends on :math:`T_3`, the final *active* transformation
         matrix :math:`T_f` is
         
         .. math:: T_f = T_3 . T_2 . T_1
         
         For example when positioning a flat detector, its pixel positions in the laboratory
         reference frame (:ref:`McSTAS coordinate frame<Design-CoordinateSystem>` by default)
         can be calculated by
         
         .. math:: X_\text{lab} = T_f . X_\text{pixel} = T_3 . T_2 . T_1 . X_\text{pixel}
         
         Note that :math:`T_1` comes first in the *depends-on* chain and is also applied first
         to the pixel coordinates.
         
         When we say transformation :math:`A` *depends on* transformation :math:`B` we mean that
         the physical motor that realizes :math:`A` is *stacked on top of* the motor that realizes :math:`B`.
         So the activate coordinate transformation :math:`A` needs to be applied to a coordinate
         before applying :math:`B`. In other words :math:`X' = B . A . X`.
         
         **Transformation matrix**
         
         In explicit terms, the transformations are a subset of affine transformations expressed as
         4x4 active transformation matrices that act on homogeneous coordinates, :math:`X=[x,y,z,1]^T`.
         
         For rotation and translation,
         
         .. math:: T_r &= \begin{pmatrix} R & o \\ 0_3 & 1 \end{pmatrix} \\ T_t &= \begin{pmatrix} I_3  & t + o \\ 0_3 & 1 \end{pmatrix}
         
         where :math:`R` is the usual 3x3 rotation matrix, :math:`o` is an offset vector,
         :math:`0_3` is a row of 3 zeros, :math:`I_3` is the 3x3 identity matrix and
         :math:`t` is the translation vector.
         
         :math:`o` is given by the ``offset`` attribute, :math:`t` is given by the ``vector``
         attribute multiplied by the field value, and :math:`R` is defined as a rotation
         about an axis in the direction of ``vector``, of angle of the field value.
         
         **Usage**
         
         One possible use of ``NXtransformations`` is to define the motors and
         transformations for a diffractometer (goniometer).  Such use is mentioned
         in the ``NXinstrument`` base class.  Use one ``NXtransformations`` group
         for each diffractometer and name the group appropriate to the device.
         Collecting the motors of a sample table or xyz-stage in an NXtransformations
         group is equally possible.
         
         Following the section on the general description of axis in NXtransformations is a section which
         documents the fields commonly used within NeXus for positioning purposes and their meaning. Whenever
         there is a need for positioning a beam line component please use the existing names. Use as many fields
         as needed in order to position the component. Feel free to add more axis if required. In the description
         given below, only those atttributes which are defined through the name are spcified. Add the other attributes
         of the full set:
         
         * vector
         * offset
         * transformation_type
         * depends_on
         
         as needed.
         
         **Example 1: goniometer**
         
         Position a sample mounted on a goniometer in the :ref:`McSTAS coordinate frame<Design-CoordinateSystem>`.
         
         The sample is oriented as follows
         
         .. math:: X_\text{lab} = R(\vec{v}_\omega, \omega) .
                                  T(\vec{v}_z, \text{sam}_z) .
                                  T(\vec{v}_y, \text{sam}_y) .
                                  T(\vec{v}_x, \text{sam}_x) .
                                  R(\vec{v}_\chi, \chi) .
                                  R(\vec{v}_\varphi, \varphi) . X_s
         
         where
         
         * :math:`R(\vec{v},a)` is a rotation around vector :math:`\vec{v}` with angle :math:`a`
         * :math:`T(\vec{u},t)` is a translation along vector :math:`\vec{u}` over a distance :math:`t`
         * :math:`X_s` a coordinate in the sample reference frame.
         
         .. code-block::
         
           entry:NXentry
             sample:NXsample
               depends_on=transformations/phi
               transformations:NXtransformations
                 phi=0
                   @depends_on=chi
                   @transformation_type=rotation
                   @vector=[-1 -0.0037 -0.002]
                   @units=degrees
                 chi=0
                   @depends_on=sam_x
                   @transformation_type=rotation
                   @vector=[0.0046 0.0372 0.9993]
                   @units=degrees
                 sam_x=0
                   @depends_on=sam_y
                   @transformation_type=translation
                   @vector=[1 0 0]
                   @units=mm
                 sam_y=0
                   @depends_on=sam_z
                   @transformation_type=translation
                   @vector=[0 1 0]
                   @units=mm
                 sam_z=0
                   @depends_on=omega
                   @transformation_type=translation
                   @vector=[0 0 1]
                   @units=mm
                 omega=174
                   @depends_on=.
                   @transformation_type=rotation
                   @vector=[-1 0 0]
                   @units=degrees
         
         **Example 2: different coordinate system**
         
         Define a laboratory reference frame with the X-axis along the beam and the Z-axis opposite to the direction of gravity.
         Three point detectors are positioned in this reference:
         
         * *transmission*:
             * point detector in the beam
             * 20 cm downstream from the sample (the origin of the reference frame)
         * *vertical*:
             * point detector 10 cm downstream from the sample
             * making an angle of 5 degrees with the beam w.r.t. the sample
             * positioned in the XZ-plane above the XY-plane
         * *horizontal*:
             * point detector 11 cm downstream from the sample
             * making an angle of 6 degrees with the beam w.r.t. the sample
             * positioned in the XY-plane above the XZ-plane
         
         The coordinates of the point detectors in the laboratory reference frame are
         
         * *transmission*: :math:`X_\text{lab} = T_x(20) . X_d`
         * *vertical*: :math:`X_\text{lab} = R_y(-5) . T_x(10) . X_d`
         * *horizontal*: :math:`X_\text{lab} = R_x(-90) . R_y(-6) . T_x(11) . X_d`
         
         where
         
         * :math:`T_x`, :math:`T_y`, :math:`T_z`: active transformation matrices for translation along the X, Y and Z axes
         * :math:`R_x`, :math:`R_y`, :math:`R_z`: active transformation matrices for rotation around the X, Y and Z axes
         * :math:`X_d` is a coordinate in the detector reference frame.
         
         Note that as these are point detectors, we only have one coordinate :math:`X_d=[0,0,0,1]^T`.
         
         .. code-block::
         
           entry:NXentry
             instrument:NXinstrument
               vertical:NXdetector
                 depends_on=position/distance
                 position:NXtransformations
                   distance=10         # move downstream from the sample
                     @depends_on=polar
                     @units=cm
                     @vector=[1 0 0]
                   polar=5             # title above the horizontal plane
                     @depends_on=azimuth
                     @units=degrees
                     @vector=[0 -1 0]
                   azimuth=0         # stay in the vertical plane
                     @depends_on=/entry/coordinate_system/beam
                     @units=degrees
                     @vector=[-1 0 0]
               horizontal:NXdetector
                 depends_on=position/distance
                 position:NXtransformations
                   distance=11         # move downstream from the sample
                     @depends_on=polar
                     @units=cm
                     @vector=[1 0 0]
                   polar=6             # title above the horizontal plane
                     @depends_on=azimuth
                     @units=degrees
                     @vector=[0 -1 0]
                   azimuth=90           # rotate to the horizontal plane
                     @depends_on=/entry/coordinate_system/beam
                     @units=degrees
                     @vector=[-1 0 0]
               transmission:NXdetector
                 depends_on=position/distance
                 position:NXtransformations
                   distance=20         # move downstream from the sample
                     @depends_on=/entry/coordinate_system/beam
                     @units=cm
                     @vector=[1 0 0]
             coordinate_system:NXtransformations
               beam=NaN               # value is never used
                 @depends_on=gravity
                 @vector=[1 0 0]     # X-axis points in the beam direction
               gravity=NaN             # value is never used
                 @depends_on=.         # end of the chain
                 @vector=[0 0 -1]       # Z-axis points up
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations@NX_class)
DEBUG - value: NXtransformations 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations
NXsample.nxdl.xml:/TRANSFORMATIONS
NXtransformations.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/transformations/sample_normal_polar_angle_of_tilt): <HDF5 dataset "sample_normal_polar_angle_of_tilt": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt):
DEBUG - 
                         Polar tilt of the sample with respect to the upward z-direction, defined by
                         the sample stage.
                    
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME):
DEBUG - 
             Units need to be appropriate for translation or rotation
             
             The name of this field is not forced.  The user is free to use any name
             that does not cause confusion.  When using more than one ``AXISNAME`` field,
             make sure that each field name is unique in the same group, as required
             by HDF5.
             
             The values given should be the start points of exposures for the corresponding
             frames.  The end points should be given in ``AXISNAME_end``.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations/sample_normal_polar_angle_of_tilt@depends_on)
DEBUG - value: sample_normal_tilt_azimuth_angle 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt@depends_on - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt/depends_on):
DEBUG - -> sample_normal_tilt_azimuth_angle
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt/depends_on):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@depends_on - [NX_CHAR]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/depends_on):
DEBUG - 
                 Points to the path of a field defining the axis on which this instance of
                 NXtransformations depends or the string ".". It can also point to an instance of
                 ``NX_coordinate_system`` if this transformation depends on it.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations/sample_normal_polar_angle_of_tilt@transformation_type)
DEBUG - value: rotation 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt@transformation_type - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt/transformation_type):
DEBUG - -> rotation
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt/transformation_type):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@transformation_type - [NX_CHAR]
DEBUG - enumeration (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - -> translation
DEBUG - -> rotation
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - 
                 The transformation_type may be ``translation``, in which case the
                 values are linear displacements along the axis, ``rotation``,
                 in which case the values are angular rotations around the axis.
                 
                 If this attribute is omitted, this is an axis for which there
                 is no motion to be specifies, such as the direction of gravity,
                 or the direction to the source, or a basis vector of a
                 coordinate frame.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations/sample_normal_polar_angle_of_tilt@units)
DEBUG - value: degree  
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt@units [NX_ANGLE]
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@units [NX_TRANSFORMATION]
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations/sample_normal_polar_angle_of_tilt@vector)
DEBUG - value: [ 0 -1  0] 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt@vector - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt/vector):
DEBUG - -> [0, -1, 0]
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_polar_angle_of_tilt/vector):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@vector - [NX_NUMBER]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/vector):
DEBUG - 
                 Three values that define the axis for this transformation.
                 The axis should be normalized to unit length, making it
                 dimensionless.  For ``rotation`` axes, the direction should be
                 chosen for a right-handed rotation with increasing angle.
                 For ``translation`` axes the direction should be chosen for
                 increasing displacement. For general axes, an appropriate direction
                 should be chosen.
            
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/transformations/sample_normal_tilt_azimuth_angle): <HDF5 dataset "sample_normal_tilt_azimuth_angle": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle):
DEBUG - 
                         Azimuthal rotation of the sample from the y-direction towards the operator,
                         defined by the sample stage.
                    
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME):
DEBUG - 
             Units need to be appropriate for translation or rotation
             
             The name of this field is not forced.  The user is free to use any name
             that does not cause confusion.  When using more than one ``AXISNAME`` field,
             make sure that each field name is unique in the same group, as required
             by HDF5.
             
             The values given should be the start points of exposures for the corresponding
             frames.  The end points should be given in ``AXISNAME_end``.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations/sample_normal_tilt_azimuth_angle@depends_on)
DEBUG - value: /1_as_loaded__Survey/geometries/xps_coordinate_system/coordinate_transformations/z_rotation 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle@depends_on - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle/depends_on):
DEBUG - 
                             This should point to the last element of the coordinate system transformations defined in
                             /entry/geometries/xps_coordinate_system/coordinate_system_transformations.
                        
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@depends_on - [NX_CHAR]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/depends_on):
DEBUG - 
                 Points to the path of a field defining the axis on which this instance of
                 NXtransformations depends or the string ".". It can also point to an instance of
                 ``NX_coordinate_system`` if this transformation depends on it.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations/sample_normal_tilt_azimuth_angle@transformation_type)
DEBUG - value: rotation 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle@transformation_type - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle/transformation_type):
DEBUG - -> rotation
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle/transformation_type):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@transformation_type - [NX_CHAR]
DEBUG - enumeration (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - -> translation
DEBUG - -> rotation
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - 
                 The transformation_type may be ``translation``, in which case the
                 values are linear displacements along the axis, ``rotation``,
                 in which case the values are angular rotations around the axis.
                 
                 If this attribute is omitted, this is an axis for which there
                 is no motion to be specifies, such as the direction of gravity,
                 or the direction to the source, or a basis vector of a
                 coordinate frame.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations/sample_normal_tilt_azimuth_angle@units)
DEBUG - value: degree 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle@units [NX_ANGLE]
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@units [NX_TRANSFORMATION]
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations/sample_normal_tilt_azimuth_angle@vector)
DEBUG - value: [ 0  0 -1] 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle@vector - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle/vector):
DEBUG - -> [0, 0, -1]
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_normal_tilt_azimuth_angle/vector):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@vector - [NX_NUMBER]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/vector):
DEBUG - 
                 Three values that define the axis for this transformation.
                 The axis should be normalized to unit length, making it
                 dimensionless.  For ``rotation`` axes, the direction should be
                 chosen for a right-handed rotation with increasing angle.
                 For ``translation`` axes the direction should be chosen for
                 increasing displacement. For general axes, an appropriate direction
                 should be chosen.
            
DEBUG - ===== FIELD (//1_as_loaded__Survey/sample/transformations/sample_rotation_angle): <HDF5 dataset "sample_rotation_angle": shape (), type "<f8">
DEBUG - value: 0.0 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle):
DEBUG - 
                         Clockwise rotation about the sample normal.
                    
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME):
DEBUG - 
             Units need to be appropriate for translation or rotation
             
             The name of this field is not forced.  The user is free to use any name
             that does not cause confusion.  When using more than one ``AXISNAME`` field,
             make sure that each field name is unique in the same group, as required
             by HDF5.
             
             The values given should be the start points of exposures for the corresponding
             frames.  The end points should be given in ``AXISNAME_end``.
        
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations/sample_rotation_angle@depends_on)
DEBUG - value: sample_normal_tilt_azimuth_angle 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle@depends_on - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle/depends_on):
DEBUG - -> sample_normal_polar_angle_of_tilt
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle/depends_on):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@depends_on - [NX_CHAR]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/depends_on):
DEBUG - 
                 Points to the path of a field defining the axis on which this instance of
                 NXtransformations depends or the string ".". It can also point to an instance of
                 ``NX_coordinate_system`` if this transformation depends on it.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations/sample_rotation_angle@transformation_type)
DEBUG - value: rotation 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle@transformation_type - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle/transformation_type):
DEBUG - -> rotation
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle/transformation_type):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@transformation_type - [NX_CHAR]
DEBUG - enumeration (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - -> translation
DEBUG - -> rotation
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/transformation_type):
DEBUG - 
                 The transformation_type may be ``translation``, in which case the
                 values are linear displacements along the axis, ``rotation``,
                 in which case the values are angular rotations around the axis.
                 
                 If this attribute is omitted, this is an axis for which there
                 is no motion to be specifies, such as the direction of gravity,
                 or the direction to the source, or a basis vector of a
                 coordinate frame.
            
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations/sample_rotation_angle@units)
DEBUG - value: degree 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle@units [NX_ANGLE]
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@units [NX_TRANSFORMATION]
DEBUG - ===== ATTRS (//1_as_loaded__Survey/sample/transformations/sample_rotation_angle@vector)
DEBUG - value: [ 0  0 -1] 
DEBUG - classpath: ['NXentry', 'NXsample', 'NXtransformations', 'NX_NUMBER']
DEBUG - classes:
NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle
NXtransformations.nxdl.xml:/AXISNAME
DEBUG - NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle@vector - [NX_CHAR]
DEBUG - <<REQUIRED>>
DEBUG - enumeration (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle/vector):
DEBUG - -> [0, 0, -1]
DEBUG - documentation (NXxps.nxdl.xml:/ENTRY/SAMPLE/transformations/sample_rotation_angle/vector):
DEBUG - 
DEBUG - NXtransformations.nxdl.xml:/AXISNAME@vector - [NX_NUMBER]
DEBUG - documentation (NXtransformations.nxdl.xml:/AXISNAME/vector):
DEBUG - 
                 Three values that define the axis for this transformation.
                 The axis should be normalized to unit length, making it
                 dimensionless.  For ``rotation`` axes, the direction should be
                 chosen for a right-handed rotation with increasing angle.
                 For ``translation`` axes the direction should be chosen for
                 increasing displacement. For general axes, an appropriate direction
                 should be chosen.
            
DEBUG - ===== FIELD (//1_as_loaded__Survey/start_time): <HDF5 dataset "start_time": shape (), type "|O">
DEBUG - value: b'2022-04-08T11:47:02.020000+00:00' 
DEBUG - classpath: ['NXentry', 'NX_DATE_TIME']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/start_time
NXentry.nxdl.xml:/start_time
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/start_time):
DEBUG - 
                 Datetime of the start of the measurement.
                 Should be a ISO8601 date/time stamp. It is recommended to add an explicit time zone,
                 otherwise the local time zone is assumed per ISO8601.
            
DEBUG - documentation (NXentry.nxdl.xml:/start_time):
DEBUG - 
             Starting time of measurement
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/title): <HDF5 dataset "title": shape (), type "|O">
DEBUG - value: b'XPS Experiment' 
DEBUG - classpath: ['NXentry', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/title
NXentry.nxdl.xml:/title
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/title):
DEBUG - 
DEBUG - documentation (NXentry.nxdl.xml:/title):
DEBUG - 
             Extended title for entry
        
DEBUG - ===== GROUP (//1_as_loaded__Survey/user [NXxps::/NXentry/NXuser]): <HDF5 group "/1_as_loaded__Survey/user" (3 members)>
DEBUG - classpath: ['NXentry', 'NXuser']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/USER
NXentry.nxdl.xml:/USER
NXuser.nxdl.xml:
DEBUG - <<RECOMMENDED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/USER):
DEBUG - 
                 Contact information of at least the user of the instrument or the investigator
                 who performed this experiment. Adding multiple users if relevant is recommended.
            
DEBUG - documentation (NXentry.nxdl.xml:/USER):
DEBUG - 
DEBUG - documentation (NXuser.nxdl.xml:):
DEBUG - 
         Contact information for a user.
         
         The format allows more
         than one user with the same affiliation and contact information,
         but a second :ref:`NXuser` group should be used if they have different
         affiliations, etc.
    
DEBUG - ===== ATTRS (//1_as_loaded__Survey/user@NX_class)
DEBUG - value: NXuser 
DEBUG - classpath: ['NXentry', 'NXuser']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/USER
NXentry.nxdl.xml:/USER
NXuser.nxdl.xml:
DEBUG - @NX_class [NX_CHAR]
DEBUG - 
DEBUG - ===== FIELD (//1_as_loaded__Survey/user/affiliation): <HDF5 dataset "affiliation": shape (), type "|O">
DEBUG - value: b'Max Planck Institute for Chemical Energy Conversion' 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/USER/affiliation
NXuser.nxdl.xml:/affiliation
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/USER/affiliation):
DEBUG - 
                     Name of the affiliation of the user at the time when the experiment was
                     performed.
                
DEBUG - documentation (NXuser.nxdl.xml:/affiliation):
DEBUG - 
             Affiliation of user
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/user/email): <HDF5 dataset "email": shape (), type "|O">
DEBUG - value: b'lukas.pielsticker@cec.mpg.de' 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXuser.nxdl.xml:/email
DEBUG - <<OPTIONAL>>
DEBUG - documentation (NXuser.nxdl.xml:/email):
DEBUG - 
             Email of user
        
DEBUG - ===== FIELD (//1_as_loaded__Survey/user/name): <HDF5 dataset "name": shape (), type "|O">
DEBUG - value: b'Lukas Pielsticker' 
DEBUG - classpath: ['NXentry', 'NXuser', 'NX_CHAR']
DEBUG - classes:
NXmpes.nxdl.xml:/ENTRY/USER/name
NXuser.nxdl.xml:/name
DEBUG - <<REQUIRED>>
DEBUG - documentation (NXmpes.nxdl.xml:/ENTRY/USER/name):
DEBUG - 
                     Name of the user.
                
DEBUG - documentation (NXuser.nxdl.xml:/name):
DEBUG - 
             Name of user responsible for this entry
        
DEBUG - ========================
DEBUG - === Default Plotable ===
DEBUG - ========================
DEBUG - 
DEBUG - NXentry has been identified: /1_as_loaded__Survey
DEBUG - 
DEBUG - NXdata group has been identified: /1_as_loaded__Survey/data
DEBUG - ===== GROUP (//1_as_loaded__Survey/data [NXxps::/NXentry/NXdata]): <HDF5 group "/1_as_loaded__Survey/data" (4 members)>
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data@NX_class)
DEBUG - value: NXdata 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data@axes)
DEBUG - value: ['energy'] 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data@energy_indices)
DEBUG - value: 0 
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data@signal)
DEBUG - value: data 
DEBUG - 
DEBUG - Signal has been identified: /1_as_loaded__Survey/data/data
DEBUG - ===== FIELD (//1_as_loaded__Survey/data/data): <HDF5 dataset "data": shape (1351,), type "<f8">
DEBUG - value: [15598.7  15867.9  15651.5  ...   749.55   520.2    181.53] 
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data/data@long_name)
DEBUG - value: XPS intensity 
DEBUG - Dataset referenced as NXdata SIGNAL
DEBUG - ===== ATTRS (//1_as_loaded__Survey/data/data@units)
DEBUG - value: d 
DEBUG - 
DEBUG - For Axis #0, 1 axes have been identified: [<HDF5 dataset "energy": shape (1351,), type "<f8">]
